{"paragraphs":[{"text":"%sh\n# For prevent crash with other note's execution,\n# I recommend to restart spark interpreter.\n# ?? ?? ??? ??? ???? ?? ???? ??, ?? ??? ?? spark interpreter ????? ?? ?????.\n\ncurl -X PUT http://localhost:8080/api/interpreter/setting/restart/spark","user":"anonymous","dateUpdated":"2022-05-01T15:00:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0\r100  3988  100  3988    0     0   1408      0  0:00:02  0:00:02 --:--:--  1408\n{\"status\":\"OK\",\"message\":\"\",\"body\":{\"id\":\"spark\",\"name\":\"spark\",\"group\":\"spark\",\"properties\":{\"zeppelin.spark.concurrentSQL\":{\"name\":\"zeppelin.spark.concurrentSQL\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.R.knitr\":{\"name\":\"zeppelin.R.knitr\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.R.cmd\":{\"name\":\"zeppelin.R.cmd\",\"value\":\"R\",\"type\":\"string\"},\"zeppelin.R.image.width\":{\"name\":\"zeppelin.R.image.width\",\"value\":\"100%\",\"type\":\"number\"},\"zeppelin.spark.importImplicit\":{\"name\":\"zeppelin.spark.importImplicit\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.dep.additionalRemoteRepository\":{\"name\":\"zeppelin.dep.additionalRemoteRepository\",\"value\":\"spark-packages,http://dl.bintray.com/spark-packages/maven,false;\",\"type\":\"textarea\"},\"zeppelin.dep.localrepo\":{\"name\":\"zeppelin.dep.localrepo\",\"value\":\"local-repo\",\"type\":\"string\"},\"zeppelin.spark.sql.stacktrace\":{\"name\":\"zeppelin.spark.sql.stacktrace\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.spark.useHiveContext\":{\"name\":\"zeppelin.spark.useHiveContext\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.printREPLOutput\":{\"name\":\"zeppelin.spark.printREPLOutput\",\"value\":true,\"type\":\"checkbox\"},\"spark.cores.max\":{\"name\":\"spark.cores.max\",\"value\":\"3\",\"type\":\"number\"},\"spark.executor.memory\":{\"name\":\"spark.executor.memory\",\"value\":\"2g\",\"type\":\"string\"},\"zeppelin.spark.sql.interpolation\":{\"name\":\"zeppelin.spark.sql.interpolation\",\"value\":false,\"type\":\"checkbox\"},\"spark.driver.memory\":{\"name\":\"spark.driver.memory\",\"value\":\"2g\",\"type\":\"textarea\"},\"spark.app.name\":{\"name\":\"spark.app.name\",\"value\":\"Zeppelin\",\"type\":\"string\"},\"zeppelin.spark.maxResult\":{\"name\":\"zeppelin.spark.maxResult\",\"value\":\"1000\",\"type\":\"number\"},\"master\":{\"name\":\"master\",\"value\":\"local[*]\",\"type\":\"string\"},\"zeppelin.pyspark.python\":{\"name\":\"zeppelin.pyspark.python\",\"value\":\"python\",\"type\":\"string\"},\"args\":{\"name\":\"args\",\"value\":\"\",\"type\":\"textarea\"},\"zeppelin.spark.enableSupportedVersionCheck\":{\"name\":\"zeppelin.spark.enableSupportedVersionCheck\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.useNew\":{\"name\":\"zeppelin.spark.useNew\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.pyspark.useIPython\":{\"name\":\"zeppelin.pyspark.useIPython\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.uiWebUrl\":{\"name\":\"zeppelin.spark.uiWebUrl\",\"value\":\"\",\"type\":\"string\"},\"zeppelin.R.render.options\":{\"name\":\"zeppelin.R.render.options\",\"value\":\"out.format \\u003d \\u0027html\\u0027, comment \\u003d NA, echo \\u003d FALSE, results \\u003d \\u0027asis\\u0027, message \\u003d F, warning \\u003d F, fig.retina \\u003d 2\",\"type\":\"textarea\"},\"spark.jars\":{\"name\":\"spark.jars\",\"value\":\"/zeppelin/lib/sqlite-jdbc-3.23.1.jar\",\"type\":\"textarea\"}},\"status\":\"READY\",\"interpreterGroup\":[{\"name\":\"spark\",\"class\":\"org.apache.zeppelin.spark.SparkInterpreter\",\"defaultInterpreter\":true,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"sql\",\"class\":\"org.apache.zeppelin.spark.SparkSqlInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"sql\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"dep\",\"class\":\"org.apache.zeppelin.spark.DepInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"pyspark\",\"class\":\"org.apache.zeppelin.spark.PySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"ipyspark\",\"class\":\"org.apache.zeppelin.spark.IPySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionSupport\":true}},{\"name\":\"r\",\"class\":\"org.apache.zeppelin.spark.SparkRInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"r\",\"editOnDblClick\":false,\"completionSupport\":false}}],\"dependencies\":[],\"option\":{\"remote\":true,\"port\":-1,\"perNote\":\"shared\",\"perUser\":\"shared\",\"isExistingProcess\":false,\"setPermission\":false,\"owners\":[],\"isUserImpersonate\":false}}}"}]},"apps":[],"jobName":"paragraph_1651411294344_-1359828042","id":"20220501-132134_1434392286","dateCreated":"2022-05-01T13:21:34+0000","dateStarted":"2022-05-01T15:00:44+0000","dateFinished":"2022-05-01T15:00:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:172"},{"text":"%md\n# RDD 고급 개념\n- 이 장에서 다룰 핵심 주제\n  - 집계와 키-값 형태의 RDD\n  - 사용자 정의 파티셔닝\n  - RDD 조인","user":"anonymous","dateUpdated":"2022-05-01T14:57:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>RDD 고급 개념</h1>\n<ul>\n  <li>이 장에서 다룰 핵심 주제</li>\n  <li>집계와 키-값 형태의 RDD</li>\n  <li>사용자 정의 파티셔닝</li>\n  <li>RDD 조인</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411044895_1921387548","id":"20220501-131724_1931968936","dateCreated":"2022-05-01T13:17:24+0000","dateStarted":"2022-05-01T14:57:09+0000","dateFinished":"2022-05-01T14:57:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"text":"val myCollection = (\"Spark The Definitive Guide : Big Data Processing Made Simple\".split(\" \"))\nval words = spark.sparkContext.parallelize(myCollection, 2)","user":"anonymous","dateUpdated":"2022-05-01T14:57:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myCollection: Array[String] = Array(Spark, The, Definitive, Guide, :, Big, Data, Processing, Made, Simple)\nwords: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[0] at parallelize at <console>:25\n"}]},"apps":[],"jobName":"paragraph_1651411325323_1827452798","id":"20220501-132205_2028912596","dateCreated":"2022-05-01T13:22:05+0000","dateStarted":"2022-05-01T14:57:10+0000","dateFinished":"2022-05-01T14:57:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"text":"%spark.pyspark\nmyCollection = \"Spark The Definitive Guide : Big Data Processing Made Simple\".split(\" \")\nwords = spark.sparkContext.parallelize(myCollection, 2)","user":"anonymous","dateUpdated":"2022-05-01T14:57:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651411301066_-1100549623","id":"20220501-132141_1166833175","dateCreated":"2022-05-01T13:21:41+0000","dateStarted":"2022-05-01T14:57:25+0000","dateFinished":"2022-05-01T14:57:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"text":"%md\n## 13.1 키-값 형태의 기초(키-값 형태의 RDD)\n- 메서드 이름에 ByKey가 있다면 PairRDD 타입(키-값 타입)만 사용 가능\n  - RDD에 맵 연산을 수행해서 키-값 구조로 만들 수 있음","user":"anonymous","dateUpdated":"2022-05-01T14:57:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>13.1 키-값 형태의 기초(키-값 형태의 RDD)</h2>\n<ul>\n  <li>메서드 이름에 ByKey가 있다면 PairRDD 타입(키-값 타입)만 사용 가능</li>\n  <li>RDD에 맵 연산을 수행해서 키-값 구조로 만들 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411347770_515864025","id":"20220501-132227_165834782","dateCreated":"2022-05-01T13:22:27+0000","dateStarted":"2022-05-01T14:57:26+0000","dateFinished":"2022-05-01T14:57:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"words.map(word => (word.toLowerCase, 1))","user":"anonymous","dateUpdated":"2022-05-01T14:57:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res5: org.apache.spark.rdd.RDD[(String, Int)] = MapPartitionsRDD[2] at map at <console>:28\n"}]},"apps":[],"jobName":"paragraph_1651411539654_704664149","id":"20220501-132539_903522190","dateCreated":"2022-05-01T13:25:39+0000","dateStarted":"2022-05-01T14:57:26+0000","dateFinished":"2022-05-01T14:57:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"text":"words.map(word => (word.toLowerCase, 1)).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res7: Array[(String, Int)] = Array((spark,1), (the,1), (definitive,1), (guide,1), (:,1), (big,1), (data,1), (processing,1), (made,1), (simple,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411605487_1730101781","id":"20220501-132645_654013236","dateCreated":"2022-05-01T13:26:45+0000","dateStarted":"2022-05-01T14:57:27+0000","dateFinished":"2022-05-01T14:57:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178"},{"text":"%spark.pyspark\nwords.map(lambda word: (word.lower(), 1))","user":"anonymous","dateUpdated":"2022-05-01T14:57:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"PythonRDD[4] at RDD at PythonRDD.scala:52\n"}]},"apps":[],"jobName":"paragraph_1651411550459_-1974744157","id":"20220501-132550_1128723632","dateCreated":"2022-05-01T13:25:50+0000","dateStarted":"2022-05-01T14:57:28+0000","dateFinished":"2022-05-01T14:57:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179"},{"text":"%spark.pyspark\nwords.map(lambda word: (word.lower(), 1)).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('spark', 1), ('the', 1), ('definitive', 1), ('guide', 1), (':', 1), ('big', 1), ('data', 1), ('processing', 1), ('made', 1), ('simple', 1)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411629666_1739680786","id":"20220501-132709_45905823","dateCreated":"2022-05-01T13:27:09+0000","dateStarted":"2022-05-01T14:57:28+0000","dateFinished":"2022-05-01T14:57:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180"},{"text":"%md\n### 13.1.1 keyBy\n- 현재 값으로 부터 키를 생성하는 함수","user":"anonymous","dateUpdated":"2022-05-01T14:57:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.1.1 keyBy</h3>\n<ul>\n  <li>현재 값으로 부터 키를 생성하는 함수</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411368975_302150155","id":"20220501-132248_2059106962","dateCreated":"2022-05-01T13:22:48+0000","dateStarted":"2022-05-01T14:57:29+0000","dateFinished":"2022-05-01T14:57:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"val keyword = words.keyBy(word => word.toLowerCase.toSeq(0).toString)\nkeyword.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"keyword: org.apache.spark.rdd.RDD[(String, String)] = MapPartitionsRDD[6] at keyBy at <console>:27\nres9: Array[(String, String)] = Array((s,Spark), (t,The), (d,Definitive), (g,Guide), (:,:), (b,Big), (d,Data), (p,Processing), (m,Made), (s,Simple))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411713104_364726616","id":"20220501-132833_492858012","dateCreated":"2022-05-01T13:28:33+0000","dateStarted":"2022-05-01T14:57:29+0000","dateFinished":"2022-05-01T14:57:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"text":"%spark.pyspark\nkeyword = words.keyBy(lambda word: word.lower()[0])","user":"anonymous","dateUpdated":"2022-05-01T14:57:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651411692484_323684420","id":"20220501-132812_716482968","dateCreated":"2022-05-01T13:28:12+0000","dateStarted":"2022-05-01T14:57:30+0000","dateFinished":"2022-05-01T14:57:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"text":"%spark.pyspark\nkeyword.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('s', 'Spark'), ('t', 'The'), ('d', 'Definitive'), ('g', 'Guide'), (':', ':'), ('b', 'Big'), ('d', 'Data'), ('p', 'Processing'), ('m', 'Made'), ('s', 'Simple')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411704351_-1718278659","id":"20220501-132824_2142327573","dateCreated":"2022-05-01T13:28:24+0000","dateStarted":"2022-05-01T14:57:30+0000","dateFinished":"2022-05-01T14:57:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"text":"%md\n### 13.1.2 값 매핑하기\n- mapValues\n- flatMapValues","user":"anonymous","dateUpdated":"2022-05-01T14:57:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.1.2 값 매핑하기</h3>\n<ul>\n  <li>mapValues</li>\n  <li>flatMapValues</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411410039_1927523947","id":"20220501-132330_563994025","dateCreated":"2022-05-01T13:23:30+0000","dateStarted":"2022-05-01T14:57:30+0000","dateFinished":"2022-05-01T14:57:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"text":"keyword.mapValues(word => word.toUpperCase).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res11: Array[(String, String)] = Array((s,SPARK), (t,THE), (d,DEFINITIVE), (g,GUIDE), (:,:), (b,BIG), (d,DATA), (p,PROCESSING), (m,MADE), (s,SIMPLE))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=4"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411852047_-284506354","id":"20220501-133052_1642973598","dateCreated":"2022-05-01T13:30:52+0000","dateStarted":"2022-05-01T14:57:30+0000","dateFinished":"2022-05-01T14:57:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%spark.pyspark\nkeyword.mapValues(lambda word: word.upper()).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('s', 'SPARK'), ('t', 'THE'), ('d', 'DEFINITIVE'), ('g', 'GUIDE'), (':', ':'), ('b', 'BIG'), ('d', 'DATA'), ('p', 'PROCESSING'), ('m', 'MADE'), ('s', 'SIMPLE')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=5"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411879477_704763044","id":"20220501-133119_804237561","dateCreated":"2022-05-01T13:31:19+0000","dateStarted":"2022-05-01T14:57:31+0000","dateFinished":"2022-05-01T14:57:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"%md\n- flatMap 함수를 사용해 반환되는 결과의 각 로우가 문자를 나타내도록 확장할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T14:57:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>flatMap 함수를 사용해 반환되는 결과의 각 로우가 문자를 나타내도록 확장할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411992963_1046181751","id":"20220501-133312_1764404108","dateCreated":"2022-05-01T13:33:12+0000","dateStarted":"2022-05-01T14:57:31+0000","dateFinished":"2022-05-01T14:57:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"keyword.flatMapValues(word => word.toUpperCase).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res13: Array[(String, Char)] = Array((s,S), (s,P), (s,A), (s,R), (s,K), (t,T), (t,H), (t,E), (d,D), (d,E), (d,F), (d,I), (d,N), (d,I), (d,T), (d,I), (d,V), (d,E), (g,G), (g,U), (g,I), (g,D), (g,E), (:,:), (b,B), (b,I), (b,G), (d,D), (d,A), (d,T), (d,A), (p,P), (p,R), (p,O), (p,C), (p,E), (p,S), (p,S), (p,I), (p,N), (p,G), (m,M), (m,A), (m,D), (m,E), (s,S), (s,I), (s,M), (s,P), (s,L), (s,E))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=6"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411853981_-937616416","id":"20220501-133053_726201769","dateCreated":"2022-05-01T13:30:53+0000","dateStarted":"2022-05-01T14:57:31+0000","dateFinished":"2022-05-01T14:57:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"%spark.pyspark\nkeyword.flatMapValues(lambda word: word.upper()).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('s', 'S'), ('s', 'P'), ('s', 'A'), ('s', 'R'), ('s', 'K'), ('t', 'T'), ('t', 'H'), ('t', 'E'), ('d', 'D'), ('d', 'E'), ('d', 'F'), ('d', 'I'), ('d', 'N'), ('d', 'I'), ('d', 'T'), ('d', 'I'), ('d', 'V'), ('d', 'E'), ('g', 'G'), ('g', 'U'), ('g', 'I'), ('g', 'D'), ('g', 'E'), (':', ':'), ('b', 'B'), ('b', 'I'), ('b', 'G'), ('d', 'D'), ('d', 'A'), ('d', 'T'), ('d', 'A'), ('p', 'P'), ('p', 'R'), ('p', 'O'), ('p', 'C'), ('p', 'E'), ('p', 'S'), ('p', 'S'), ('p', 'I'), ('p', 'N'), ('p', 'G'), ('m', 'M'), ('m', 'A'), ('m', 'D'), ('m', 'E'), ('s', 'S'), ('s', 'I'), ('s', 'M'), ('s', 'P'), ('s', 'L'), ('s', 'E')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=7"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411885994_1809205547","id":"20220501-133125_1115979311","dateCreated":"2022-05-01T13:31:25+0000","dateStarted":"2022-05-01T14:57:32+0000","dateFinished":"2022-05-01T14:57:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"%md\n### 13.1.3 키와 값 추출하기","user":"anonymous","dateUpdated":"2022-05-01T14:57:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.1.3 키와 값 추출하기</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411424752_-85522972","id":"20220501-132344_856074440","dateCreated":"2022-05-01T13:23:44+0000","dateStarted":"2022-05-01T14:57:32+0000","dateFinished":"2022-05-01T14:57:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"text":"keyword.keys.collect()\nkeyword.values.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res15: Array[String] = Array(s, t, d, g, :, b, d, p, m, s)\nres16: Array[String] = Array(Spark, The, Definitive, Guide, :, Big, Data, Processing, Made, Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=8","http://0927a691e26f:4040/jobs/job?id=9"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411865098_1581906989","id":"20220501-133105_508373084","dateCreated":"2022-05-01T13:31:05+0000","dateStarted":"2022-05-01T14:57:32+0000","dateFinished":"2022-05-01T14:57:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"text":"%spark.pyspark\nkeyword.keys().collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['s', 't', 'd', 'g', ':', 'b', 'd', 'p', 'm', 's']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411895637_678118439","id":"20220501-133135_962751234","dateCreated":"2022-05-01T13:31:35+0000","dateStarted":"2022-05-01T14:57:33+0000","dateFinished":"2022-05-01T14:57:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"%spark.pyspark\nkeyword.values().collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Spark', 'The', 'Definitive', 'Guide', ':', 'Big', 'Data', 'Processing', 'Made', 'Simple']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=11"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412045290_-912875682","id":"20220501-133405_638886643","dateCreated":"2022-05-01T13:34:05+0000","dateStarted":"2022-05-01T14:57:33+0000","dateFinished":"2022-05-01T14:57:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"%md\n### 13.1.4 lookup\n- 특정 키에 관한 결과 찾음\n- 그러나 각 입력에 대해 오직 하나의 키만 찾을 수 있도록 강제하는 메커니즘은 없음","user":"anonymous","dateUpdated":"2022-05-01T14:57:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.1.4 lookup</h3>\n<ul>\n  <li>특정 키에 관한 결과 찾음</li>\n  <li>그러나 각 입력에 대해 오직 하나의 키만 찾을 수 있도록 강제하는 메커니즘은 없음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411447982_-280787195","id":"20220501-132407_35909421","dateCreated":"2022-05-01T13:24:07+0000","dateStarted":"2022-05-01T14:57:33+0000","dateFinished":"2022-05-01T14:57:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"keyword.lookup(\"s\")","user":"anonymous","dateUpdated":"2022-05-01T14:57:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res18: Seq[String] = WrappedArray(Spark, Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=12"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411869848_1423159319","id":"20220501-133109_868067366","dateCreated":"2022-05-01T13:31:09+0000","dateStarted":"2022-05-01T14:57:33+0000","dateFinished":"2022-05-01T14:57:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"%md\n### 13.1.5 sampleByKey\n- 근사치나 정확도를 이용해 키를 기반으로 RDD샘플 생성\n- 특정 키를 부분 샘플링할 수 있음\n- 해당 메서드는 RDD를 한 번만 처리하면서 간단한 무작위 샘플링을 사용함","user":"anonymous","dateUpdated":"2022-05-01T14:57:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.1.5 sampleByKey</h3>\n<ul>\n  <li>근사치나 정확도를 이용해 키를 기반으로 RDD샘플 생성</li>\n  <li>특정 키를 부분 샘플링할 수 있음</li>\n  <li>해당 메서드는 RDD를 한 번만 처리하면서 간단한 무작위 샘플링을 사용함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651411465316_-177822046","id":"20220501-132425_500240744","dateCreated":"2022-05-01T13:24:25+0000","dateStarted":"2022-05-01T14:57:34+0000","dateFinished":"2022-05-01T14:57:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"val distinctChars = (words.flatMap(word => word.toLowerCase.toSeq).distinct.collect())\nimport scala.util.Random\nval sampleMap = distinctChars.map(c => (c, new Random().nextDouble())).toMap\n\n(words.map(word => (word.toLowerCase.toSeq(0), word))\n  .sampleByKey(true, sampleMap, 6L)\n  .collect())","user":"anonymous","dateUpdated":"2022-05-01T14:57:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":163.125,"optionOpen":false}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"distinctChars: Array[Char] = Array(d, p, t, b, h, n, f, v, :, r, l, s, e, a, i, k, u, o, g, m, c)\nimport scala.util.Random\nsampleMap: scala.collection.immutable.Map[Char,Double] = Map(e -> 0.9546029555424418, s -> 0.04059464038218208, n -> 0.6012564915377129, t -> 0.8538420940525752, u -> 0.9470981462299136, f -> 0.8069641845359394, a -> 0.048363957289317194, m -> 0.8099022195926286, i -> 0.6889220682848456, v -> 0.8921503960038285, b -> 0.914418803007703, g -> 0.10137463008315617, l -> 0.15983329751485298, p -> 0.8926427620833385, c -> 0.8434809139733775, h -> 0.6311778529847806, r -> 0.9341535860655249, : -> 0.6625388762283269, k -> 0.182814421664513, o -> 0.9790073518813629, d -> 0.83645074520666)\nres20: Array[(Char, String)] = Array((t,The), (d,Definitive), (:,:))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=13","http://0927a691e26f:4040/jobs/job?id=14"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651411477266_8823866","id":"20220501-132437_413423571","dateCreated":"2022-05-01T13:24:37+0000","dateStarted":"2022-05-01T14:57:34+0000","dateFinished":"2022-05-01T14:57:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198"},{"text":"%spark.pyspark\nimport random\ndistinctChars = words.flatMap(lambda word: list(word.lower())).distinct().collect()\nsampleMap = dict(map(lambda c: (c, random.random()), distinctChars))\n\nwords.map(lambda word: (word.lower()[0], word)).sampleByKey(True, sampleMap, 6).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('t', 'The'), ('g', 'Guide'), ('m', 'Made')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=15","http://0927a691e26f:4040/jobs/job?id=16"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412139065_505917656","id":"20220501-133539_635849218","dateCreated":"2022-05-01T13:35:39+0000","dateStarted":"2022-05-01T14:57:36+0000","dateFinished":"2022-05-01T14:57:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%md\n#### sampleByKeyExact\n- 99.99% 신뢰도","user":"anonymous","dateUpdated":"2022-05-01T14:57:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>sampleByKeyExact</h4>\n<ul>\n  <li>99.99% 신뢰도</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651412405169_1010111147","id":"20220501-134005_1125458556","dateCreated":"2022-05-01T13:40:05+0000","dateStarted":"2022-05-01T14:57:36+0000","dateFinished":"2022-05-01T14:57:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"(words.map(word => (word.toLowerCase.toSeq(0), word))\n  .sampleByKeyExact(true, sampleMap, 6L)\n  .collect())","user":"anonymous","dateUpdated":"2022-05-01T14:57:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res22: Array[(Char, String)] = Array((s,Spark), (t,The), (d,Definitive), (d,Definitive), (g,Guide), (:,:), (b,Big), (p,Processing), (m,Made))\n"}]},"apps":[],"jobName":"paragraph_1651412187531_2027165332","id":"20220501-133627_973034774","dateCreated":"2022-05-01T13:36:27+0000","dateStarted":"2022-05-01T14:57:37+0000","dateFinished":"2022-05-01T14:57:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=17","http://0927a691e26f:4040/jobs/job?id=18","http://0927a691e26f:4040/jobs/job?id=19"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 13.2 집계","user":"anonymous","dateUpdated":"2022-05-01T14:57:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>13.2 집계</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1651412431856_-1781979122","id":"20220501-134031_168772076","dateCreated":"2022-05-01T13:40:31+0000","dateStarted":"2022-05-01T14:57:37+0000","dateFinished":"2022-05-01T14:57:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"text":"val chars = words.flatMap(word => word.toLowerCase.toSeq)\nval KVcharacters = chars.map(letter => (letter, 1))\n\ndef maxFunc(left:Int, right:Int) = math.max(left, right)\ndef addFunc(left:Int, right:Int) = left + right\n\nval nums = sc.parallelize(1 to 30, 5)","user":"anonymous","dateUpdated":"2022-05-01T14:57:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"chars: org.apache.spark.rdd.RDD[Char] = MapPartitionsRDD[35] at flatMap at <console>:28\nKVcharacters: org.apache.spark.rdd.RDD[(Char, Int)] = MapPartitionsRDD[36] at map at <console>:30\nmaxFunc: (left: Int, right: Int)Int\naddFunc: (left: Int, right: Int)Int\nnums: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[37] at parallelize at <console>:26\n"}]},"apps":[],"jobName":"paragraph_1651412476742_74704273","id":"20220501-134116_528271180","dateCreated":"2022-05-01T13:41:16+0000","dateStarted":"2022-05-01T14:57:38+0000","dateFinished":"2022-05-01T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"%spark.pyspark\nchars = words.flatMap(lambda word: word.lower())\nKVcharacters = chars.map(lambda letter: (letter, 1))\n\ndef maxFunc(left, right):\n  return max(left, right)\ndef addFunc(left, right):\n  return left + right\n\nnums = sc.parallelize(range(1, 31), 5)","user":"anonymous","dateUpdated":"2022-05-01T14:57:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651412509806_704886829","id":"20220501-134149_265786309","dateCreated":"2022-05-01T13:41:49+0000","dateStarted":"2022-05-01T14:57:39+0000","dateFinished":"2022-05-01T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"%spark.pyspark\nchars.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['s', 'p', 'a', 'r', 'k', 't', 'h', 'e', 'd', 'e', 'f', 'i', 'n', 'i', 't', 'i', 'v', 'e', 'g', 'u', 'i', 'd', 'e', ':', 'b', 'i', 'g', 'd', 'a', 't', 'a', 'p', 'r', 'o', 'c', 'e', 's', 's', 'i', 'n', 'g', 'm', 'a', 'd', 'e', 's', 'i', 'm', 'p', 'l', 'e']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=20"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412636919_1793482676","id":"20220501-134356_631155674","dateCreated":"2022-05-01T13:43:56+0000","dateStarted":"2022-05-01T14:57:39+0000","dateFinished":"2022-05-01T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205"},{"text":"%spark.pyspark\nKVcharacters.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('s', 1), ('p', 1), ('a', 1), ('r', 1), ('k', 1), ('t', 1), ('h', 1), ('e', 1), ('d', 1), ('e', 1), ('f', 1), ('i', 1), ('n', 1), ('i', 1), ('t', 1), ('i', 1), ('v', 1), ('e', 1), ('g', 1), ('u', 1), ('i', 1), ('d', 1), ('e', 1), (':', 1), ('b', 1), ('i', 1), ('g', 1), ('d', 1), ('a', 1), ('t', 1), ('a', 1), ('p', 1), ('r', 1), ('o', 1), ('c', 1), ('e', 1), ('s', 1), ('s', 1), ('i', 1), ('n', 1), ('g', 1), ('m', 1), ('a', 1), ('d', 1), ('e', 1), ('s', 1), ('i', 1), ('m', 1), ('p', 1), ('l', 1), ('e', 1)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=21"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412641888_-123776239","id":"20220501-134401_37754115","dateCreated":"2022-05-01T13:44:01+0000","dateStarted":"2022-05-01T14:57:39+0000","dateFinished":"2022-05-01T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206"},{"text":"%spark.pyspark\nnums.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=22"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412653389_992260745","id":"20220501-134413_346163970","dateCreated":"2022-05-01T13:44:13+0000","dateStarted":"2022-05-01T14:57:39+0000","dateFinished":"2022-05-01T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:207"},{"text":"%md\n### 13.2.1 countByKey\n- 각 키의 아이템 수를 구하고 로컬 맵으로 결과를 수집\n- 스칼라나 자바에서는 제한 시간과 신뢰도를 인수로 지정해 근사치를 구함","user":"anonymous","dateUpdated":"2022-05-01T14:57:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.2.1 countByKey</h3>\n<ul>\n  <li>각 키의 아이템 수를 구하고 로컬 맵으로 결과를 수집</li>\n  <li>스칼라나 자바에서는 제한 시간과 신뢰도를 인수로 지정해 근사치를 구함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651412530196_871640786","id":"20220501-134210_478623129","dateCreated":"2022-05-01T13:42:10+0000","dateStarted":"2022-05-01T14:57:39+0000","dateFinished":"2022-05-01T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208"},{"text":"val timeout = 1000L //milliseconds\nval confidence = 0.95\nKVcharacters.countByKey()\nKVcharacters.countByKeyApprox(timeout, confidence)","user":"anonymous","dateUpdated":"2022-05-01T14:57:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"timeout: Long = 1000\nconfidence: Double = 0.95\nres25: scala.collection.Map[Char,Long] = Map(e -> 7, s -> 4, n -> 2, t -> 3, u -> 1, f -> 1, a -> 4, m -> 2, i -> 7, v -> 1, b -> 1, g -> 3, l -> 1, p -> 3, c -> 1, h -> 1, r -> 2, : -> 1, k -> 1, o -> 1, d -> 4)\nres26: org.apache.spark.partial.PartialResult[scala.collection.Map[Char,org.apache.spark.partial.BoundedDouble]] = (final: Map(e -> [7.000, 7.000], s -> [4.000, 4.000], n -> [2.000, 2.000], t -> [3.000, 3.000], u -> [1.000, 1.000], f -> [1.000, 1.000], a -> [4.000, 4.000], m -> [2.000, 2.000], i -> [7.000, 7.000], v -> [1.000, 1.000], b -> [1.000, 1.000], g -> [3.000, 3.000], l -> [1.000, 1.000], p -> [3.000, 3.000], c -> [1.000, 1.000], h -> [1.000, 1.000], r -> [2.000, 2.000], : -> [1.000, 1.000], k -> [1.000, 1.000], o -> [1.000, 1.000], d -> [4.000, 4.000]))\n"}]},"apps":[],"jobName":"paragraph_1651412717311_-10380746","id":"20220501-134517_995123598","dateCreated":"2022-05-01T13:45:17+0000","dateStarted":"2022-05-01T14:57:40+0000","dateFinished":"2022-05-01T14:57:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:209","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=23","http://0927a691e26f:4040/jobs/job?id=24"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nKVcharacters.countByKey()","user":"anonymous","dateUpdated":"2022-05-01T14:57:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defaultdict(<type 'int'>, {'a': 4, 'c': 1, 'b': 1, 'e': 7, 'd': 4, 'g': 3, 'f': 1, 'i': 7, 'h': 1, 'k': 1, 'm': 2, 'l': 1, 'o': 1, 'n': 2, 'p': 3, 's': 4, 'r': 2, 'u': 1, 't': 3, 'v': 1, ':': 1})\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=25"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412739266_1749815666","id":"20220501-134539_1994645681","dateCreated":"2022-05-01T13:45:39+0000","dateStarted":"2022-05-01T14:57:41+0000","dateFinished":"2022-05-01T14:57:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:210"},{"text":"%md\n### 13.2.2 집계 연산 구현 방식 이해하기\n- 키-값 형태의 PairRDD를 생성하는 몇 가지 방법이 있음\n    - groupBy\n    - reduce\n- 이때 구현 방식은 Job의 안정성을 위해 매우 중요함","user":"anonymous","dateUpdated":"2022-05-01T14:57:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.2.2 집계 연산 구현 방식 이해하기</h3>\n<ul>\n  <li>키-값 형태의 PairRDD를 생성하는 몇 가지 방법이 있음\n    <ul>\n      <li>groupBy</li>\n      <li>reduce</li>\n    </ul>\n  </li>\n  <li>이때 구현 방식은 Job의 안정성을 위해 매우 중요함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651412546701_-333008180","id":"20220501-134226_1655895897","dateCreated":"2022-05-01T13:42:26+0000","dateStarted":"2022-05-01T14:57:41+0000","dateFinished":"2022-05-01T14:57:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:211"},{"text":"%md\n#### groupByKey\n- 각 키에 대한 <strong>값의 크기가 일정</strong>하고 익스큐터에 <strong>할당된 메모리에서 처리 가능할 정도</strong>의 크기라면 해당 메서드 사용\n  - 모든 익스큐터에서 함수를 적용하기 전에 <strong>해당 키와 관련된 모든 값을 메모리로 읽어 들임</strong>\n  - 따라서 만약 심각하게 치우쳐진 키가 있다면 일부 파티션이 엄청난 양의 값을 가질 수 있음(out of memory)","user":"anonymous","dateUpdated":"2022-05-01T14:57:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>groupByKey</h4>\n<ul>\n  <li>각 키에 대한 <strong>값의 크기가 일정</strong>하고 익스큐터에 <strong>할당된 메모리에서 처리 가능할 정도</strong>의 크기라면 해당 메서드 사용</li>\n  <li>모든 익스큐터에서 함수를 적용하기 전에 <strong>해당 키와 관련된 모든 값을 메모리로 읽어 들임</strong></li>\n  <li>따라서 만약 심각하게 치우쳐진 키가 있다면 일부 파티션이 엄청난 양의 값을 가질 수 있음(out of memory)</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651412595642_984466211","id":"20220501-134315_1604839185","dateCreated":"2022-05-01T13:43:15+0000","dateStarted":"2022-05-01T14:57:41+0000","dateFinished":"2022-05-01T14:57:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:212"},{"text":"KVcharacters.groupByKey().map(row => (row._1, row._2.reduce(addFunc))).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res28: Array[(Char, Int)] = Array((d,4), (p,3), (t,3), (b,1), (h,1), (n,2), (f,1), (v,1), (:,1), (r,2), (l,1), (s,4), (e,7), (a,4), (k,1), (i,7), (u,1), (o,1), (g,3), (m,2), (c,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=26"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412856189_795227542","id":"20220501-134736_1680807296","dateCreated":"2022-05-01T13:47:36+0000","dateStarted":"2022-05-01T14:57:41+0000","dateFinished":"2022-05-01T14:57:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:213"},{"text":"KVcharacters.reduceByKey(addFunc).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res30: Array[(Char, Int)] = Array((d,4), (p,3), (t,3), (b,1), (h,1), (n,2), (f,1), (v,1), (:,1), (r,2), (l,1), (s,4), (e,7), (a,4), (i,7), (k,1), (u,1), (o,1), (g,3), (m,2), (c,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=27"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412863412_-1317464114","id":"20220501-134743_1179458295","dateCreated":"2022-05-01T13:47:43+0000","dateStarted":"2022-05-01T14:57:42+0000","dateFinished":"2022-05-01T14:57:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"text":"%spark.pyspark\nKVcharacters.groupByKey().map(lambda row: (row[0], reduce(addFunc, row[1]))).collect()\n# note this is Python 2, reduce must be imported from functools in Python 3","user":"anonymous","dateUpdated":"2022-05-01T14:57:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('a', 4), ('c', 1), ('e', 7), ('g', 3), ('i', 7), ('k', 1), ('m', 2), ('o', 1), ('s', 4), ('u', 1), ('b', 1), ('d', 4), ('f', 1), ('h', 1), ('l', 1), ('n', 2), ('p', 3), ('r', 2), ('t', 3), ('v', 1), (':', 1)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=28"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651412830128_-1990839443","id":"20220501-134710_1008085736","dateCreated":"2022-05-01T13:47:10+0000","dateStarted":"2022-05-01T14:57:43+0000","dateFinished":"2022-05-01T14:57:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:215"},{"text":"%spark.pyspark\nnums.aggregate(0, maxFunc, addFunc)","user":"anonymous","dateUpdated":"2022-05-01T14:57:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"90\n"}]},"apps":[],"jobName":"paragraph_1651412840569_-1534006057","id":"20220501-134720_407105296","dateCreated":"2022-05-01T13:47:20+0000","dateStarted":"2022-05-01T14:57:43+0000","dateFinished":"2022-05-01T14:57:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:216","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=29"],"interpreterSettingId":"spark"}}},{"text":"%md\n#### reduceByKey\n- 작업 부하를 줄이려는 경우 적합\n- <strong>각 파티션에서 리듀스 작업</strong>을 수행하기 때문에 안정적이고 <strong>모든 값을 메모리에 유지하지 않아도 됨</strong>\n- 또한 최종 리듀스 과정을 제외한 <strong>모든 작업은 개별 워커에서 처리</strong>하므로 연산 중 셔플 발생 X","user":"anonymous","dateUpdated":"2022-05-01T14:57:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>reduceByKey</h4>\n<ul>\n  <li>작업 부하를 줄이려는 경우 적합</li>\n  <li><strong>각 파티션에서 리듀스 작업</strong>을 수행하기 때문에 안정적이고 <strong>모든 값을 메모리에 유지하지 않아도 됨</strong></li>\n  <li>또한 최종 리듀스 과정을 제외한 <strong>모든 작업은 개별 워커에서 처리</strong>하므로 연산 중 셔플 발생 X</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651412605999_331175803","id":"20220501-134325_273177267","dateCreated":"2022-05-01T13:43:25+0000","dateStarted":"2022-05-01T14:57:43+0000","dateFinished":"2022-05-01T14:57:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:217"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651412404236_1756966637","id":"20220501-134004_633520618","dateCreated":"2022-05-01T13:40:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:218","text":"KVcharacters.reduceByKey(addFunc).collect()","dateUpdated":"2022-05-01T14:57:43+0000","dateFinished":"2022-05-01T14:57:44+0000","dateStarted":"2022-05-01T14:57:44+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res32: Array[(Char, Int)] = Array((d,4), (p,3), (t,3), (b,1), (h,1), (n,2), (f,1), (v,1), (:,1), (r,2), (l,1), (s,4), (e,7), (a,4), (i,7), (k,1), (u,1), (o,1), (g,3), (m,2), (c,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=30"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413212974_-1292896233","id":"20220501-135332_1621104500","dateCreated":"2022-05-01T13:53:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4535","text":"%md\n### 13.2.3 기타 집계 메서드","dateUpdated":"2022-05-01T14:57:44+0000","dateFinished":"2022-05-01T14:57:44+0000","dateStarted":"2022-05-01T14:57:44+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.2.3 기타 집계 메서드</h3>\n</div>"}]}},{"text":"%md\n#### aggregate\n- 파티션 기준 집계\n- 시작값, 파티션 내에 수행될 함수, 모든 파티션에 걸쳐 수행될 함수를 파라미터로 지정","user":"anonymous","dateUpdated":"2022-05-01T14:57:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413231933_-1920039870","id":"20220501-135351_1037832775","dateCreated":"2022-05-01T13:53:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4607","dateFinished":"2022-05-01T14:57:44+0000","dateStarted":"2022-05-01T14:57:44+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>aggregate</h4>\n<ul>\n  <li>파티션 기준 집계</li>\n  <li>시작값, 파티션 내에 수행될 함수, 모든 파티션에 걸쳐 수행될 함수를 파라미터로 지정</li>\n</ul>\n</div>"}]}},{"text":"nums.aggregate(0)(maxFunc, addFunc)","user":"anonymous","dateUpdated":"2022-05-01T14:57:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413406059_903198175","id":"20220501-135646_1587083177","dateCreated":"2022-05-01T13:56:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5042","dateFinished":"2022-05-01T14:57:45+0000","dateStarted":"2022-05-01T14:57:44+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res34: Int = 90\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=31"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413451173_1860643390","id":"20220501-135731_1344069855","dateCreated":"2022-05-01T13:57:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5117","text":"%spark.pyspark\nnums.aggregate(0, maxFunc, addFunc)","dateUpdated":"2022-05-01T14:57:45+0000","dateFinished":"2022-05-01T14:57:45+0000","dateStarted":"2022-05-01T14:57:45+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"90\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=32"],"interpreterSettingId":"spark"}}},{"text":"%md\n#### treeAggregate\n- 위 aggregate는 드라이버에서 최종 집계를 수행하므로 익스큐터 결과가 너무 크면 out of memory\n- 그래서 <strong>익스큐터끼리 트리를 형성해서 집계 처리의 일부 하위 과정을 push down</strong> 방식으로 수행하는 것이 해당 함수\n- 이렇게 집계 처리를 <strong>여러 단계</strong>로 구성해서 드라이버의 메모리를 모두 소비하는 현상을 막음","user":"anonymous","dateUpdated":"2022-05-01T14:57:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413250764_815335339","id":"20220501-135410_1024758687","dateCreated":"2022-05-01T13:54:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4679","dateFinished":"2022-05-01T14:57:45+0000","dateStarted":"2022-05-01T14:57:45+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>treeAggregate</h4>\n<ul>\n  <li>위 aggregate는 드라이버에서 최종 집계를 수행하므로 익스큐터 결과가 너무 크면 out of memory</li>\n  <li>그래서 <strong>익스큐터끼리 트리를 형성해서 집계 처리의 일부 하위 과정을 push down</strong> 방식으로 수행하는 것이 해당 함수</li>\n  <li>이렇게 집계 처리를 <strong>여러 단계</strong>로 구성해서 드라이버의 메모리를 모두 소비하는 현상을 막음</li>\n</ul>\n</div>"}]}},{"text":"val depth = 3\nnums.treeAggregate(0)(maxFunc, addFunc, depth)","user":"anonymous","dateUpdated":"2022-05-01T14:57:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413578193_1585494886","id":"20220501-135938_1161215863","dateCreated":"2022-05-01T13:59:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5189","dateFinished":"2022-05-01T14:57:46+0000","dateStarted":"2022-05-01T14:57:45+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"depth: Int = 3\nres36: Int = 90\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=33"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413594799_594678650","id":"20220501-135954_607631999","dateCreated":"2022-05-01T13:59:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5261","text":"%spark.pyspark\ndepth = 3\nnums.treeAggregate(0, maxFunc, addFunc, depth)","dateUpdated":"2022-05-01T14:57:46+0000","dateFinished":"2022-05-01T14:57:46+0000","dateStarted":"2022-05-01T14:57:46+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"90\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=34"],"interpreterSettingId":"spark"}}},{"text":"%md\n#### aggregateByKey\n- aggregate 함수와 동일하지만 파티션 대신 키를 기준으로 집계","user":"anonymous","dateUpdated":"2022-05-01T14:57:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413263433_-1515397568","id":"20220501-135423_445556660","dateCreated":"2022-05-01T13:54:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4823","dateFinished":"2022-05-01T14:57:46+0000","dateStarted":"2022-05-01T14:57:46+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>aggregateByKey</h4>\n<ul>\n  <li>aggregate 함수와 동일하지만 파티션 대신 키를 기준으로 집계</li>\n</ul>\n</div>"}]}},{"text":"KVcharacters.aggregateByKey(0)(addFunc, maxFunc).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413627619_-1258391811","id":"20220501-140027_893848605","dateCreated":"2022-05-01T14:00:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5405","dateFinished":"2022-05-01T14:57:47+0000","dateStarted":"2022-05-01T14:57:46+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res38: Array[(Char, Int)] = Array((d,2), (p,2), (t,2), (b,1), (h,1), (n,1), (f,1), (v,1), (:,1), (r,1), (l,1), (s,3), (e,4), (a,3), (i,4), (k,1), (u,1), (o,1), (g,2), (m,2), (c,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=35"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nKVcharacters.aggregateByKey(0, addFunc, maxFunc).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413617025_930445104","id":"20220501-140017_1467776586","dateCreated":"2022-05-01T14:00:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5333","dateFinished":"2022-05-01T14:57:47+0000","dateStarted":"2022-05-01T14:57:47+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('a', 3), ('c', 1), ('e', 4), ('g', 2), ('i', 4), ('k', 1), ('m', 2), ('o', 1), ('s', 3), ('u', 1), ('b', 1), ('d', 2), ('f', 1), ('h', 1), ('l', 1), ('n', 1), ('p', 2), ('r', 1), ('t', 2), ('v', 1), (':', 1)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=36"],"interpreterSettingId":"spark"}}},{"text":"%md\n#### combineByKey\n- 집계 함수 대신 컴바이너를 사용함\n    - 키를 기준으로 연산을 수행하며 파라미터로 사용된 함수에 따라 값을 병합함\n    - 그런 다음 여러 결괏값을 병합해 결과 반환\n- 사용자 정의 파티셔너를 사용해 출력 파티션 수를 지정할 수도 있음","user":"anonymous","dateUpdated":"2022-05-01T14:57:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413273157_-1109566229","id":"20220501-135433_1967076834","dateCreated":"2022-05-01T13:54:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4895","dateFinished":"2022-05-01T14:57:47+0000","dateStarted":"2022-05-01T14:57:47+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>combineByKey</h4>\n<ul>\n  <li>집계 함수 대신 컴바이너를 사용함\n    <ul>\n      <li>키를 기준으로 연산을 수행하며 파라미터로 사용된 함수에 따라 값을 병합함</li>\n      <li>그런 다음 여러 결괏값을 병합해 결과 반환</li>\n    </ul>\n  </li>\n  <li>사용자 정의 파티셔너를 사용해 출력 파티션 수를 지정할 수도 있음</li>\n</ul>\n</div>"}]}},{"text":"val valToCombiner = (value:Int) => List(value)\nval mergeValuesFunc = (vals:List[Int], valToAppend:Int) => valToAppend :: vals\nval mergeCombinerFunc = (vals1:List[Int], vals2:List[Int]) => vals1 ::: vals2\n// now we define these as function variables\nval outputPartitions = 6\n\n(KVcharacters\n  .combineByKey(\n    valToCombiner,\n    mergeValuesFunc,\n    mergeCombinerFunc,\n    outputPartitions)\n  .collect())","user":"anonymous","dateUpdated":"2022-05-01T14:57:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413665299_-1180151837","id":"20220501-140105_875978805","dateCreated":"2022-05-01T14:01:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5477","dateFinished":"2022-05-01T14:57:49+0000","dateStarted":"2022-05-01T14:57:48+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"valToCombiner: Int => List[Int] = <function1>\nmergeValuesFunc: (List[Int], Int) => List[Int] = <function2>\nmergeCombinerFunc: (List[Int], List[Int]) => List[Int] = <function2>\noutputPartitions: Int = 6\nres41: Array[(Char, List[Int])] = Array((f,List(1)), (r,List(1, 1)), (l,List(1)), (s,List(1, 1, 1, 1)), (a,List(1, 1, 1, 1)), (g,List(1, 1, 1)), (m,List(1, 1)), (t,List(1, 1, 1)), (b,List(1)), (h,List(1)), (n,List(1, 1)), (i,List(1, 1, 1, 1, 1, 1, 1)), (u,List(1)), (o,List(1)), (c,List(1)), (d,List(1, 1, 1, 1)), (p,List(1, 1, 1)), (v,List(1)), (:,List(1)), (e,List(1, 1, 1, 1, 1, 1, 1)), (k,List(1)))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=37"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413684098_1294998662","id":"20220501-140124_47872859","dateCreated":"2022-05-01T14:01:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5549","text":"%spark.pyspark\ndef valToCombiner(value):\n  return [value]\ndef mergeValuesFunc(vals, valToAppend):\n  vals.append(valToAppend)\n  return vals\ndef mergeCombinerFunc(vals1, vals2):\n  return vals1 + vals2\noutputPartitions = 6\n\nKVcharacters\\\n  .combineByKey(\n    valToCombiner,\n    mergeValuesFunc,\n    mergeCombinerFunc,\n    outputPartitions)\\\n  .collect()","dateUpdated":"2022-05-01T14:57:49+0000","dateFinished":"2022-05-01T14:57:49+0000","dateStarted":"2022-05-01T14:57:49+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('b', [1]), ('d', [1, 1, 1, 1]), ('f', [1]), ('h', [1]), ('l', [1]), ('n', [1, 1]), ('p', [1, 1, 1]), ('r', [1, 1]), ('t', [1, 1, 1]), ('v', [1]), (':', [1]), ('a', [1, 1, 1, 1]), ('c', [1]), ('e', [1, 1, 1, 1, 1, 1, 1]), ('g', [1, 1, 1]), ('i', [1, 1, 1, 1, 1, 1, 1]), ('k', [1]), ('m', [1, 1]), ('o', [1]), ('s', [1, 1, 1, 1]), ('u', [1])]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=38"],"interpreterSettingId":"spark"}}},{"text":"%md\n#### foldByKey\n- 결합 함수와 항등원(어떤 원소와 연산을 취해도 자기 자신이 되게 하는 원소)인 제로값을 이용해 각 키의 값을 병합\n    - 덧셈에서는 0\n    - 곱셈에서는 1","user":"anonymous","dateUpdated":"2022-05-01T14:57:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413283037_-514482683","id":"20220501-135443_477424963","dateCreated":"2022-05-01T13:54:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4967","dateFinished":"2022-05-01T14:57:49+0000","dateStarted":"2022-05-01T14:57:49+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>foldByKey</h4>\n<ul>\n  <li>결합 함수와 항등원(어떤 원소와 연산을 취해도 자기 자신이 되게 하는 원소)인 제로값을 이용해 각 키의 값을 병합\n    <ul>\n      <li>덧셈에서는 0</li>\n      <li>곱셈에서는 1</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413253372_554462300","id":"20220501-135413_1788542118","dateCreated":"2022-05-01T13:54:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4751","text":"KVcharacters.foldByKey(0)(addFunc).collect()","dateUpdated":"2022-05-01T14:57:49+0000","dateFinished":"2022-05-01T14:57:50+0000","dateStarted":"2022-05-01T14:57:49+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res43: Array[(Char, Int)] = Array((d,4), (p,3), (t,3), (b,1), (h,1), (n,2), (f,1), (v,1), (:,1), (r,2), (l,1), (s,4), (e,7), (a,4), (i,7), (k,1), (u,1), (o,1), (g,3), (m,2), (c,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=39"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413204864_1575076061","id":"20220501-135324_1160916102","dateCreated":"2022-05-01T13:53:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4463","text":"%spark.pyspark\nKVcharacters.foldByKey(0, addFunc).collect()","dateUpdated":"2022-05-01T14:57:50+0000","dateFinished":"2022-05-01T14:57:50+0000","dateStarted":"2022-05-01T14:57:50+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('a', 4), ('c', 1), ('e', 7), ('g', 3), ('i', 7), ('k', 1), ('m', 2), ('o', 1), ('s', 4), ('u', 1), ('b', 1), ('d', 4), ('f', 1), ('h', 1), ('l', 1), ('n', 2), ('p', 3), ('r', 2), ('t', 3), ('v', 1), (':', 1)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=40"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 13.3 cogroup\n- 키-값 형태의 RDD를 키를 기준으로 그룹화 가능\n  - 스칼라를 사용하는 경우 최대 3개까지\n  - 파이썬을 사용하는 경우 최대 2개까지","user":"anonymous","dateUpdated":"2022-05-01T14:57:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651413807238_2054496793","id":"20220501-140327_1332561628","dateCreated":"2022-05-01T14:03:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7418","dateFinished":"2022-05-01T14:57:50+0000","dateStarted":"2022-05-01T14:57:50+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>13.3 cogroup</h2>\n<ul>\n  <li>키-값 형태의 RDD를 키를 기준으로 그룹화 가능</li>\n  <li>스칼라를 사용하는 경우 최대 3개까지</li>\n  <li>파이썬을 사용하는 경우 최대 2개까지</li>\n</ul>\n</div>"}]}},{"text":"import scala.util.Random\n\nval distinctChars = words.flatMap(word => word.toLowerCase.toSeq).distinct\ndistinctChars.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414365400_718560213","id":"20220501-141245_425938967","dateCreated":"2022-05-01T14:12:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8540","dateFinished":"2022-05-01T14:57:51+0000","dateStarted":"2022-05-01T14:57:50+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.util.Random\ndistinctChars: org.apache.spark.rdd.RDD[Char] = MapPartitionsRDD[83] at distinct at <console>:29\nres45: Array[Char] = Array(d, p, t, b, h, n, f, v, :, r, l, s, e, a, i, k, u, o, g, m, c)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=41"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414464794_1913861308","id":"20220501-141424_332289617","dateCreated":"2022-05-01T14:14:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9016","text":"val charRDD = distinctChars.map(c => (c, new Random().nextDouble()))\ncharRDD.collect()\nval charRDD2 = distinctChars.map(c => (c, new Random().nextDouble()))\ncharRDD2.collect()\nval charRDD3 = distinctChars.map(c => (c, new Random().nextDouble()))\ncharRDD3.collect()","dateUpdated":"2022-05-01T14:57:51+0000","dateFinished":"2022-05-01T14:57:52+0000","dateStarted":"2022-05-01T14:57:51+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"charRDD: org.apache.spark.rdd.RDD[(Char, Double)] = MapPartitionsRDD[84] at map at <console>:31\nres47: Array[(Char, Double)] = Array((d,0.07468808452321296), (p,0.6737414806253919), (t,0.601689955861305), (b,0.2819304465771023), (h,0.8798040048400945), (n,0.6284842470831273), (f,0.5633173171030873), (v,0.2895997899928918), (:,0.7677378617835257), (r,0.5220803379072219), (l,0.544998207098679), (s,0.20730082683117468), (e,0.038963705032729945), (a,0.5573596880818673), (i,0.8413453990050724), (k,0.5560852316267633), (u,0.3816057034529464), (o,0.06778307684187956), (g,0.3019048119017306), (m,0.2885813291825742), (c,0.29759976551392564))\ncharRDD2: org.apache.spark.rdd.RDD[(Char, Double)] = MapPartitionsRDD[85] at map at <console>:31\nres48: Array[(Char, Double)] = Array((d,0.5746117677005268), (p,0.08618729235401934), (t,0.7087524493878623), (b,0.5368682639478735), (h,0.7123848307089153), (n,0.23772048356868347), (f,0.0876200882983339), (v,0.03235191383756575), (:,0.9540240346505648), (r,0.13038670900210858), (l,0.21331404087373007), (s,0.8579892943875321), (e,0.3690994902595004), (a,0.407335942512178), (i,0.04236530990743459), (k,0.8413892679764201), (u,0.5590647961991799), (o,0.39371619448017736), (g,0.6051658877488795), (m,0.1805361741307766), (c,0.005419885032982741))\ncharRDD3: org.apache.spark.rdd.RDD[(Char, Double)] = MapPartitionsRDD[86] at map at <console>:31\nres49: Array[(Char, Double)] = Array((d,0.9411521745957148), (p,0.052163052630173845), (t,0.39659795210799775), (b,0.32013724758821893), (h,0.3576806665267801), (n,0.1445036060424798), (f,0.6455215736405073), (v,0.46880247694282606), (:,0.6457877393609837), (r,0.7729389502729737), (l,0.2242180077351874), (s,0.4147688375541261), (e,0.3846739788762309), (a,0.22991011415253426), (i,0.9409378130615421), (k,0.853385298408), (u,0.8608118551659674), (o,0.9932205148568262), (g,0.3461961965283177), (m,0.012474169010173952), (c,0.02740145868041366))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=42","http://0927a691e26f:4040/jobs/job?id=43","http://0927a691e26f:4040/jobs/job?id=44"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414511376_-2025253868","id":"20220501-141511_2121179582","dateCreated":"2022-05-01T14:15:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9286","text":"charRDD.cogroup(charRDD2, charRDD3).take(5)","dateUpdated":"2022-05-01T14:57:52+0000","dateFinished":"2022-05-01T14:57:52+0000","dateStarted":"2022-05-01T14:57:52+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res51: Array[(Char, (Iterable[Double], Iterable[Double], Iterable[Double]))] = Array((d,(CompactBuffer(0.4718899233636227),CompactBuffer(0.9583908711126713),CompactBuffer(0.7491010265734847))), (p,(CompactBuffer(0.07980978108841541),CompactBuffer(0.5749862606019803),CompactBuffer(0.788488641752924))), (t,(CompactBuffer(0.8798441762454446),CompactBuffer(0.2833880454988792),CompactBuffer(0.3189962867637477))), (b,(CompactBuffer(0.8598626455963366),CompactBuffer(0.3834635115764413),CompactBuffer(0.13653610426908347))), (h,(CompactBuffer(0.43238298838282685),CompactBuffer(0.6986029733855044),CompactBuffer(0.18587721246561095))))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=45"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414379877_34055291","id":"20220501-141259_1669589486","dateCreated":"2022-05-01T14:12:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8612","text":"%spark.pyspark\nimport random\n\ndistinctChars = words.flatMap(lambda word: word.lower()).distinct()\ncharRDD = distinctChars.map(lambda c: (c, random.random()))\ncharRDD2 = distinctChars.map(lambda c: (c, random.random()))\n\ncharRDD.cogroup(charRDD2).take(5)","dateUpdated":"2022-05-01T14:57:52+0000","dateFinished":"2022-05-01T14:57:53+0000","dateStarted":"2022-05-01T14:57:53+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('a', (<pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a1d0>, <pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a750>)), ('i', (<pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a7d0>, <pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a5d0>)), ('u', (<pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a290>, <pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a6d0>)), ('e', (<pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a550>, <pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a610>)), ('m', (<pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a2d0>, <pyspark.resultiterable.ResultIterable object at 0x7f6ff7a3a650>))]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=46"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 13.4 조인\n- 구조적 API와 거의 동일한 방식이지만, RDD를 사용하면 사용자가 많은 부분에 관여해야함\n- 파라미터\n    - (필수) 조인하려는 두 개의 RDD\n    - 출력 파티션 수\n    - 사용자 정의 파티션 함수","user":"anonymous","dateUpdated":"2022-05-01T14:57:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414172537_-2005943019","id":"20220501-140932_2100059781","dateCreated":"2022-05-01T14:09:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7614","dateFinished":"2022-05-01T14:57:53+0000","dateStarted":"2022-05-01T14:57:53+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>13.4 조인</h2>\n<ul>\n  <li>구조적 API와 거의 동일한 방식이지만, RDD를 사용하면 사용자가 많은 부분에 관여해야함</li>\n  <li>파라미터\n    <ul>\n      <li>(필수) 조인하려는 두 개의 RDD</li>\n      <li>출력 파티션 수</li>\n      <li>사용자 정의 파티션 함수</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"text":"%md\n### 13.4.1 내부 조인","user":"anonymous","dateUpdated":"2022-05-01T14:57:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414184490_871403941","id":"20220501-140944_1329976774","dateCreated":"2022-05-01T14:09:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7703","dateFinished":"2022-05-01T14:57:53+0000","dateStarted":"2022-05-01T14:57:53+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.4.1 내부 조인</h3>\n</div>"}]}},{"text":"val keyedChars = distinctChars.map(c => (c, new Random().nextDouble()))\nval outputPartitions = 10","user":"anonymous","dateUpdated":"2022-05-01T14:57:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414644421_-635494615","id":"20220501-141724_1597072912","dateCreated":"2022-05-01T14:17:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9445","dateFinished":"2022-05-01T14:57:54+0000","dateStarted":"2022-05-01T14:57:53+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"keyedChars: org.apache.spark.rdd.RDD[(Char, Double)] = MapPartitionsRDD[101] at map at <console>:31\noutputPartitions: Int = 10\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414853971_-1849824428","id":"20220501-142053_64554710","dateCreated":"2022-05-01T14:20:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10009","text":"KVcharacters.collect()","dateUpdated":"2022-05-01T14:57:54+0000","dateFinished":"2022-05-01T14:57:54+0000","dateStarted":"2022-05-01T14:57:54+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res54: Array[(Char, Int)] = Array((s,1), (p,1), (a,1), (r,1), (k,1), (t,1), (h,1), (e,1), (d,1), (e,1), (f,1), (i,1), (n,1), (i,1), (t,1), (i,1), (v,1), (e,1), (g,1), (u,1), (i,1), (d,1), (e,1), (:,1), (b,1), (i,1), (g,1), (d,1), (a,1), (t,1), (a,1), (p,1), (r,1), (o,1), (c,1), (e,1), (s,1), (s,1), (i,1), (n,1), (g,1), (m,1), (a,1), (d,1), (e,1), (s,1), (i,1), (m,1), (p,1), (l,1), (e,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=47"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414923129_-1516959888","id":"20220501-142203_1771394005","dateCreated":"2022-05-01T14:22:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10487","text":"KVcharacters.count()","dateUpdated":"2022-05-01T14:57:54+0000","dateFinished":"2022-05-01T14:57:54+0000","dateStarted":"2022-05-01T14:57:54+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res56: Long = 51\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=48"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414862012_1110210771","id":"20220501-142102_1471901367","dateCreated":"2022-05-01T14:21:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10105","text":"keyedChars.collect()","dateUpdated":"2022-05-01T14:57:55+0000","dateFinished":"2022-05-01T14:57:55+0000","dateStarted":"2022-05-01T14:57:55+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res58: Array[(Char, Double)] = Array((d,0.11176450226352252), (p,0.43496140864436184), (t,0.5459908253855017), (b,0.11902815226348185), (h,0.004570427278828615), (n,0.1232477969832716), (f,0.6411530712021243), (v,0.02391875639660035), (:,0.0989716136288421), (r,0.23986536129717984), (l,0.9546446425389391), (s,0.652138968075543), (e,0.10548768866631186), (a,0.9775103987836411), (i,0.3198278581092864), (k,0.2626173510033417), (u,0.42157073353802266), (o,0.7993102664897187), (g,0.5269064424500486), (m,0.5213273680814818), (c,0.8710355884267099))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=49"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414931023_34939458","id":"20220501-142211_2138075163","dateCreated":"2022-05-01T14:22:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10600","text":"keyedChars.count()","dateUpdated":"2022-05-01T14:57:55+0000","dateFinished":"2022-05-01T14:57:55+0000","dateStarted":"2022-05-01T14:57:55+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res60: Long = 21\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=50"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414885376_-1617884906","id":"20220501-142125_686485899","dateCreated":"2022-05-01T14:21:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10372","text":"KVcharacters.join(keyedChars).collect()","dateUpdated":"2022-05-01T14:57:55+0000","dateFinished":"2022-05-01T14:57:56+0000","dateStarted":"2022-05-01T14:57:55+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res62: Array[(Char, (Int, Double))] = Array((d,(1,0.09551333524011107)), (d,(1,0.09551333524011107)), (d,(1,0.09551333524011107)), (d,(1,0.09551333524011107)), (p,(1,0.05098985764810238)), (p,(1,0.05098985764810238)), (p,(1,0.05098985764810238)), (t,(1,0.010593067493657071)), (t,(1,0.010593067493657071)), (t,(1,0.010593067493657071)), (b,(1,0.09350995601185363)), (h,(1,0.6709454469601197)), (n,(1,0.08930172055164787)), (n,(1,0.08930172055164787)), (f,(1,0.9336622727771855)), (v,(1,0.7824987270275576)), (:,(1,0.2953726035431409)), (r,(1,0.2836435883186291)), (r,(1,0.2836435883186291)), (l,(1,0.8367343172151647)), (s,(1,0.717099926987817)), (s,(1,0.717099926987817)), (s,(1,0.717099926987817)), (s,(1,0.717099926987817)), (e,(1,0.1283803211504264)), (e,(1,0.1283803211504264)), (e,(1,0.12838..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=51"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414827178_-560004339","id":"20220501-142027_1873070365","dateCreated":"2022-05-01T14:20:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9812","text":"KVcharacters.join(keyedChars).count()","dateUpdated":"2022-05-01T14:57:56+0000","dateFinished":"2022-05-01T14:57:56+0000","dateStarted":"2022-05-01T14:57:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res64: Long = 51\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=52"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414872011_-367806344","id":"20220501-142112_370168383","dateCreated":"2022-05-01T14:21:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10259","text":"KVcharacters.join(keyedChars, outputPartitions).count()","dateUpdated":"2022-05-01T14:57:56+0000","dateFinished":"2022-05-01T14:57:56+0000","dateStarted":"2022-05-01T14:57:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res66: Long = 51\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=53"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414657270_-1280868972","id":"20220501-141737_300051470","dateCreated":"2022-05-01T14:17:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9517","text":"%spark.pyspark\nkeyedChars = distinctChars.map(lambda c: (c, random.random()))\noutputPartitions = 10\n\nKVcharacters.join(keyedChars).count()","dateUpdated":"2022-05-01T14:57:56+0000","dateFinished":"2022-05-01T14:57:57+0000","dateStarted":"2022-05-01T14:57:57+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"51\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=54"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nKVcharacters.join(keyedChars, outputPartitions).count()","user":"anonymous","dateUpdated":"2022-05-01T14:57:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415007276_376350929","id":"20220501-142327_767433314","dateCreated":"2022-05-01T14:23:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10871","dateFinished":"2022-05-01T14:57:57+0000","dateStarted":"2022-05-01T14:57:57+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"51\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=55"],"interpreterSettingId":"spark"}}},{"text":"%md\n- 내부 조인과 같은 형식으로 8장에서 다룬 여러 가지 조인을 할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T14:57:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414807767_-406735324","id":"20220501-142007_1322954053","dateCreated":"2022-05-01T14:20:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9722","dateFinished":"2022-05-01T14:57:57+0000","dateStarted":"2022-05-01T14:57:57+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>내부 조인과 같은 형식으로 8장에서 다룬 여러 가지 조인을 할 수 있음</li>\n</ul>\n</div>"}]}},{"text":"%md\n### 13.4.2 zip\n- 동일한 길이의 두 개의 RDD를 지퍼를 잠그듯이 연결할 수 있으며 PairRDD를 생성함\n- 두 개의 RDD는 동일한 수의 요소와 동일한 수의 파티션을 가져야함","user":"anonymous","dateUpdated":"2022-05-01T14:57:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414205788_281222536","id":"20220501-141005_938824482","dateCreated":"2022-05-01T14:10:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7775","dateFinished":"2022-05-01T14:57:57+0000","dateStarted":"2022-05-01T14:57:57+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.4.2 zip</h3>\n<ul>\n  <li>동일한 길이의 두 개의 RDD를 지퍼를 잠그듯이 연결할 수 있으며 PairRDD를 생성함</li>\n  <li>두 개의 RDD는 동일한 수의 요소와 동일한 수의 파티션을 가져야함</li>\n</ul>\n</div>"}]}},{"text":"val numRange = sc.parallelize(0 to 9, 2)\nnumRange.collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415121357_-1783375202","id":"20220501-142521_865466296","dateCreated":"2022-05-01T14:25:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11102","dateFinished":"2022-05-01T14:57:58+0000","dateStarted":"2022-05-01T14:57:58+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numRange: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[127] at parallelize at <console>:27\nres68: Array[Int] = Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=56"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415149458_1355197152","id":"20220501-142549_2070006990","dateCreated":"2022-05-01T14:25:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11287","text":"words.collect()","dateUpdated":"2022-05-01T14:57:58+0000","dateFinished":"2022-05-01T14:57:58+0000","dateStarted":"2022-05-01T14:57:58+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res70: Array[String] = Array(Spark, The, Definitive, Guide, :, Big, Data, Processing, Made, Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=57"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415148252_-250960211","id":"20220501-142548_1381328253","dateCreated":"2022-05-01T14:25:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11215","text":"words.zip(numRange).collect()","dateUpdated":"2022-05-01T14:57:58+0000","dateFinished":"2022-05-01T14:57:59+0000","dateStarted":"2022-05-01T14:57:58+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res72: Array[(String, Int)] = Array((Spark,0), (The,1), (Definitive,2), (Guide,3), (:,4), (Big,5), (Data,6), (Processing,7), (Made,8), (Simple,9))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=58"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nnumRange = sc.parallelize(range(10), 2)\nwords.zip(numRange).collect()","user":"anonymous","dateUpdated":"2022-05-01T14:57:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415114224_-256999637","id":"20220501-142514_539303497","dateCreated":"2022-05-01T14:25:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11028","dateFinished":"2022-05-01T14:57:59+0000","dateStarted":"2022-05-01T14:57:59+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('Spark', 0), ('The', 1), ('Definitive', 2), ('Guide', 3), (':', 4), ('Big', 5), ('Data', 6), ('Processing', 7), ('Made', 8), ('Simple', 9)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=59"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 13.5 파티션 제어하기\n- RDD를 사용하면 <strong>데이터가 클러스터 전체에 물리적으로 정확히 분산되는 방식</strong>을 정의할 수 있다.\n- 이러한 기능을 가진 메서드 중 일부는 구조적 API와 기본적으로 동일\n- 다른 점은, <strong>파티션 함수를 파라미터로</strong> 사용할 수 있다는 사실\n  - 파티션 함수: 보통 사용자 지정 Partitioner를 의미","user":"anonymous","dateUpdated":"2022-05-01T14:57:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414213807_-1057279684","id":"20220501-141013_2032307594","dateCreated":"2022-05-01T14:10:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7847","dateFinished":"2022-05-01T14:57:59+0000","dateStarted":"2022-05-01T14:57:59+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>13.5 파티션 제어하기</h2>\n<ul>\n  <li>RDD를 사용하면 <strong>데이터가 클러스터 전체에 물리적으로 정확히 분산되는 방식</strong>을 정의할 수 있다.</li>\n  <li>이러한 기능을 가진 메서드 중 일부는 구조적 API와 기본적으로 동일</li>\n  <li>다른 점은, <strong>파티션 함수를 파라미터로</strong> 사용할 수 있다는 사실</li>\n  <li>파티션 함수: 보통 사용자 지정 Partitioner를 의미</li>\n</ul>\n</div>"}]}},{"text":"%md\n### 13.5.1 coalesce\n- 파티션을 재분배할 때 발생하는 데이터 <strong>셔플을 방지하기 위해 동일한 워크에 존재하는 파티션을 합치는 메서드</strong>","user":"anonymous","dateUpdated":"2022-05-01T14:57:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414242307_1765145791","id":"20220501-141042_576047387","dateCreated":"2022-05-01T14:10:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7920","dateFinished":"2022-05-01T14:57:59+0000","dateStarted":"2022-05-01T14:57:59+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.5.1 coalesce</h3>\n<ul>\n  <li>파티션을 재분배할 때 발생하는 데이터 <strong>셔플을 방지하기 위해 동일한 워크에 존재하는 파티션을 합치는 메서드</strong></li>\n</ul>\n</div>"}]}},{"text":"words.coalesce(1).getNumPartitions // 2 -> 1","user":"anonymous","dateUpdated":"2022-05-01T14:57:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415212188_162094353","id":"20220501-142652_1301894758","dateCreated":"2022-05-01T14:26:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11502","dateFinished":"2022-05-01T14:58:00+0000","dateStarted":"2022-05-01T14:57:59+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res74: Int = 1\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415282839_-1641627116","id":"20220501-142802_119432544","dateCreated":"2022-05-01T14:28:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11934","text":"%spark.pyspark\nwords.coalesce(1).getNumPartitions() # 2 -> 1","dateUpdated":"2022-05-01T14:58:00+0000","dateFinished":"2022-05-01T14:58:00+0000","dateStarted":"2022-05-01T14:58:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1\n"}]}},{"text":"%md\n### 13.5.2 repartition\n- 똑같이 파티션 수를 늘리거나 줄일 수 있음\n- 하지만 <strong>노드 간 셔플</strong>이 발생\n- 파티션 수를 늘리면 맵 타입이나 필터 타입의 연산을 수행할 때 병렬 처리 수준을 높일 수 있음","user":"anonymous","dateUpdated":"2022-05-01T14:58:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414254091_-1153703103","id":"20220501-141054_2049101456","dateCreated":"2022-05-01T14:10:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8010","dateFinished":"2022-05-01T14:58:00+0000","dateStarted":"2022-05-01T14:58:00+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.5.2 repartition</h3>\n<ul>\n  <li>똑같이 파티션 수를 늘리거나 줄일 수 있음</li>\n  <li>하지만 <strong>노드 간 셔플</strong>이 발생</li>\n  <li>파티션 수를 늘리면 맵 타입이나 필터 타입의 연산을 수행할 때 병렬 처리 수준을 높일 수 있음</li>\n</ul>\n</div>"}]}},{"text":"words.repartition(10) // gives us 10 partitions","user":"anonymous","dateUpdated":"2022-05-01T14:58:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415219276_-2039018126","id":"20220501-142659_446227961","dateCreated":"2022-05-01T14:26:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11574","dateFinished":"2022-05-01T14:58:00+0000","dateStarted":"2022-05-01T14:58:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res76: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[136] at repartition at <console>:30\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415385158_659388731","id":"20220501-142945_851839657","dateCreated":"2022-05-01T14:29:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12142","text":"%spark.pyspark\nwords.repartition(10) # gives us 10 partitions","dateUpdated":"2022-05-01T14:58:00+0000","dateFinished":"2022-05-01T14:58:00+0000","dateStarted":"2022-05-01T14:58:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"MapPartitionsRDD[141] at coalesce at NativeMethodAccessorImpl.java:0\n"}]}},{"text":"%md\n### 13.5.3 repartitionAndSortWithinPartitions\n- 파티션 재분배 가능\n- 재분배된 결과 파티션의 정렬 방식을 지정할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T14:58:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414266360_1320992006","id":"20220501-141106_1779773489","dateCreated":"2022-05-01T14:11:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8100","dateFinished":"2022-05-01T14:58:01+0000","dateStarted":"2022-05-01T14:58:01+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.5.3 repartitionAndSortWithinPartitions</h3>\n<ul>\n  <li>파티션 재분배 가능</li>\n  <li>재분배된 결과 파티션의 정렬 방식을 지정할 수 있음</li>\n</ul>\n</div>"}]}},{"text":"%md\n### 13.5.4 사용자 정의 파티셔닝\n- RDD를 사용하는 가장 큰 이유 중 하나이므로 가장 중요\n\n- 사용자 정의 파티셔너는 <strong>저수준 API의 세부적인 구현 방식</strong>\n    - job이 성공적으로 동작되는지 여부에 상당한 영향을 미침\n\n- 대표적인 예제는 페이지랭크\n    - 사용자 정의 파티셔닝을 이용해 클러스터의 데이터 배치 구조를 제어하고 셔플을 회피\n\n- <strong>사용자 정의 파티셔닝의 유일한 목표: 데이터의 치우침 같은 문제를 피하는 것</strong>\n    - 즉, 클러스터 전체에 걸쳐 <strong>데이터를 균등하게 분배</strong>하는 것\n\n- 적용 방법\n    1. 구조적 API로 RDD를 얻고\n    2. 사용자 정의 파티셔너를 적용한 다음\n    3. 다시 DataFram이나 Dataset으로 변환해야함\n\n- 사용자 정의 파티셔닝을 하려면 Partitioner를 확장한 클래스를 구현해야함\n    - 문제에 대한 업무 지식을 충분히 가지고 있을 경우에만 시도\n    - 단일 값이나 다수 값/컬럼을 파티셔닝 해야한다면 DataFrame API를 사용하는 것이 좋음","user":"anonymous","dateUpdated":"2022-05-01T14:58:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414277471_1478170833","id":"20220501-141117_1348834934","dateCreated":"2022-05-01T14:11:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8190","dateFinished":"2022-05-01T14:58:01+0000","dateStarted":"2022-05-01T14:58:01+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>13.5.4 사용자 정의 파티셔닝</h3>\n<ul>\n  <li>\n  <p>RDD를 사용하는 가장 큰 이유 중 하나이므로 가장 중요</p></li>\n  <li>\n    <p>사용자 정의 파티셔너는 <strong>저수준 API의 세부적인 구현 방식</strong></p>\n    <ul>\n      <li>job이 성공적으로 동작되는지 여부에 상당한 영향을 미침</li>\n    </ul>\n  </li>\n  <li>\n    <p>대표적인 예제는 페이지랭크</p>\n    <ul>\n      <li>사용자 정의 파티셔닝을 이용해 클러스터의 데이터 배치 구조를 제어하고 셔플을 회피</li>\n    </ul>\n  </li>\n  <li>\n    <strong>사용자 정의 파티셔닝의 유일한 목표: 데이터의 치우침 같은 문제를 피하는 것</strong>\n    <ul>\n      <li>즉, 클러스터 전체에 걸쳐 <strong>데이터를 균등하게 분배</strong>하는 것</li>\n    </ul>\n  </li>\n  <li>\n    <p>적용 방법</p>\n    <ol>\n      <li>구조적 API로 RDD를 얻고</li>\n      <li>사용자 정의 파티셔너를 적용한 다음</li>\n      <li>다시 DataFram이나 Dataset으로 변환해야함</li>\n    </ol>\n  </li>\n  <li>\n    <p>사용자 정의 파티셔닝을 하려면 Partitioner를 확장한 클래스를 구현해야함</p>\n    <ul>\n      <li>문제에 대한 업무 지식을 충분히 가지고 있을 경우에만 시도</li>\n      <li>단일 값이나 다수 값/컬럼을 파티셔닝 해야한다면 DataFrame API를 사용하는 것이 좋음</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"text":"val df = (spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(\"/data/retail-data/all/\"))\nval rdd = df.coalesce(10).rdd\ndf.printSchema()\ndf.count()","user":"anonymous","dateUpdated":"2022-05-01T14:58:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415257599_-2139162758","id":"20220501-142737_1976498652","dateCreated":"2022-05-01T14:27:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11790","dateFinished":"2022-05-01T14:58:07+0000","dateStarted":"2022-05-01T14:58:01+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\nrdd: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[155] at rdd at <console>:27\nroot\n |-- InvoiceNo: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: string (nullable = true)\n |-- UnitPrice: double (nullable = true)\n |-- CustomerID: integer (nullable = true)\n |-- Country: string (nullable = true)\n\nres79: Long = 541909\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=60","http://0927a691e26f:4040/jobs/job?id=61","http://0927a691e26f:4040/jobs/job?id=62"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415260784_-1501517166","id":"20220501-142740_1530437124","dateCreated":"2022-05-01T14:27:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11862","text":"%spark.pyspark\ndf = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(\"/data/retail-data/all/\")\nrdd = df.coalesce(10).rdd\ndf.printSchema()","dateUpdated":"2022-05-01T14:58:07+0000","dateFinished":"2022-05-01T14:58:08+0000","dateStarted":"2022-05-01T14:58:08+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- InvoiceNo: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: string (nullable = true)\n |-- UnitPrice: double (nullable = true)\n |-- CustomerID: integer (nullable = true)\n |-- Country: string (nullable = true)\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=63","http://0927a691e26f:4040/jobs/job?id=64"],"interpreterSettingId":"spark"}}},{"text":"%md\n#### HashPartitioner, RangePartitioner\n- 이산형 값과 연속형 값을 다룸\n- 기초적인 기능만 제공\n    - 심각하게 치우친 키를 다뤄야 한다면 고급 파티셔닝 기능을 사용\n        - 병렬성을 개선하고 실행 과정에서 out of memory error를 방지할 수 있도록 키를 최대한 분할해야함","user":"anonymous","dateUpdated":"2022-05-01T14:58:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415980705_-1472984686","id":"20220501-143940_1857957636","dateCreated":"2022-05-01T14:39:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12797","dateFinished":"2022-05-01T14:58:08+0000","dateStarted":"2022-05-01T14:58:08+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>HashPartitioner, RangePartitioner</h4>\n<ul>\n  <li>이산형 값과 연속형 값을 다룸</li>\n  <li>기초적인 기능만 제공\n    <ul>\n      <li>심각하게 치우친 키를 다뤄야 한다면 고급 파티셔닝 기능을 사용\n        <ul>\n          <li>병렬성을 개선하고 실행 과정에서 out of memory error를 방지할 수 있도록 키를 최대한 분할해야함</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651415458973_-1073623139","id":"20220501-143058_2108712186","dateCreated":"2022-05-01T14:30:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12246","text":"import org.apache.spark.HashPartitioner\n\nrdd.map(r => r(6)).take(5).foreach(println)\nval keyedRDD = rdd.keyBy(row => row(6).asInstanceOf[Int].toDouble)\n\nkeyedRDD.partitionBy(new HashPartitioner(10)).take(10)","dateUpdated":"2022-05-01T14:58:08+0000","dateFinished":"2022-05-01T14:58:11+0000","dateStarted":"2022-05-01T14:58:09+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.HashPartitioner\n17850\n17850\n17850\n17850\n17850\nkeyedRDD: org.apache.spark.rdd.RDD[(Double, org.apache.spark.sql.Row)] = MapPartitionsRDD[177] at keyBy at <console>:30\nres82: Array[(Double, org.apache.spark.sql.Row)] = Array((15100.0,[536374,21258,VICTORIAN SEWING BOX LARGE,32,12/1/2010 9:09,10.95,15100,United Kingdom]), (16250.0,[536388,21754,HOME BUILDING BLOCK WORD,3,12/1/2010 9:59,5.95,16250,United Kingdom]), (16250.0,[536388,21755,LOVE BUILDING BLOCK WORD,3,12/1/2010 9:59,5.95,16250,United Kingdom]), (16250.0,[536388,21523,DOORMAT FANCY FONT HOME SWEET HOME,2,12/1/2010 9:59,7.95,16250,United Kingdom]), (16250.0,[536388,21363,HOME SMALL WOOD LETTERS,3,12/1/2010 9:59,4.95,16250,United Kingdom]), (16250.0,[536388,21411,GINGHAM HEART  DOORSTOP RED,3,12/1/2010 9:59,4.25,16250,United Kingdom]), (16250.0,[536388,22318,FIVE HEART HANGING DECORATION,6,12/1/2010 9:59,2.95,16250,United Kingdom]), (16250.0,[536388,22464,HANGING METAL HEART LANTERN,12,12/1/20..."}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=65","http://0927a691e26f:4040/jobs/job?id=66"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651416059410_684574827","id":"20220501-144059_1830769025","dateCreated":"2022-05-01T14:40:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12887","text":"%md\n#### case 예시\n두 고객의 데이터가 너무 많아서 다른 고객의 정보와 두 고객의 정보를 분리하려함(두 그룹 생성)¶","dateUpdated":"2022-05-01T14:58:11+0000","dateFinished":"2022-05-01T14:58:11+0000","dateStarted":"2022-05-01T14:58:11+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>case 예시</h4>\n<p>두 고객의 데이터가 너무 많아서 다른 고객의 정보와 두 고객의 정보를 분리하려함(두 그룹 생성)¶</p>\n</div>"}]}},{"text":"import org.apache.spark.Partitioner\nclass DomainPartitioner extends Partitioner {\n def numPartitions = 3\n def getPartition(key: Any): Int = {\n   val customerId = key.asInstanceOf[Double].toInt\n   if (customerId == 17850.0 || customerId == 12583.0) {\n     return 0\n   } else {\n     return new java.util.Random().nextInt(2) + 1\n   }\n }\n}\n\n(keyedRDD\n  .partitionBy(new DomainPartitioner).map(_._1).glom().map(_.toSet.toSeq.length)\n  .take(5))","user":"anonymous","dateUpdated":"2022-05-01T15:01:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651416210709_274646821","id":"20220501-144330_601567033","dateCreated":"2022-05-01T14:43:30+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:13106","dateFinished":"2022-05-01T15:01:39+0000","dateStarted":"2022-05-01T15:01:38+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"import org.apache.spark.Partitioner\n<console>:12: error: not found: type Partitioner\n       class DomainPartitioner extends Partitioner {\n                                       ^\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651416231841_-898142729","id":"20220501-144351_1677411140","dateCreated":"2022-05-01T14:43:51+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:13178","text":"%spark.pyspark\ndef partitionFunc(key):\n  import random\n  if key == 17850 or key == 12583:\n    return 0\n  else:\n    return random.randint(1,2)\n\nkeyedRDD = rdd.keyBy(lambda row: row[6])\nkeyedRDD\\\n  .partitionBy(3, partitionFunc)\\\n  .map(lambda x: x[0])\\\n  .glom()\\\n  .map(lambda x: len(set(x)))\\\n  .take(5)","dateUpdated":"2022-05-01T14:47:57+0000","dateFinished":"2022-05-01T14:47:59+0000","dateStarted":"2022-05-01T14:47:58+0000","errorMessage":"org.apache.thrift.transport.TTransportException\n\tat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\n\tat org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_interpret(RemoteInterpreterService.java:274)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:258)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:233)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:229)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:135)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"org.apache.thrift.transport.TTransportException\n\tat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\n\tat org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_interpret(RemoteInterpreterService.java:274)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:258)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:233)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:229)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:135)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4041/jobs/job?id=83"],"interpreterSettingId":"spark"}}},{"text":"%md\n## 13.6 사용자 정의 직렬화\n- 병렬화 대상인 모든 객체나 함수는 직렬화 할 수 있어야함\n- 스파크는 Kryo 라이브러리를 사용해서 객체를 빠르게 직렬화 할 수 있음\n    - 이는 자바 직렬화보다 약 10배 이상 성능이 좋음\n    - 4부에서 자세히 알아봄","user":"anonymous","dateUpdated":"2022-05-01T14:51:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414290195_2113625947","id":"20220501-141130_215784362","dateCreated":"2022-05-01T14:11:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8280","dateFinished":"2022-05-01T14:51:55+0000","dateStarted":"2022-05-01T14:51:55+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>13.6 사용자 정의 직렬화</h2>\n<ul>\n  <li>병렬화 대상인 모든 객체나 함수는 직렬화 할 수 있어야함</li>\n  <li>스파크는 Kryo 라이브러리를 사용해서 객체를 빠르게 직렬화 할 수 있음\n    <ul>\n      <li>이는 자바 직렬화보다 약 10배 이상 성능이 좋음</li>\n      <li>4부에서 자세히 알아봄</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]}},{"text":"class SomeClass extends Serializable {\n  var someValue = 0\n  def setSomeValue(i:Int) = {\n    someValue = i\n    this\n  }\n}\n\nsc.parallelize(1 to 10).map(num => new SomeClass().setSomeValue(num))","user":"anonymous","dateUpdated":"2022-05-01T14:44:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651414315772_-1387142899","id":"20220501-141155_613170909","dateCreated":"2022-05-01T14:11:55+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8370"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651416273789_1863904672","id":"20220501-144433_1545651763","dateCreated":"2022-05-01T14:44:33+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:13250","text":"val conf = new SparkConf().setMaster(...).setAppName(...)\nconf.registerKryoClasses(Array(classOf[MyClass1], classOf[MyClass2]))\nval sc = new SparkContext(conf)","dateUpdated":"2022-05-01T14:44:39+0000"}],"name":"Chapter13","id":"2H4SF2WYQ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}