{"paragraphs":[{"text":"%sh\n# For prevent crash with other note's execution,\n# I recommend to restart spark interpreter.\n\ncurl -X PUT http://localhost:8080/api/interpreter/setting/restart/spark","user":"anonymous","dateUpdated":"2022-03-14T05:24:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0\r100  3988  100  3988    0     0   1414      0  0:00:02  0:00:02 --:--:--  1414\r100  3988  100  3988    0     0   1414      0  0:00:02  0:00:02 --:--:--  1414\n{\"status\":\"OK\",\"message\":\"\",\"body\":{\"id\":\"spark\",\"name\":\"spark\",\"group\":\"spark\",\"properties\":{\"zeppelin.spark.concurrentSQL\":{\"name\":\"zeppelin.spark.concurrentSQL\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.R.knitr\":{\"name\":\"zeppelin.R.knitr\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.R.cmd\":{\"name\":\"zeppelin.R.cmd\",\"value\":\"R\",\"type\":\"string\"},\"zeppelin.R.image.width\":{\"name\":\"zeppelin.R.image.width\",\"value\":\"100%\",\"type\":\"number\"},\"zeppelin.spark.importImplicit\":{\"name\":\"zeppelin.spark.importImplicit\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.dep.additionalRemoteRepository\":{\"name\":\"zeppelin.dep.additionalRemoteRepository\",\"value\":\"spark-packages,http://dl.bintray.com/spark-packages/maven,false;\",\"type\":\"textarea\"},\"zeppelin.dep.localrepo\":{\"name\":\"zeppelin.dep.localrepo\",\"value\":\"local-repo\",\"type\":\"string\"},\"zeppelin.spark.sql.stacktrace\":{\"name\":\"zeppelin.spark.sql.stacktrace\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.spark.useHiveContext\":{\"name\":\"zeppelin.spark.useHiveContext\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.printREPLOutput\":{\"name\":\"zeppelin.spark.printREPLOutput\",\"value\":true,\"type\":\"checkbox\"},\"spark.cores.max\":{\"name\":\"spark.cores.max\",\"value\":\"3\",\"type\":\"number\"},\"spark.executor.memory\":{\"name\":\"spark.executor.memory\",\"value\":\"2g\",\"type\":\"string\"},\"zeppelin.spark.sql.interpolation\":{\"name\":\"zeppelin.spark.sql.interpolation\",\"value\":false,\"type\":\"checkbox\"},\"spark.driver.memory\":{\"name\":\"spark.driver.memory\",\"value\":\"2g\",\"type\":\"textarea\"},\"spark.app.name\":{\"name\":\"spark.app.name\",\"value\":\"Zeppelin\",\"type\":\"string\"},\"zeppelin.spark.maxResult\":{\"name\":\"zeppelin.spark.maxResult\",\"value\":\"1000\",\"type\":\"number\"},\"master\":{\"name\":\"master\",\"value\":\"local[*]\",\"type\":\"string\"},\"zeppelin.pyspark.python\":{\"name\":\"zeppelin.pyspark.python\",\"value\":\"python\",\"type\":\"string\"},\"args\":{\"name\":\"args\",\"value\":\"\",\"type\":\"textarea\"},\"zeppelin.spark.enableSupportedVersionCheck\":{\"name\":\"zeppelin.spark.enableSupportedVersionCheck\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.useNew\":{\"name\":\"zeppelin.spark.useNew\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.pyspark.useIPython\":{\"name\":\"zeppelin.pyspark.useIPython\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.uiWebUrl\":{\"name\":\"zeppelin.spark.uiWebUrl\",\"value\":\"\",\"type\":\"string\"},\"zeppelin.R.render.options\":{\"name\":\"zeppelin.R.render.options\",\"value\":\"out.format \\u003d \\u0027html\\u0027, comment \\u003d NA, echo \\u003d FALSE, results \\u003d \\u0027asis\\u0027, message \\u003d F, warning \\u003d F, fig.retina \\u003d 2\",\"type\":\"textarea\"},\"spark.jars\":{\"name\":\"spark.jars\",\"value\":\"/zeppelin/lib/sqlite-jdbc-3.23.1.jar\",\"type\":\"textarea\"}},\"status\":\"READY\",\"interpreterGroup\":[{\"name\":\"spark\",\"class\":\"org.apache.zeppelin.spark.SparkInterpreter\",\"defaultInterpreter\":true,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"sql\",\"class\":\"org.apache.zeppelin.spark.SparkSqlInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"sql\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"dep\",\"class\":\"org.apache.zeppelin.spark.DepInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"pyspark\",\"class\":\"org.apache.zeppelin.spark.PySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"ipyspark\",\"class\":\"org.apache.zeppelin.spark.IPySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionSupport\":true}},{\"name\":\"r\",\"class\":\"org.apache.zeppelin.spark.SparkRInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"r\",\"editOnDblClick\":false,\"completionSupport\":false}}],\"dependencies\":[],\"option\":{\"remote\":true,\"port\":-1,\"perNote\":\"shared\",\"perUser\":\"shared\",\"isExistingProcess\":false,\"setPermission\":false,\"owners\":[],\"isUserImpersonate\":false}}}"}]},"apps":[],"jobName":"paragraph_1647233338881_149935958","id":"20220314-044858_1559482361","dateCreated":"2022-03-14T04:48:58+0000","dateStarted":"2022-03-14T05:24:34+0000","dateFinished":"2022-03-14T05:24:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:52"},{"text":"%md\n## Dataset","user":"anonymous","dateUpdated":"2022-03-14T05:24:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Dataset</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233628595_-1890129508","id":"20220314-045348_1971694915","dateCreated":"2022-03-14T04:53:48+0000","dateStarted":"2022-03-14T05:24:37+0000","dateFinished":"2022-03-14T05:24:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:53"},{"text":"// 스칼라\nimport spark.implicits._\ncase class Flight(DEST_COUNTRY_NAME: String,\n                  ORIGIN_COUNTRY_NAME: String,\n                  count: BigInt)\nval flightsDF = (spark.read\n  .parquet(\"/data/flight-data/parquet/2010-summary.parquet/\"))\nval flights = flightsDF.as[Flight]","user":"anonymous","dateUpdated":"2022-03-14T05:24:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\ndefined class Flight\nflightsDF: org.apache.spark.sql.DataFrame = [DEST_COUNTRY_NAME: string, ORIGIN_COUNTRY_NAME: string ... 1 more field]\nflights: org.apache.spark.sql.Dataset[Flight] = [DEST_COUNTRY_NAME: string, ORIGIN_COUNTRY_NAME: string ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233359075_757271676","id":"20220314-044919_826709262","dateCreated":"2022-03-14T04:49:19+0000","dateStarted":"2022-03-14T05:24:38+0000","dateFinished":"2022-03-14T05:24:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:54"},{"text":"// 스칼라\nval ex1 = (flights\n  .filter(flight_row => flight_row.ORIGIN_COUNTRY_NAME != \"Canada\")\n  .map(flight_row => flight_row)\n  .take(5))","user":"anonymous","dateUpdated":"2022-03-14T05:24:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ex1: Array[Flight] = Array(Flight(United States,Romania,1), Flight(United States,Ireland,264), Flight(United States,India,69), Flight(Egypt,United States,24), Flight(Equatorial Guinea,United States,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233429532_1408859979","id":"20220314-045029_368361294","dateCreated":"2022-03-14T04:50:29+0000","dateStarted":"2022-03-14T05:24:51+0000","dateFinished":"2022-03-14T05:24:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:55"},{"text":"// 스칼라\nval ex2 = (flights\n  .take(5)\n  .filter(flight_row => flight_row.ORIGIN_COUNTRY_NAME != \"Canada\")\n  .map(fr => Flight(fr.DEST_COUNTRY_NAME, fr.ORIGIN_COUNTRY_NAME, fr.count + 5)))","user":"anonymous","dateUpdated":"2022-03-14T05:24:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ex2: Array[Flight] = Array(Flight(United States,Romania,6), Flight(United States,Ireland,269), Flight(United States,India,74), Flight(Egypt,United States,29), Flight(Equatorial Guinea,United States,6))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233431556_946044122","id":"20220314-045031_973271420","dateCreated":"2022-03-14T04:50:31+0000","dateStarted":"2022-03-14T05:24:53+0000","dateFinished":"2022-03-14T05:24:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:56"},{"text":"%md\n## 구조적 스트리밍\n### 예제: 특정 고객이 대량으로 구매하는 영업 시간 살펴보기\n  - 구매비용 컬럼을 추가하고\n  - 고객이 가장 많이 소비한 날 구하기","user":"anonymous","dateUpdated":"2022-03-14T05:24:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>구조적 스트리밍</h2>\n<h3>예제: 특정 고객이 대량으로 구매하는 영업 시간 살펴보기</h3>\n<ul>\n  <li>구매비용 컬럼을 추가하고</li>\n  <li>고객이 가장 많이 소비한 날 구하기</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233372800_-1478405192","id":"20220314-044932_504934924","dateCreated":"2022-03-14T04:49:32+0000","dateStarted":"2022-03-14T05:24:53+0000","dateFinished":"2022-03-14T05:24:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:57"},{"text":"%md\n#### Case 1: 기본(정적) DataFrame 처리","user":"anonymous","dateUpdated":"2022-03-14T05:24:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Case 1: 기본(정적) DataFrame 처리</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233831089_-1834197802","id":"20220314-045711_734694432","dateCreated":"2022-03-14T04:57:11+0000","dateStarted":"2022-03-14T05:24:53+0000","dateFinished":"2022-03-14T05:24:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58"},{"text":"// 스칼라\nval staticDataFrame = (spark.read.format(\"csv\")\n  .option(\"header\", \"true\")\n  .option(\"inferSchema\", \"true\")\n  .load(\"/data/retail-data/by-day/*.csv\"))\n  \nstaticDataFrame.createOrReplaceTempView(\"retail_data\")\nval staticSchema = staticDataFrame.schema","user":"anonymous","dateUpdated":"2022-03-14T05:24:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"staticDataFrame: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\nstaticSchema: org.apache.spark.sql.types.StructType = StructType(StructField(InvoiceNo,StringType,true), StructField(StockCode,StringType,true), StructField(Description,StringType,true), StructField(Quantity,IntegerType,true), StructField(InvoiceDate,TimestampType,true), StructField(UnitPrice,DoubleType,true), StructField(CustomerID,DoubleType,true), StructField(Country,StringType,true))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=3","http://0927a691e26f:4040/jobs/job?id=4","http://0927a691e26f:4040/jobs/job?id=5","http://0927a691e26f:4040/jobs/job?id=6"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233686768_-437542041","id":"20220314-045446_691747789","dateCreated":"2022-03-14T04:54:46+0000","dateStarted":"2022-03-14T05:24:54+0000","dateFinished":"2022-03-14T05:24:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:59"},{"text":"// 스칼라\nstaticSchema","user":"anonymous","dateUpdated":"2022-03-14T05:24:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res14: org.apache.spark.sql.types.StructType = StructType(StructField(InvoiceNo,StringType,true), StructField(StockCode,StringType,true), StructField(Description,StringType,true), StructField(Quantity,IntegerType,true), StructField(InvoiceDate,TimestampType,true), StructField(UnitPrice,DoubleType,true), StructField(CustomerID,DoubleType,true), StructField(Country,StringType,true))\n"}]},"apps":[],"jobName":"paragraph_1647233781216_-297582658","id":"20220314-045621_1447982425","dateCreated":"2022-03-14T04:56:21+0000","dateStarted":"2022-03-14T05:24:58+0000","dateFinished":"2022-03-14T05:24:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:60"},{"text":"%spark.pyspark\nstaticDataFrame = spark.read.format(\"csv\")\\\n  .option(\"header\", \"true\")\\\n  .option(\"inferSchema\", \"true\")\\\n  .load(\"/data/retail-data/by-day/*.csv\")\n\nstaticDataFrame.createOrReplaceTempView(\"retail_data\")\nstaticSchema = staticDataFrame.schema\nstaticSchema","user":"anonymous","dateUpdated":"2022-03-14T05:24:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(InvoiceNo,StringType,true),StructField(StockCode,StringType,true),StructField(Description,StringType,true),StructField(Quantity,IntegerType,true),StructField(InvoiceDate,TimestampType,true),StructField(UnitPrice,DoubleType,true),StructField(CustomerID,DoubleType,true),StructField(Country,StringType,true)))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=7","http://0927a691e26f:4040/jobs/job?id=8","http://0927a691e26f:4040/jobs/job?id=9","http://0927a691e26f:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233701573_-1396321414","id":"20220314-045501_191039233","dateCreated":"2022-03-14T04:55:01+0000","dateStarted":"2022-03-14T05:24:58+0000","dateFinished":"2022-03-14T05:25:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:61"},{"text":"%spark.pyspark\nstaticSchema","user":"anonymous","dateUpdated":"2022-03-14T05:25:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(InvoiceNo,StringType,true),StructField(StockCode,StringType,true),StructField(Description,StringType,true),StructField(Quantity,IntegerType,true),StructField(InvoiceDate,TimestampType,true),StructField(UnitPrice,DoubleType,true),StructField(CustomerID,DoubleType,true),StructField(Country,StringType,true)))\n"}]},"apps":[],"jobName":"paragraph_1647233763274_-71708844","id":"20220314-045603_804809329","dateCreated":"2022-03-14T04:56:03+0000","dateStarted":"2022-03-14T05:25:03+0000","dateFinished":"2022-03-14T05:25:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:62"},{"text":"// 스칼라\nimport org.apache.spark.sql.functions.{window, column, desc, col}\n(staticDataFrame\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\n  .groupBy(\n    col(\"CustomerId\"), window(col(\"InvoiceDate\"), \"1 day\"))\n  .sum(\"total_cost\")\n  .show(5, false))","user":"anonymous","dateUpdated":"2022-03-14T05:25:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.{window, column, desc, col}\n+----------+------------------------------------------+-----------------+\n|CustomerId|window                                    |sum(total_cost)  |\n+----------+------------------------------------------+-----------------+\n|16057.0   |[2011-12-05 00:00:00, 2011-12-06 00:00:00]|-37.6            |\n|14126.0   |[2011-11-29 00:00:00, 2011-11-30 00:00:00]|643.6300000000001|\n|13500.0   |[2011-11-16 00:00:00, 2011-11-17 00:00:00]|497.9700000000001|\n|17160.0   |[2011-11-08 00:00:00, 2011-11-09 00:00:00]|516.8499999999999|\n|15608.0   |[2011-11-11 00:00:00, 2011-11-12 00:00:00]|122.4            |\n+----------+------------------------------------------+-----------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=11"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233923495_655262579","id":"20220314-045843_1296227226","dateCreated":"2022-03-14T04:58:43+0000","dateStarted":"2022-03-14T05:25:03+0000","dateFinished":"2022-03-14T05:25:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:63"},{"text":"%spark.pyspark\nfrom pyspark.sql.functions import window, column, desc, col\nstaticDataFrame\\\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\\\n  .groupBy(\n    col(\"CustomerId\"), window(col(\"InvoiceDate\"), \"1 day\"))\\\n  .sum(\"total_cost\")\\\n  .show(5, False)","user":"anonymous","dateUpdated":"2022-03-14T05:25:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+------------------------------------------+-----------------+\n|CustomerId|window                                    |sum(total_cost)  |\n+----------+------------------------------------------+-----------------+\n|16057.0   |[2011-12-05 00:00:00, 2011-12-06 00:00:00]|-37.6            |\n|14126.0   |[2011-11-29 00:00:00, 2011-11-30 00:00:00]|643.6300000000001|\n|13500.0   |[2011-11-16 00:00:00, 2011-11-17 00:00:00]|497.9700000000001|\n|17160.0   |[2011-11-08 00:00:00, 2011-11-09 00:00:00]|516.8499999999999|\n|15608.0   |[2011-11-11 00:00:00, 2011-11-12 00:00:00]|122.4            |\n+----------+------------------------------------------+-----------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=12"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233974658_-744286181","id":"20220314-045934_1079551459","dateCreated":"2022-03-14T04:59:34+0000","dateStarted":"2022-03-14T05:25:07+0000","dateFinished":"2022-03-14T05:25:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64"},{"text":"%md\n- 로컬 모드에 적합한 셔플 파티션 수 설정\n    - 셔플 파티션 수 = 셔플 이후에 생성될 파티션 수\n    - 기본값(=200)처럼 많은 익스큐터는 필요없음","user":"anonymous","dateUpdated":"2022-03-14T05:25:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>로컬 모드에 적합한 셔플 파티션 수 설정\n    <ul>\n      <li>셔플 파티션 수 = 셔플 이후에 생성될 파티션 수</li>\n      <li>기본값(=200)처럼 많은 익스큐터는 필요없음</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647234460396_1605625792","id":"20220314-050740_1016591329","dateCreated":"2022-03-14T05:07:40+0000","dateStarted":"2022-03-14T05:25:08+0000","dateFinished":"2022-03-14T05:25:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:65"},{"text":"// 스칼라\nspark.conf.set(\"spark.sql.shuffle.partitions\", \"5\")","user":"anonymous","dateUpdated":"2022-03-14T05:25:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647234465342_-2049747641","id":"20220314-050745_688106998","dateCreated":"2022-03-14T05:07:45+0000","dateStarted":"2022-03-14T05:25:09+0000","dateFinished":"2022-03-14T05:25:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:66"},{"text":"%spark.pyspark\nspark.conf.set(\"spark.sql.shuffle.partitions\", \"5\")","user":"anonymous","dateUpdated":"2022-03-14T05:25:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647234475567_-1408084193","id":"20220314-050755_784085710","dateCreated":"2022-03-14T05:07:55+0000","dateStarted":"2022-03-14T05:25:09+0000","dateFinished":"2022-03-14T05:25:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67"},{"text":"%md\n#### Case 2: 스트리밍 DataFrame 처리\n- 가장 큰 차이점: read 메서드 대신 <strong>readStream</strong> 메서드를 사용","user":"anonymous","dateUpdated":"2022-03-14T05:25:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Case 2: 스트리밍 DataFrame 처리</h4>\n<ul>\n  <li>가장 큰 차이점: read 메서드 대신 <strong>readStream</strong> 메서드를 사용</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233700755_-2142574820","id":"20220314-045500_1951702771","dateCreated":"2022-03-14T04:55:00+0000","dateStarted":"2022-03-14T05:25:09+0000","dateFinished":"2022-03-14T05:25:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:68"},{"text":"// 스칼라\nval streamingDataFrame = (spark.readStream\n    .schema(staticSchema)\n    .option(\"maxFilesPerTrigger\", 1) // maxFilesPerTrigger: 한 번에 읽을 파일수 설정\n    .format(\"csv\")\n    .option(\"header\", \"true\")\n    .load(\"/data/retail-data/by-day/*.csv\"))","user":"anonymous","dateUpdated":"2022-03-14T05:25:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"streamingDataFrame: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=13"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233699445_456184617","id":"20220314-045459_2066183149","dateCreated":"2022-03-14T04:54:59+0000","dateStarted":"2022-03-14T05:25:09+0000","dateFinished":"2022-03-14T05:25:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:69"},{"text":"// 스칼라\nstreamingDataFrame.isStreaming // returns true","user":"anonymous","dateUpdated":"2022-03-14T05:25:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res25: Boolean = true\n"}]},"apps":[],"jobName":"paragraph_1647234617799_-215898988","id":"20220314-051017_1449120862","dateCreated":"2022-03-14T05:10:17+0000","dateStarted":"2022-03-14T05:25:10+0000","dateFinished":"2022-03-14T05:25:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:70"},{"text":"%spark.pyspark\n# maxFilesPerTrigger: 한 번에 읽을 파일수 설정\nstreamingDataFrame = spark.readStream\\\n    .schema(staticSchema)\\\n    .option(\"maxFilesPerTrigger\", 1)\\\n    .format(\"csv\")\\\n    .option(\"header\", \"true\")\\\n    .load(\"/data/retail-data/by-day/*.csv\")","user":"anonymous","dateUpdated":"2022-03-14T05:25:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=14"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233862978_-205003984","id":"20220314-045742_1634518324","dateCreated":"2022-03-14T04:57:42+0000","dateStarted":"2022-03-14T05:25:10+0000","dateFinished":"2022-03-14T05:25:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:71"},{"text":"%spark.pyspark\nstreamingDataFrame.isStreaming # returns true","user":"anonymous","dateUpdated":"2022-03-14T05:25:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"True\n"}]},"apps":[],"jobName":"paragraph_1647234632659_1362402574","id":"20220314-051032_569162782","dateCreated":"2022-03-14T05:10:32+0000","dateStarted":"2022-03-14T05:25:11+0000","dateFinished":"2022-03-14T05:25:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:72"},{"text":"// 스칼라\nval purchaseByCustomerPerHour = (streamingDataFrame\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\n  .groupBy(\n    $\"CustomerId\", window($\"InvoiceDate\", \"1 day\"))\n  .sum(\"total_cost\"))\n","user":"anonymous","dateUpdated":"2022-03-14T05:25:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"purchaseByCustomerPerHour: org.apache.spark.sql.DataFrame = [CustomerId: double, window: struct<start: timestamp, end: timestamp> ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1647234765375_1230888374","id":"20220314-051245_435497639","dateCreated":"2022-03-14T05:12:45+0000","dateStarted":"2022-03-14T05:25:11+0000","dateFinished":"2022-03-14T05:25:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:73"},{"text":"%spark.pyspark\npurchaseByCustomerPerHour = streamingDataFrame\\\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\\\n  .groupBy(\n    col(\"CustomerId\"), window(col(\"InvoiceDate\"), \"1 day\"))\\\n  .sum(\"total_cost\")","user":"anonymous","dateUpdated":"2022-03-14T05:25:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647234793392_1754203593","id":"20220314-051313_1297367260","dateCreated":"2022-03-14T05:13:13+0000","dateStarted":"2022-03-14T05:25:11+0000","dateFinished":"2022-03-14T05:25:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:74"},{"text":"%md\n##### 스트리밍 액션\n- 위의 작업은 지연 연산(lazy operation)이므로 데이터 플로를 실행하기 위해 스트리밍 액션을 호출해야함\n- 스트리밍 액션은 <strong>어딘가에 데이터를 채워 넣어야</strong> 하므로 count, show 메서드 등 일반적인 정적 액션을 먹히지 않음\n- 본 예제에서 사용할 스트리밍 액션은 <strong>트리거가 실행된 다음 데이터를 갱신하게 될 인메모리 테이블에 데이터를 저장함</strong>\n  - 스파크는 <strong>이전 집계값보다 더 큰 값이 발생</strong>한 경우에만 인메모리 테이블을 <strong>갱신</strong>함\n- 스트림이 시작되면 <strong>쿼리 실행 결과가 어떠한 형태로 인메모리 테이블에 기록되는지 확인 가능</strong>","user":"anonymous","dateUpdated":"2022-03-14T05:25:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h5>스트리밍 액션</h5>\n<ul>\n  <li>위의 작업은 지연 연산(lazy operation)이므로 데이터 플로를 실행하기 위해 스트리밍 액션을 호출해야함</li>\n  <li>스트리밍 액션은 <strong>어딘가에 데이터를 채워 넣어야</strong> 하므로 count, show 메서드 등 일반적인 정적 액션을 먹히지 않음</li>\n  <li>본 예제에서 사용할 스트리밍 액션은 <strong>트리거가 실행된 다음 데이터를 갱신하게 될 인메모리 테이블에 데이터를 저장함</strong></li>\n  <li>스파크는 <strong>이전 집계값보다 더 큰 값이 발생</strong>한 경우에만 인메모리 테이블을 <strong>갱신</strong>함</li>\n  <li>스트림이 시작되면 <strong>쿼리 실행 결과가 어떠한 형태로 인메모리 테이블에 기록되는지 확인 가능</strong></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233862075_366508820","id":"20220314-045742_234011013","dateCreated":"2022-03-14T04:57:42+0000","dateStarted":"2022-03-14T05:25:11+0000","dateFinished":"2022-03-14T05:25:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:75"},{"text":"// 스칼라\n(purchaseByCustomerPerHour.writeStream\n    .format(\"memory\") // memory = 인메모리 테이블에 저장\n    .queryName(\"customer_purchases\") // 인메모리에 저장될 테이블명\n    .outputMode(\"complete\") // complete = 모든 카운트 수행 결과를 테이블에 저장\n    .start())\n\nThread.sleep(5000)","user":"anonymous","dateUpdated":"2022-03-14T05:25:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res30: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@48b3b5fc\n"}]},"apps":[],"jobName":"paragraph_1647233861260_-408711634","id":"20220314-045741_1425758896","dateCreated":"2022-03-14T04:57:41+0000","dateStarted":"2022-03-14T05:25:11+0000","dateFinished":"2022-03-14T05:25:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:76"},{"text":"%spark.pyspark\npurchaseByCustomerPerHour.writeStream\\\n    .format(\"memory\")\\\n    .queryName(\"customer_purchases_python\")\\\n    .outputMode(\"complete\")\\\n    .start()","user":"anonymous","dateUpdated":"2022-03-14T05:25:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.streaming.StreamingQuery object at 0x7fc8d4fc3d90>\n"}]},"apps":[],"jobName":"paragraph_1647234954564_1053027931","id":"20220314-051554_1654573654","dateCreated":"2022-03-14T05:15:54+0000","dateStarted":"2022-03-14T05:25:17+0000","dateFinished":"2022-03-14T05:25:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:77"},{"text":"%md\n- 인메모리 테이블에 어떻게 기록되는지 찍어보기","user":"anonymous","dateUpdated":"2022-03-14T05:25:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>인메모리 테이블에 어떻게 기록되는지 찍어보기</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647235236437_-1795251120","id":"20220314-052036_711591286","dateCreated":"2022-03-14T05:20:36+0000","dateStarted":"2022-03-14T05:25:17+0000","dateFinished":"2022-03-14T05:25:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:78"},{"text":"// in Scala\n(spark.sql(\"\"\"\n  SELECT *\n  FROM customer_purchases\n  ORDER BY `sum(total_cost)` DESC\n  \"\"\")\n  .show(5))","user":"anonymous","dateUpdated":"2022-03-14T05:25:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+--------------------+------------------+\n|CustomerId|              window|   sum(total_cost)|\n+----------+--------------------+------------------+\n|      null|[2010-12-03 00:00...| 23021.99999999999|\n|      null|[2010-12-14 00:00...|15929.879999999974|\n|      null|[2011-02-04 00:00...| 7001.680000000016|\n|   17857.0|[2011-04-05 00:00...|            5424.0|\n|   16333.0|[2011-04-01 00:00...|           4187.76|\n+----------+--------------------+------------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=32"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647234954243_994755600","id":"20220314-051554_643520903","dateCreated":"2022-03-14T05:15:54+0000","dateStarted":"2022-03-14T05:25:17+0000","dateFinished":"2022-03-14T05:25:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:79"},{"text":"%spark.pyspark\nspark.sql(\"\"\"\n  SELECT *\n  FROM customer_purchases_python\n  ORDER BY `sum(total_cost)` DESC\n  \"\"\")\\\n  .show(5)","user":"anonymous","dateUpdated":"2022-03-14T05:25:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+--------------------+------------------+\n|CustomerId|              window|   sum(total_cost)|\n+----------+--------------------+------------------+\n|      null|[2010-12-14 00:00...|15929.879999999974|\n|   14298.0|[2010-12-14 00:00...|2973.0599999999995|\n|   16553.0|[2010-12-14 00:00...|1609.4400000000003|\n|   12370.0|[2010-12-14 00:00...|           1590.82|\n|   14961.0|[2010-12-14 00:00...|            1182.7|\n+----------+--------------------+------------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=35"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647234953771_1696182121","id":"20220314-051553_977861185","dateCreated":"2022-03-14T05:15:53+0000","dateStarted":"2022-03-14T05:25:19+0000","dateFinished":"2022-03-14T05:25:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:80"},{"text":"%md\n- 콘솔에 처리 결과를 출력할 수 있음","user":"anonymous","dateUpdated":"2022-03-14T05:25:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>콘솔에 처리 결과를 출력할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647235275056_-1639920286","id":"20220314-052115_236818500","dateCreated":"2022-03-14T05:21:15+0000","dateStarted":"2022-03-14T05:25:19+0000","dateFinished":"2022-03-14T05:25:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:81"},{"text":"// 스칼라\n(purchaseByCustomerPerHour.writeStream\n    .format(\"console\") // console = 콘솔에 결과 출력\n    .queryName(\"customer_purchases_2\") // 인메모리에 저장될 테이블명\n    .outputMode(\"complete\") // complete = 모든 카운트 수행 결과를 테이블에 저장\n    .start())\n    \nThread.sleep(5000)","user":"anonymous","dateUpdated":"2022-03-14T05:25:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res37: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@12825041\n-------------------------------------------\nBatch: 0\n-------------------------------------------\n+----------+--------------------+-------------------+\n|CustomerId|              window|    sum(total_cost)|\n+----------+--------------------+-------------------+\n|   14298.0|[2010-12-14 00:00...| 2973.0599999999995|\n|   14415.0|[2010-12-14 00:00...|             862.28|\n|   14907.0|[2010-12-14 00:00...|             341.37|\n|   15181.0|[2010-12-14 00:00...|              -4.25|\n|   15983.0|[2010-12-14 00:00...| 324.71999999999997|\n|   13050.0|[2010-12-14 00:00...|             292.42|\n|   15039.0|[2010-12-14 00:00...|  706.2500000000002|\n|   13329.0|[2010-12-14 00:00...|-13.200000000000001|\n|   17894.0|[2010-12-14 00:00...|             167.86|\n|   12434.0|[2010-12-14 00:00...|-27.749999999999996|\n|   17526.0|[2010-12-14 00:00...|-3.1999999999999993|\n|   14871.0|[2010-12-14 00:00...|              140.4|\n|   16722.0|[2010-12-14 00:00...|              -1.45|\n|   17158.0|[2010-12-14 00:00...|  413.7899999999999|\n|   14057.0|[2010-12-14 00:00...|  925.9200000000001|\n|   16499.0|[2010-12-14 00:00...| 118.89999999999999|\n|   17757.0|[2010-12-14 00:00...|             115.35|\n|   14680.0|[2010-12-14 00:00...| 1154.3200000000002|\n|   17722.0|[2010-12-14 00:00...|              -30.0|\n|   17685.0|[2010-12-14 00:00...|               10.5|\n+----------+--------------------+-------------------+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 1\n-------------------------------------------\n+----------+--------------------+-------------------+\n|CustomerId|              window|    sum(total_cost)|\n+----------+--------------------+-------------------+\n|   14298.0|[2010-12-14 00:00...| 2973.0599999999995|\n|   14415.0|[2010-12-14 00:00...|             862.28|\n|   14907.0|[2010-12-14 00:00...|             341.37|\n|   15181.0|[2010-12-14 00:00...|              -4.25|\n|   15983.0|[2010-12-14 00:00...| 324.71999999999997|\n|   15039.0|[2010-12-14 00:00...|  706.2500000000002|\n|   13799.0|[2011-08-15 00:00...| 347.15999999999997|\n|   17894.0|[2010-12-14 00:00...|             167.86|\n|   14321.0|[2011-08-15 00:00...|             273.72|\n|   13078.0|[2011-08-15 00:00...|             434.74|\n|   18143.0|[2011-08-15 00:00...|             519.98|\n|   15624.0|[2011-08-15 00:00...|  68.10000000000001|\n|      null|[2011-08-15 00:00...|                0.0|\n|   13050.0|[2010-12-14 00:00...|             292.42|\n|   16961.0|[2011-08-15 00:00...|             234.17|\n|   13329.0|[2010-12-14 00:00...|-13.200000000000001|\n|   12434.0|[2010-12-14 00:00...|-27.749999999999996|\n|   17526.0|[2010-12-14 00:00...|-3.1999999999999993|\n|   14871.0|[2010-12-14 00:00...|              140.4|\n|   16722.0|[2010-12-14 00:00...|              -1.45|\n+----------+--------------------+-------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1647234952767_-1589721945","id":"20220314-051552_1078737048","dateCreated":"2022-03-14T05:15:52+0000","dateStarted":"2022-03-14T05:25:19+0000","dateFinished":"2022-03-14T05:25:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:82"},{"user":"anonymous","dateUpdated":"2022-03-14T05:25:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647233698609_-1860006289","id":"20220314-045458_46375137","dateCreated":"2022-03-14T04:54:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:83"}],"name":"Chapter3","id":"2GWUVHHAG","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}