{"paragraphs":[{"text":"%md\n## SparkSession\n- 스파크 애플리케이션은 <strong>SparkSession이라 불리는 드라이버 프로세스로 제어</strong>한다.\n- SparkSession 인스턴스는 사용자가 정의한 처리 명령을 클러스터에서 실행한다.\n- 하나의 SparkSession은 하나의 스파크 애플리케이션에 대응한다.","user":"anonymous","dateUpdated":"2022-03-14T08:39:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>SparkSession</h2>\n<ul>\n  <li>스파크 애플리케이션은 <strong>SparkSession이라 불리는 드라이버 프로세스로 제어</strong>한다.</li>\n  <li>SparkSession 인스턴스는 사용자가 정의한 처리 명령을 클러스터에서 실행한다.</li>\n  <li>하나의 SparkSession은 하나의 스파크 애플리케이션에 대응한다.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647187574950_582721177","id":"20220313-160614_1831531471","dateCreated":"2022-03-13T16:06:14+0000","dateStarted":"2022-03-14T08:39:22+0000","dateFinished":"2022-03-14T08:39:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:169"},{"text":"%sh\n# For prevent crash with other note's execution,\n# I recommend to restart spark interpreter.\ncurl -X PUT http://localhost:8080/api/interpreter/setting/restart/spark","user":"anonymous","dateUpdated":"2022-03-14T08:39:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0\r100  3988  100  3988    0     0   1521      0  0:00:02  0:00:02 --:--:--  1520\r100  3988  100  3988    0     0   1521      0  0:00:02  0:00:02 --:--:--  1520\n{\"status\":\"OK\",\"message\":\"\",\"body\":{\"id\":\"spark\",\"name\":\"spark\",\"group\":\"spark\",\"properties\":{\"zeppelin.spark.concurrentSQL\":{\"name\":\"zeppelin.spark.concurrentSQL\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.R.knitr\":{\"name\":\"zeppelin.R.knitr\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.R.cmd\":{\"name\":\"zeppelin.R.cmd\",\"value\":\"R\",\"type\":\"string\"},\"zeppelin.R.image.width\":{\"name\":\"zeppelin.R.image.width\",\"value\":\"100%\",\"type\":\"number\"},\"zeppelin.spark.importImplicit\":{\"name\":\"zeppelin.spark.importImplicit\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.dep.additionalRemoteRepository\":{\"name\":\"zeppelin.dep.additionalRemoteRepository\",\"value\":\"spark-packages,http://dl.bintray.com/spark-packages/maven,false;\",\"type\":\"textarea\"},\"zeppelin.dep.localrepo\":{\"name\":\"zeppelin.dep.localrepo\",\"value\":\"local-repo\",\"type\":\"string\"},\"zeppelin.spark.sql.stacktrace\":{\"name\":\"zeppelin.spark.sql.stacktrace\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.spark.useHiveContext\":{\"name\":\"zeppelin.spark.useHiveContext\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.printREPLOutput\":{\"name\":\"zeppelin.spark.printREPLOutput\",\"value\":true,\"type\":\"checkbox\"},\"spark.cores.max\":{\"name\":\"spark.cores.max\",\"value\":\"3\",\"type\":\"number\"},\"spark.executor.memory\":{\"name\":\"spark.executor.memory\",\"value\":\"2g\",\"type\":\"string\"},\"zeppelin.spark.sql.interpolation\":{\"name\":\"zeppelin.spark.sql.interpolation\",\"value\":false,\"type\":\"checkbox\"},\"spark.driver.memory\":{\"name\":\"spark.driver.memory\",\"value\":\"2g\",\"type\":\"textarea\"},\"spark.app.name\":{\"name\":\"spark.app.name\",\"value\":\"Zeppelin\",\"type\":\"string\"},\"zeppelin.spark.maxResult\":{\"name\":\"zeppelin.spark.maxResult\",\"value\":\"1000\",\"type\":\"number\"},\"master\":{\"name\":\"master\",\"value\":\"local[*]\",\"type\":\"string\"},\"zeppelin.pyspark.python\":{\"name\":\"zeppelin.pyspark.python\",\"value\":\"python\",\"type\":\"string\"},\"args\":{\"name\":\"args\",\"value\":\"\",\"type\":\"textarea\"},\"zeppelin.spark.enableSupportedVersionCheck\":{\"name\":\"zeppelin.spark.enableSupportedVersionCheck\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.useNew\":{\"name\":\"zeppelin.spark.useNew\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.pyspark.useIPython\":{\"name\":\"zeppelin.pyspark.useIPython\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.uiWebUrl\":{\"name\":\"zeppelin.spark.uiWebUrl\",\"value\":\"\",\"type\":\"string\"},\"zeppelin.R.render.options\":{\"name\":\"zeppelin.R.render.options\",\"value\":\"out.format \\u003d \\u0027html\\u0027, comment \\u003d NA, echo \\u003d FALSE, results \\u003d \\u0027asis\\u0027, message \\u003d F, warning \\u003d F, fig.retina \\u003d 2\",\"type\":\"textarea\"},\"spark.jars\":{\"name\":\"spark.jars\",\"value\":\"/zeppelin/lib/sqlite-jdbc-3.23.1.jar\",\"type\":\"textarea\"}},\"status\":\"READY\",\"interpreterGroup\":[{\"name\":\"spark\",\"class\":\"org.apache.zeppelin.spark.SparkInterpreter\",\"defaultInterpreter\":true,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"sql\",\"class\":\"org.apache.zeppelin.spark.SparkSqlInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"sql\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"dep\",\"class\":\"org.apache.zeppelin.spark.DepInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"pyspark\",\"class\":\"org.apache.zeppelin.spark.PySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"ipyspark\",\"class\":\"org.apache.zeppelin.spark.IPySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionSupport\":true}},{\"name\":\"r\",\"class\":\"org.apache.zeppelin.spark.SparkRInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"r\",\"editOnDblClick\":false,\"completionSupport\":false}}],\"dependencies\":[],\"option\":{\"remote\":true,\"port\":-1,\"perNote\":\"shared\",\"perUser\":\"shared\",\"isExistingProcess\":false,\"setPermission\":false,\"owners\":[],\"isUserImpersonate\":false}}}"}]},"apps":[],"jobName":"paragraph_1647186527349_-1618577558","id":"20220313-154847_577007318","dateCreated":"2022-03-13T15:48:47+0000","dateStarted":"2022-03-14T08:39:22+0000","dateFinished":"2022-03-14T08:39:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170"},{"text":"// 스칼라\nspark","user":"anonymous","dateUpdated":"2022-03-14T08:39:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res5: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@3cc4a514\n"}]},"apps":[],"jobName":"paragraph_1647187731688_-1695220711","id":"20220313-160851_2003727054","dateCreated":"2022-03-13T16:08:51+0000","dateStarted":"2022-03-14T08:39:25+0000","dateFinished":"2022-03-14T08:39:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:171"},{"text":"// 스칼라\nspark","user":"anonymous","dateUpdated":"2022-03-14T08:39:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647245167119_-1621347513","id":"20220314-080607_1409686895","dateCreated":"2022-03-14T08:06:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:172","dateFinished":"2022-03-14T08:39:35+0000","dateStarted":"2022-03-14T08:39:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res8: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@3cc4a514\n"}]}},{"text":"%spark.pyspark\nspark","user":"anonymous","dateUpdated":"2022-03-14T08:39:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.session.SparkSession object at 0x7fa23dd538d0>\n"}]},"apps":[],"jobName":"paragraph_1647187599684_1216975977","id":"20220313-160639_2143190636","dateCreated":"2022-03-13T16:06:39+0000","dateStarted":"2022-03-14T08:39:35+0000","dateFinished":"2022-03-14T08:39:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"text":"// 스칼라\nval myRange = spark.range(1000).toDF(\"number\")","user":"anonymous","dateUpdated":"2022-03-14T08:39:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myRange: org.apache.spark.sql.DataFrame = [number: bigint]\n"}]},"apps":[],"jobName":"paragraph_1647187672210_995097484","id":"20220313-160752_841555757","dateCreated":"2022-03-13T16:07:52+0000","dateStarted":"2022-03-14T08:39:36+0000","dateFinished":"2022-03-14T08:39:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"text":"// 스칼라\nmyRange","user":"anonymous","dateUpdated":"2022-03-14T08:39:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res13: org.apache.spark.sql.DataFrame = [number: bigint]\n"}]},"apps":[],"jobName":"paragraph_1647187961763_-1076186968","id":"20220313-161241_550965482","dateCreated":"2022-03-13T16:12:41+0000","dateStarted":"2022-03-14T08:39:37+0000","dateFinished":"2022-03-14T08:39:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"text":"%spark.pyspark\nmyRange = spark.range(1000).toDF(\"number\")","user":"anonymous","dateUpdated":"2022-03-14T08:39:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647182203369_11448900","id":"20220313-143643_212082157","dateCreated":"2022-03-13T14:36:43+0000","dateStarted":"2022-03-14T08:39:38+0000","dateFinished":"2022-03-14T08:39:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"%spark.pyspark\nmyRange","user":"anonymous","dateUpdated":"2022-03-14T08:39:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[number: bigint]\n"}]},"apps":[],"jobName":"paragraph_1647187966296_-1094767220","id":"20220313-161246_1966570910","dateCreated":"2022-03-13T16:12:46+0000","dateStarted":"2022-03-14T08:39:38+0000","dateFinished":"2022-03-14T08:39:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"text":"%md\n- 위에서 생성한 DataFrame은 한 개의 column과 1000개의 row로 구성\n  - 할당된 숫자들(0~999)은 <strong>분산 컬렉션(RDD)</strong>을 나타냄\n  - 숫자 범위의 각 부분이 <strong>서로 다른 익스큐터에 할당됨</strong>","user":"anonymous","dateUpdated":"2022-03-14T08:39:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>위에서 생성한 DataFrame은 한 개의 column과 1000개의 row로 구성</li>\n  <li>할당된 숫자들(0~999)은 <strong>분산 컬렉션(RDD)</strong>을 나타냄</li>\n  <li>숫자 범위의 각 부분이 <strong>서로 다른 익스큐터에 할당됨</strong></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647187804661_-1456243573","id":"20220313-161004_1974343066","dateCreated":"2022-03-13T16:10:04+0000","dateStarted":"2022-03-14T08:39:38+0000","dateFinished":"2022-03-14T08:39:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178"},{"text":"%md\n## DataFrame\n\n- 가장 대표적인 구조적 API\n- 테이블의 데이터를 <strong>row와 column</strong>으로 단순하게 표현\n- <strong>스키마</strong>: column과 column의 타입을 정의한 목록\n- <strong>수천 대의 컴퓨터에 분산되어 있음</strong>\n    - 단일 컴퓨터에 저장하기엔 데이터가 너무 크거나 계산이 너무 오래 걸릴 수 있기에\n  \n  \n*스파크는 Dataset, DataFrame, SQL 테이블, RDD라는 몇 가지 핵심 추상화 개념을 갖고 잇음-> 모두 분산 데이터 모음을 표현함\n\n### 파티션\n- 스파크는 <strong>모든 익스큐터가 병렬로 작업을 수행</strong>할 수 있도록 파티션이라 불리는 청크 단위로 <strong>데이터를 분할</strong>함\n- <strong>파티션: 클러스터의 물리적 머신에 존재하는 로우의 집합</strong>\n  - 만약 파티션이 하나라면 스파크에 수천 개의 익스큐터가 있더라도 병렬성은 1\n  - 그리고 수백 개의 파티션이 있더라도 익스큐터가 하나라면 병렬성은 1\n- DataFrame의 파티션은 실행 중에 데이터가 컴퓨터 클러스터에서 물리적으로 분산되는 방식\n- DataFrame을 사용하면 파티션을 수동 혹은 개별적으로 처리할 필요가 없다.\n  - 물리적 파티션에 데이터 변환용 함수를 지정하면 스파크가 실제 처리 방법을 결정한다.","user":"anonymous","dateUpdated":"2022-03-14T08:39:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>DataFrame</h2>\n<ul>\n  <li>가장 대표적인 구조적 API</li>\n  <li>테이블의 데이터를 <strong>row와 column</strong>으로 단순하게 표현</li>\n  <li><strong>스키마</strong>: column과 column의 타입을 정의한 목록</li>\n  <li>\n    <strong>수천 대의 컴퓨터에 분산되어 있음</strong>\n    <ul>\n      <li>단일 컴퓨터에 저장하기엔 데이터가 너무 크거나 계산이 너무 오래 걸릴 수 있기에</li>\n    </ul>\n  </li>\n</ul>\n<p>*스파크는 Dataset, DataFrame, SQL 테이블, RDD라는 몇 가지 핵심 추상화 개념을 갖고 잇음-&gt; 모두 분산 데이터 모음을 표현함</p>\n<h3>파티션</h3>\n<ul>\n  <li>스파크는 <strong>모든 익스큐터가 병렬로 작업을 수행</strong>할 수 있도록 파티션이라 불리는 청크 단위로 <strong>데이터를 분할</strong>함</li>\n  <li>\n  <strong>파티션: 클러스터의 물리적 머신에 존재하는 로우의 집합</strong></li>\n  <li>만약 파티션이 하나라면 스파크에 수천 개의 익스큐터가 있더라도 병렬성은 1</li>\n  <li>그리고 수백 개의 파티션이 있더라도 익스큐터가 하나라면 병렬성은 1</li>\n  <li>DataFrame의 파티션은 실행 중에 데이터가 컴퓨터 클러스터에서 물리적으로 분산되는 방식</li>\n  <li>DataFrame을 사용하면 파티션을 수동 혹은 개별적으로 처리할 필요가 없다.</li>\n  <li>물리적 파티션에 데이터 변환용 함수를 지정하면 스파크가 실제 처리 방법을 결정한다.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647187803690_820636633","id":"20220313-161003_1773649052","dateCreated":"2022-03-13T16:10:03+0000","dateStarted":"2022-03-14T08:39:38+0000","dateFinished":"2022-03-14T08:39:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179"},{"text":"%md\n##  트렌스포메이션\n### 좁은 의존성\n### 넓은 의존성\n### 지연 연산","user":"anonymous","dateUpdated":"2022-03-14T08:39:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>트렌스포메이션</h2>\n<h3>좁은 의존성</h3>\n<h3>넓은 의존성</h3>\n<h3>지연 연산</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1647188168307_-1161618926","id":"20220313-161608_1173750138","dateCreated":"2022-03-13T16:16:08+0000","dateStarted":"2022-03-14T08:39:38+0000","dateFinished":"2022-03-14T08:39:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180"},{"text":"%md\n## 액션\n- <strong>실제 연산을 수행</strong>하기위해 액션 명령을 내림\n- 액션은 일련의 트랜스포메이션으로부터 결과를 계산하도록 지시하는 것\n- 액션의 세 가지 유형\n    - 콘솔에서 데이터를 <strong>보는</strong> 액션\n    - 각 언어로 된 네이티브 객체에 데이터를 <strong>모으는</strong> 액션\n    - 출력 데이터소스에 <strong>저장</strong>하는 액션","user":"anonymous","dateUpdated":"2022-03-14T08:39:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>액션</h2>\n<ul>\n  <li><strong>실제 연산을 수행</strong>하기위해 액션 명령을 내림</li>\n  <li>액션은 일련의 트랜스포메이션으로부터 결과를 계산하도록 지시하는 것</li>\n  <li>액션의 세 가지 유형\n    <ul>\n      <li>콘솔에서 데이터를 <strong>보는</strong> 액션</li>\n      <li>각 언어로 된 네이티브 객체에 데이터를 <strong>모으는</strong> 액션</li>\n      <li>출력 데이터소스에 <strong>저장</strong>하는 액션</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647188815625_-1163271960","id":"20220313-162655_769165479","dateCreated":"2022-03-13T16:26:55+0000","dateStarted":"2022-03-14T08:39:39+0000","dateFinished":"2022-03-14T08:39:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"// 스칼라\nval divisBy2 = myRange.where(\"number % 2 = 0\")","user":"anonymous","dateUpdated":"2022-03-14T08:39:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647247097540_1014130209","id":"20220314-083817_650001688","dateCreated":"2022-03-14T08:38:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4888","dateFinished":"2022-03-14T08:39:39+0000","dateStarted":"2022-03-14T08:39:39+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"divisBy2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [number: bigint]\n"}]}},{"text":"// 스칼라\n// 스파크 UI에서 보면 Description: count at <console>:30\ndivisBy2.count()","user":"anonymous","dateUpdated":"2022-03-14T08:39:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res19: Long = 500\n"}]},"apps":[],"jobName":"paragraph_1647188881833_1130011885","id":"20220313-162801_926116732","dateCreated":"2022-03-13T16:28:01+0000","dateStarted":"2022-03-14T08:39:39+0000","dateFinished":"2022-03-14T08:39:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647247086415_-418189877","id":"20220314-083806_302040754","dateCreated":"2022-03-14T08:38:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4800","text":"%spark.pyspark\ndivisBy2 = myRange.where(\"number % 2 = 0\")","dateUpdated":"2022-03-14T08:39:41+0000","dateFinished":"2022-03-14T08:39:41+0000","dateStarted":"2022-03-14T08:39:41+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%spark.pyspark\n# 스파크 UI에서 보면 Description: count at NativeMethodAccessorImpl.java:0\ndivisBy2.count()","user":"anonymous","dateUpdated":"2022-03-14T08:39:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"500\n"}]},"apps":[],"jobName":"paragraph_1647188892458_611578695","id":"20220313-162812_579698926","dateCreated":"2022-03-13T16:28:12+0000","dateStarted":"2022-03-14T08:39:41+0000","dateFinished":"2022-03-14T08:39:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}}},{"text":"%md\n- 액션을 트리거하면 스파크 job이 시작됨(= 다수의 트랜스포메이션을 시행)\n    1. 좁은 트랜스포메이션인 필터 수행\n    2. 넓은 트랜스포메이션인 파티션 별로 레코드 수를 카운트하는 것을 수행\n- 스파크가 제공하는 스파크 UI로 클러스터에서 실행 중인 스파크 job 모니터링이 가능함\n    - 스파크 UI는 드라이버 노드의 4040 포트로 접속\n        - http://localhost:4040/jobs/\n    - 확인 정보\n        - 스파크 job 상태\n        - 환경 설정\n        - 클러스터 상태\n        - etc.","user":"anonymous","dateUpdated":"2022-03-14T08:39:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>액션을 트리거하면 스파크 job이 시작됨(= 다수의 트랜스포메이션을 시행)\n    <ol>\n      <li>좁은 트랜스포메이션인 필터 수행</li>\n      <li>넓은 트랜스포메이션인 파티션 별로 레코드 수를 카운트하는 것을 수행</li>\n    </ol>\n  </li>\n  <li>스파크가 제공하는 스파크 UI로 클러스터에서 실행 중인 스파크 job 모니터링이 가능함\n    <ul>\n      <li>스파크 UI는 드라이버 노드의 4040 포트로 접속\n        <ul>\n          <li><a href=\"http://localhost:4040/jobs/\">http://localhost:4040/jobs/</a></li>\n        </ul>\n      </li>\n      <li>확인 정보\n        <ul>\n          <li>스파크 job 상태</li>\n          <li>환경 설정</li>\n          <li>클러스터 상태</li>\n          <li>etc.</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647188932687_-1190894802","id":"20220313-162852_694583694","dateCreated":"2022-03-13T16:28:52+0000","dateStarted":"2022-03-14T08:39:41+0000","dateFinished":"2022-03-14T08:39:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"text":"%md\n# 종합 예제","user":"anonymous","dateUpdated":"2022-03-14T08:39:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>종합 예제</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1647189545093_901470821","id":"20220313-163905_1372437063","dateCreated":"2022-03-13T16:39:05+0000","dateStarted":"2022-03-14T08:39:42+0000","dateFinished":"2022-03-14T08:39:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"text":"// 스칼라\nval flightData2015 = (spark\n  .read\n  .option(\"inferSchema\", \"true\") // 스키마 추론 기능 사용, DataFrame의 스키마 정보를 알아내는 기능\n  .option(\"header\", \"true\") // 첫 로우를 헤더로 지정하는 옵션\n  .csv(\"/data/flight-data/csv/2015-summary.csv\"))","user":"anonymous","dateUpdated":"2022-03-14T08:39:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"flightData2015: org.apache.spark.sql.DataFrame = [DEST_COUNTRY_NAME: string, ORIGIN_COUNTRY_NAME: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1647189559681_783139090","id":"20220313-163919_1608372105","dateCreated":"2022-03-13T16:39:19+0000","dateStarted":"2022-03-14T08:39:42+0000","dateFinished":"2022-03-14T08:39:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=2","http://0927a691e26f:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}}},{"text":"// 스칼라\nflightData2015.printSchema()","user":"anonymous","dateUpdated":"2022-03-14T08:39:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- DEST_COUNTRY_NAME: string (nullable = true)\n |-- ORIGIN_COUNTRY_NAME: string (nullable = true)\n |-- count: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1647189910461_-657671177","id":"20220313-164510_1776941390","dateCreated":"2022-03-13T16:45:10+0000","dateStarted":"2022-03-14T08:39:42+0000","dateFinished":"2022-03-14T08:39:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"%spark.pyspark\nflightData2015 = (spark\n  .read\n  .option(\"inferSchema\", \"true\") # 스키마 추론 기능 사용, DataFrame의 스키마 정보를 알아내는 기능\n  .option(\"header\", \"true\") # 첫 로우를 헤더로 지정하는 옵션\n  .csv(\"/data/flight-data/csv/2015-summary.csv\"))","user":"anonymous","dateUpdated":"2022-03-14T08:39:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647186571346_-1366879136","id":"20220313-154931_1277470982","dateCreated":"2022-03-13T15:49:31+0000","dateStarted":"2022-03-14T08:39:43+0000","dateFinished":"2022-03-14T08:39:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:188","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=4","http://0927a691e26f:4040/jobs/job?id=5"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nflightData2015.printSchema()","user":"anonymous","dateUpdated":"2022-03-14T08:39:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- DEST_COUNTRY_NAME: string (nullable = true)\n |-- ORIGIN_COUNTRY_NAME: string (nullable = true)\n |-- count: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1647189901738_-1698687698","id":"20220313-164501_2046265704","dateCreated":"2022-03-13T16:45:01+0000","dateStarted":"2022-03-14T08:39:43+0000","dateFinished":"2022-03-14T08:39:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"%md\n- read 메서드 = 좁은 트랜스포메이션\n- 스칼라와 파이썬에서 사용하는 DataFrame은 불특정 다수의 row와 column을 가짐\n- row의 수를 알 수 없는 이유는, <strong>데이터를 읽는 과정이 지연 연산 형태의 트랜스포메이션</strong>이기 때문\n- 스파크는 각 column의 데이터 타입을 추론하기 위해 적은 양의 데이터를 읽음","user":"anonymous","dateUpdated":"2022-03-14T08:39:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>read 메서드 = 좁은 트랜스포메이션</li>\n  <li>스칼라와 파이썬에서 사용하는 DataFrame은 불특정 다수의 row와 column을 가짐</li>\n  <li>row의 수를 알 수 없는 이유는, <strong>데이터를 읽는 과정이 지연 연산 형태의 트랜스포메이션</strong>이기 때문</li>\n  <li>스파크는 각 column의 데이터 타입을 추론하기 위해 적은 양의 데이터를 읽음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647189830609_-925363141","id":"20220313-164350_1835611970","dateCreated":"2022-03-13T16:43:50+0000","dateStarted":"2022-03-14T08:39:43+0000","dateFinished":"2022-03-14T08:39:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"// 스칼라\nflightData2015.take(3) // head(3)와 같은 결과","user":"anonymous","dateUpdated":"2022-03-14T08:39:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res27: Array[org.apache.spark.sql.Row] = Array([United States,Romania,15], [United States,Croatia,1], [United States,Ireland,344])\n"}]},"apps":[],"jobName":"paragraph_1647189958939_-416977822","id":"20220313-164558_1996766752","dateCreated":"2022-03-13T16:45:58+0000","dateStarted":"2022-03-14T08:39:43+0000","dateFinished":"2022-03-14T08:39:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=6"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nflightData2015.take(3) # head(3)와 같은 결과","user":"anonymous","dateUpdated":"2022-03-14T08:39:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(DEST_COUNTRY_NAME=u'United States', ORIGIN_COUNTRY_NAME=u'Romania', count=15), Row(DEST_COUNTRY_NAME=u'United States', ORIGIN_COUNTRY_NAME=u'Croatia', count=1), Row(DEST_COUNTRY_NAME=u'United States', ORIGIN_COUNTRY_NAME=u'Ireland', count=344)]\n"}]},"apps":[],"jobName":"paragraph_1647189954458_62558175","id":"20220313-164554_1363299716","dateCreated":"2022-03-13T16:45:54+0000","dateStarted":"2022-03-14T08:39:44+0000","dateFinished":"2022-03-14T08:39:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=7"],"interpreterSettingId":"spark"}}},{"text":"%md\n* Dataframe에서 csv파일을 읽어 로컬 배열이나 리스트 형태로 변환","user":"anonymous","dateUpdated":"2022-03-14T08:39:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Dataframe에서 csv파일을 읽어 로컬 배열이나 리스트 형태로 변환</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647189931772_481975438","id":"20220313-164531_1452773258","dateCreated":"2022-03-13T16:45:31+0000","dateStarted":"2022-03-14T08:39:44+0000","dateFinished":"2022-03-14T08:39:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"// 스칼라\nflightData2015.explain()","user":"anonymous","dateUpdated":"2022-03-14T08:39:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(1) FileScan csv [DEST_COUNTRY_NAME#32,ORIGIN_COUNTRY_NAME#33,count#34] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string,ORIGIN_COUNTRY_NAME:string,count:int>\n"}]},"apps":[],"jobName":"paragraph_1647190170019_-2060749474","id":"20220313-164930_1544347671","dateCreated":"2022-03-13T16:49:30+0000","dateStarted":"2022-03-14T08:39:44+0000","dateFinished":"2022-03-14T08:39:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"// 스칼라\nflightData2015.sort(\"count\").explain()","user":"anonymous","dateUpdated":"2022-03-14T08:39:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(2) Sort [count#34 ASC NULLS FIRST], true, 0\n+- Exchange rangepartitioning(count#34 ASC NULLS FIRST, 200)\n   +- *(1) FileScan csv [DEST_COUNTRY_NAME#32,ORIGIN_COUNTRY_NAME#33,count#34] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string,ORIGIN_COUNTRY_NAME:string,count:int>\n"}]},"apps":[],"jobName":"paragraph_1647190260194_1257950392","id":"20220313-165100_698588257","dateCreated":"2022-03-13T16:51:00+0000","dateStarted":"2022-03-14T08:39:44+0000","dateFinished":"2022-03-14T08:39:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"%md\n* sort 메서드는 특정 컬럼을 다른 컬럼과 비교하는 <strong>넓은 트랜스포메이션</strong>으로 동작\n* 아직 실행 계획만 컴파일하고 액션은 호출하지 않은 상태","user":"anonymous","dateUpdated":"2022-03-14T08:39:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>sort 메서드는 특정 컬럼을 다른 컬럼과 비교하는 <strong>넓은 트랜스포메이션</strong>으로 동작</li>\n  <li>아직 실행 계획만 컴파일하고 액션은 호출하지 않은 상태</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647190400958_966837029","id":"20220313-165320_890599473","dateCreated":"2022-03-13T16:53:20+0000","dateStarted":"2022-03-14T08:39:45+0000","dateFinished":"2022-03-14T08:39:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"// 스칼라\nspark.conf.set(\"spark.sql.shuffle.partitions\", \"5\")\nflightData2015.sort(\"count\").take(2)","user":"anonymous","dateUpdated":"2022-03-14T08:39:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res37: Array[org.apache.spark.sql.Row] = Array([United States,Singapore,1], [Moldova,United States,1])\n"}]},"apps":[],"jobName":"paragraph_1647190490274_1399904210","id":"20220313-165450_681556042","dateCreated":"2022-03-13T16:54:50+0000","dateStarted":"2022-03-14T08:39:45+0000","dateFinished":"2022-03-14T08:39:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=8"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nspark.conf.set(\"spark.sql.shuffle.partitions\", \"5\")\nflightData2015.sort(\"count\").take(2)","user":"anonymous","dateUpdated":"2022-03-14T08:39:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(DEST_COUNTRY_NAME=u'United States', ORIGIN_COUNTRY_NAME=u'Singapore', count=1), Row(DEST_COUNTRY_NAME=u'Moldova', ORIGIN_COUNTRY_NAME=u'United States', count=1)]\n"}]},"apps":[],"jobName":"paragraph_1647190563840_446116189","id":"20220313-165603_350800629","dateCreated":"2022-03-13T16:56:03+0000","dateStarted":"2022-03-14T08:39:45+0000","dateFinished":"2022-03-14T08:39:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:198","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=9"],"interpreterSettingId":"spark"}}},{"text":"%md\n* 스파크의 기본 셔플 파티션 = 200개\n* 사용자는 물리적 데이터를 직접 다루진 않음\n* 대신, 위처럼 셔플 파티션 파라미터와 같은 속성으로 물리적 실행 특성을 제어할 수 있음","user":"anonymous","dateUpdated":"2022-03-14T08:39:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>스파크의 기본 셔플 파티션 = 200개</li>\n  <li>사용자는 물리적 데이터를 직접 다루진 않음</li>\n  <li>대신, 위처럼 셔플 파티션 파라미터와 같은 속성으로 물리적 실행 특성을 제어할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647190526718_-292581042","id":"20220313-165526_383531241","dateCreated":"2022-03-13T16:55:26+0000","dateStarted":"2022-03-14T08:39:46+0000","dateFinished":"2022-03-14T08:39:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"%md\n## DataFrame과 SQL\n- 스파크는 언어에 상관없이 같은 방식으로 트랜스포메이션을 실행할 수 있다.\n- 사용자가 SQL이나 DataFrame으로 비즈니스 로직을 표현하면, 스파크가 실제 코드를 실행하기 전에 그 로직을 기본 실행 계획으로 컴파일함\n    - SQL 쿼리와 DataFrame 코드는 같은 실행 계획이므로 성능 차이는 없음\n- <strong>스파크 SQL을 사용하면, 모든 DataFrame을 테이블이나 뷰로 등록 후 SQL쿼리 사용</strong>\n    - createOrReplaceTempView 메서드 사용","user":"anonymous","dateUpdated":"2022-03-14T08:39:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>DataFrame과 SQL</h2>\n<ul>\n  <li>스파크는 언어에 상관없이 같은 방식으로 트랜스포메이션을 실행할 수 있다.</li>\n  <li>사용자가 SQL이나 DataFrame으로 비즈니스 로직을 표현하면, 스파크가 실제 코드를 실행하기 전에 그 로직을 기본 실행 계획으로 컴파일함\n    <ul>\n      <li>SQL 쿼리와 DataFrame 코드는 같은 실행 계획이므로 성능 차이는 없음</li>\n    </ul>\n  </li>\n  <li>\n    <strong>스파크 SQL을 사용하면, 모든 DataFrame을 테이블이나 뷰로 등록 후 SQL쿼리 사용</strong>\n    <ul>\n      <li>createOrReplaceTempView 메서드 사용</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647190865415_1593616244","id":"20220313-170105_61016957","dateCreated":"2022-03-13T17:01:05+0000","dateStarted":"2022-03-14T08:39:46+0000","dateFinished":"2022-03-14T08:39:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"text":"%md\n### ex1\n* SQL 쿼리와 DataFrame 코드는 같은 실행 계획","user":"anonymous","dateUpdated":"2022-03-14T08:39:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>ex1</h3>\n<ul>\n  <li>SQL 쿼리와 DataFrame 코드는 같은 실행 계획</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647191238447_131111889","id":"20220313-170718_2124001758","dateCreated":"2022-03-13T17:07:18+0000","dateStarted":"2022-03-14T08:39:46+0000","dateFinished":"2022-03-14T08:39:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201"},{"text":"// 스칼라\nflightData2015.createOrReplaceTempView(\"flight_data_2015\")\n\nval sqlWay = spark.sql(\"\"\"\nSELECT DEST_COUNTRY_NAME\n     , count(1)\nFROM flight_data_2015\nGROUP BY DEST_COUNTRY_NAME\n\"\"\")\n\nval dataFrameWay = (flightData2015\n  .groupBy(\"DEST_COUNTRY_NAME\")\n  .count())\n\nsqlWay.explain()\ndataFrameWay.explain()","user":"anonymous","dateUpdated":"2022-03-14T08:39:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sqlWay: org.apache.spark.sql.DataFrame = [DEST_COUNTRY_NAME: string, count(1): bigint]\ndataFrameWay: org.apache.spark.sql.DataFrame = [DEST_COUNTRY_NAME: string, count: bigint]\n== Physical Plan ==\n*(2) HashAggregate(keys=[DEST_COUNTRY_NAME#32], functions=[count(1)])\n+- Exchange hashpartitioning(DEST_COUNTRY_NAME#32, 5)\n   +- *(1) HashAggregate(keys=[DEST_COUNTRY_NAME#32], functions=[partial_count(1)])\n      +- *(1) FileScan csv [DEST_COUNTRY_NAME#32] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string>\n== Physical Plan ==\n*(2) HashAggregate(keys=[DEST_COUNTRY_NAME#32], functions=[count(1)])\n+- Exchange hashpartitioning(DEST_COUNTRY_NAME#32, 5)\n   +- *(1) HashAggregate(keys=[DEST_COUNTRY_NAME#32], functions=[partial_count(1)])\n      +- *(1) FileScan csv [DEST_COUNTRY_NAME#32] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string>\n"}]},"apps":[],"jobName":"paragraph_1647190988241_1953932439","id":"20220313-170308_416143312","dateCreated":"2022-03-13T17:03:08+0000","dateStarted":"2022-03-14T08:39:46+0000","dateFinished":"2022-03-14T08:39:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:202"},{"text":"%spark.pyspark\nflightData2015.createOrReplaceTempView(\"flight_data_2015\")\n\nsqlWay = spark.sql(\"\"\"\nSELECT DEST_COUNTRY_NAME\n     , count(1)\nFROM flight_data_2015\nGROUP BY DEST_COUNTRY_NAME\n\"\"\")\n\ndataFrameWay = (flightData2015\n  .groupBy(\"DEST_COUNTRY_NAME\")\n  .count())\n\nsqlWay.explain()\ndataFrameWay.explain()","user":"anonymous","dateUpdated":"2022-03-14T08:39:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\n*(2) HashAggregate(keys=[DEST_COUNTRY_NAME#48], functions=[count(1)])\n+- Exchange hashpartitioning(DEST_COUNTRY_NAME#48, 5)\n   +- *(1) HashAggregate(keys=[DEST_COUNTRY_NAME#48], functions=[partial_count(1)])\n      +- *(1) FileScan csv [DEST_COUNTRY_NAME#48] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string>\n== Physical Plan ==\n*(2) HashAggregate(keys=[DEST_COUNTRY_NAME#48], functions=[count(1)])\n+- Exchange hashpartitioning(DEST_COUNTRY_NAME#48, 5)\n   +- *(1) HashAggregate(keys=[DEST_COUNTRY_NAME#48], functions=[partial_count(1)])\n      +- *(1) FileScan csv [DEST_COUNTRY_NAME#48] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string>\n"}]},"apps":[],"jobName":"paragraph_1647186568944_-47995420","id":"20220313-154928_958761698","dateCreated":"2022-03-13T15:49:28+0000","dateStarted":"2022-03-14T08:39:47+0000","dateFinished":"2022-03-14T08:39:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:203"},{"text":"%md\n### ex2\n- max함수는 DataFrame의 특정 컬럼 값을 스캔하면서 이전 최댓값보다 더 큰 값을 찾음\n- max함수는 필터링을 수행해 단일 row를 결과로 반환하는 트랜스포메이션","user":"anonymous","dateUpdated":"2022-03-14T08:39:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>ex2</h3>\n<ul>\n  <li>max함수는 DataFrame의 특정 컬럼 값을 스캔하면서 이전 최댓값보다 더 큰 값을 찾음</li>\n  <li>max함수는 필터링을 수행해 단일 row를 결과로 반환하는 트랜스포메이션</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647191257404_-817219169","id":"20220313-170737_2039039861","dateCreated":"2022-03-13T17:07:37+0000","dateStarted":"2022-03-14T08:39:47+0000","dateFinished":"2022-03-14T08:39:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:204"},{"text":"// 스칼라\nspark.sql(\"\"\"\nSELECT max(count)\nFROM flight_data_2015\n\"\"\").take(1)","user":"anonymous","dateUpdated":"2022-03-14T08:39:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res45: Array[org.apache.spark.sql.Row] = Array([370002])\n"}]},"apps":[],"jobName":"paragraph_1647191760735_-626196774","id":"20220313-171600_1200834337","dateCreated":"2022-03-13T17:16:00+0000","dateStarted":"2022-03-14T08:39:47+0000","dateFinished":"2022-03-14T08:39:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:205","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}}},{"text":"// 스칼라\nimport org.apache.spark.sql.functions.max\nflightData2015.select(max(\"count\")).take(1)","user":"anonymous","dateUpdated":"2022-03-14T08:39:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.max\nres48: Array[org.apache.spark.sql.Row] = Array([370002])\n"}]},"apps":[],"jobName":"paragraph_1647191753545_-705723476","id":"20220313-171553_868407982","dateCreated":"2022-03-13T17:15:53+0000","dateStarted":"2022-03-14T08:39:47+0000","dateFinished":"2022-03-14T08:39:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:206","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=11"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nspark.sql(\"\"\"\nSELECT max(count)\nFROM flight_data_2015\n\"\"\").take(1)","user":"anonymous","dateUpdated":"2022-03-14T08:39:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(max(count)=370002)]\n"}]},"apps":[],"jobName":"paragraph_1647191911933_776011158","id":"20220313-171831_1134634690","dateCreated":"2022-03-13T17:18:31+0000","dateStarted":"2022-03-14T08:39:48+0000","dateFinished":"2022-03-14T08:39:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:207","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=12"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nfrom pyspark.sql.functions import max\nflightData2015.select(max(\"count\")).take(1)","user":"anonymous","dateUpdated":"2022-03-14T08:39:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(max(count)=370002)]\n"}]},"apps":[],"jobName":"paragraph_1647191910573_-425230475","id":"20220313-171830_29730000","dateCreated":"2022-03-13T17:18:30+0000","dateStarted":"2022-03-14T08:39:48+0000","dateFinished":"2022-03-14T08:39:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:208","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=13"],"interpreterSettingId":"spark"}}},{"text":"%md\n### ex3\n* 다중 포메이션 예제\n    * 상위 5개의 도착 국가 찾기","user":"anonymous","dateUpdated":"2022-03-14T08:39:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>ex3</h3>\n<ul>\n  <li>다중 포메이션 예제\n    <ul>\n      <li>상위 5개의 도착 국가 찾기</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647191988738_-1998968534","id":"20220313-171948_183256655","dateCreated":"2022-03-13T17:19:48+0000","dateStarted":"2022-03-14T08:39:48+0000","dateFinished":"2022-03-14T08:39:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:209"},{"text":"// 스칼라\nval maxSql = spark.sql(\"\"\"\nSELECT DEST_COUNTRY_NAME\n     , sum(count) AS destination_total\nFROM flight_data_2015\nGROUP BY DEST_COUNTRY_NAME\nORDER BY sum(count) DESC\nLIMIT 5\n\"\"\")\n\nmaxSql.show()","user":"anonymous","dateUpdated":"2022-03-14T08:39:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"maxSql: org.apache.spark.sql.DataFrame = [DEST_COUNTRY_NAME: string, destination_total: bigint]\n+-----------------+-----------------+\n|DEST_COUNTRY_NAME|destination_total|\n+-----------------+-----------------+\n|    United States|           411352|\n|           Canada|             8399|\n|           Mexico|             7140|\n|   United Kingdom|             2025|\n|            Japan|             1548|\n+-----------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1647192042747_-1201583271","id":"20220313-172042_1010650462","dateCreated":"2022-03-13T17:20:42+0000","dateStarted":"2022-03-14T08:39:48+0000","dateFinished":"2022-03-14T08:39:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:210","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=14"],"interpreterSettingId":"spark"}}},{"text":"// 스칼라\nimport org.apache.spark.sql.functions.desc\n(flightData2015\n  .groupBy(\"DEST_COUNTRY_NAME\")\n  .sum(\"count\")\n  .withColumnRenamed(\"sum(count)\", \"destination_total\")\n  .sort(desc(\"destination_total\"))\n  .limit(5)\n  .show())","user":"anonymous","dateUpdated":"2022-03-14T08:39:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.desc\n+-----------------+-----------------+\n|DEST_COUNTRY_NAME|destination_total|\n+-----------------+-----------------+\n|    United States|           411352|\n|           Canada|             8399|\n|           Mexico|             7140|\n|   United Kingdom|             2025|\n|            Japan|             1548|\n+-----------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1647192090582_2002006076","id":"20220313-172130_666043607","dateCreated":"2022-03-13T17:21:30+0000","dateStarted":"2022-03-14T08:39:49+0000","dateFinished":"2022-03-14T08:39:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:211","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=15"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nmaxSql = spark.sql(\"\"\"\nSELECT DEST_COUNTRY_NAME\n     , sum(count) AS destination_total\nFROM flight_data_2015\nGROUP BY DEST_COUNTRY_NAME\nORDER BY sum(count) DESC\nLIMIT 5\n\"\"\")\n\nmaxSql.show()","user":"anonymous","dateUpdated":"2022-03-14T08:39:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------+-----------------+\n|DEST_COUNTRY_NAME|destination_total|\n+-----------------+-----------------+\n|    United States|           411352|\n|           Canada|             8399|\n|           Mexico|             7140|\n|   United Kingdom|             2025|\n|            Japan|             1548|\n+-----------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1647191700216_-2014243249","id":"20220313-171500_1718553413","dateCreated":"2022-03-13T17:15:00+0000","dateStarted":"2022-03-14T08:39:50+0000","dateFinished":"2022-03-14T08:39:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:212","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=16"],"interpreterSettingId":"spark"}}},{"text":"%spark.pyspark\nfrom pyspark.sql.functions import desc\n(flightData2015\n  .groupBy(\"DEST_COUNTRY_NAME\")\n  .sum(\"count\")\n  .withColumnRenamed(\"sum(count)\", \"destination_total\")\n  .sort(desc(\"destination_total\"))\n  .limit(5)\n  .show())","user":"anonymous","dateUpdated":"2022-03-14T08:39:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------+-----------------+\n|DEST_COUNTRY_NAME|destination_total|\n+-----------------+-----------------+\n|    United States|           411352|\n|           Canada|             8399|\n|           Mexico|             7140|\n|   United Kingdom|             2025|\n|            Japan|             1548|\n+-----------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1647191695049_1395522929","id":"20220313-171455_434652715","dateCreated":"2022-03-13T17:14:55+0000","dateStarted":"2022-03-14T08:39:50+0000","dateFinished":"2022-03-14T08:39:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:213","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=17"],"interpreterSettingId":"spark"}}},{"text":"(flightData2015\n  .groupBy(\"DEST_COUNTRY_NAME\")\n  .sum(\"count\")\n  .withColumnRenamed(\"sum(count)\", \"destination_total\")\n  .sort(desc(\"destination_total\"))\n  .limit(5)\n  .explain())","user":"anonymous","dateUpdated":"2022-03-14T08:39:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"== Physical Plan ==\nTakeOrderedAndProject(limit=5, orderBy=[destination_total#231L DESC NULLS LAST], output=[DEST_COUNTRY_NAME#32,destination_total#231L])\n+- *(2) HashAggregate(keys=[DEST_COUNTRY_NAME#32], functions=[sum(cast(count#34 as bigint))])\n   +- Exchange hashpartitioning(DEST_COUNTRY_NAME#32, 5)\n      +- *(1) HashAggregate(keys=[DEST_COUNTRY_NAME#32], functions=[partial_sum(cast(count#34 as bigint))])\n         +- *(1) FileScan csv [DEST_COUNTRY_NAME#32,count#34] Batched: false, Format: CSV, Location: InMemoryFileIndex[file:/data/flight-data/csv/2015-summary.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DEST_COUNTRY_NAME:string,count:int>\n"}]},"apps":[],"jobName":"paragraph_1647191681646_-2027460763","id":"20220313-171441_713641303","dateCreated":"2022-03-13T17:14:41+0000","dateStarted":"2022-03-14T08:39:50+0000","dateFinished":"2022-03-14T08:39:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"text":"%md\n- 총 7단계가 있음\n    - read\n    - groupby\n    - sum\n    - columnrename\n    - sort\n    - limit\n    - collect\n- 위 단계의 순서는 최적화로 인해 다를 수 있음\n- 그리고 각 단계는 불변성을 가진 신규 DataFrame을 생성함","user":"anonymous","dateUpdated":"2022-03-14T08:39:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>총 7단계가 있음\n    <ul>\n      <li>read</li>\n      <li>groupby</li>\n      <li>sum</li>\n      <li>columnrename</li>\n      <li>sort</li>\n      <li>limit</li>\n      <li>collect</li>\n    </ul>\n  </li>\n  <li>위 단계의 순서는 최적화로 인해 다를 수 있음</li>\n  <li>그리고 각 단계는 불변성을 가진 신규 DataFrame을 생성함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647191566136_-460645704","id":"20220313-171246_543575076","dateCreated":"2022-03-13T17:12:46+0000","dateStarted":"2022-03-14T08:39:51+0000","dateFinished":"2022-03-14T08:39:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:215"},{"text":"%md\n","user":"anonymous","dateUpdated":"2022-03-14T08:39:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647192396914_1915715851","id":"20220313-172636_455753660","dateCreated":"2022-03-13T17:26:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:216"}],"name":"Chapter2","id":"2GZGQM2M4","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}