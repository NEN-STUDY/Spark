{"paragraphs":[{"text":"%sh\n# For prevent crash with other note's execution,\n# I recommend to restart spark interpreter.\n\ncurl -X PUT http://localhost:8080/api/interpreter/setting/restart/spark","user":"anonymous","dateUpdated":"2022-03-20T06:01:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0\r100  3988  100  3988    0     0   1511      0  0:00:02  0:00:02 --:--:--  1511\r100  3988  100  3988    0     0   1511      0  0:00:02  0:00:02 --:--:--  1511\n{\"status\":\"OK\",\"message\":\"\",\"body\":{\"id\":\"spark\",\"name\":\"spark\",\"group\":\"spark\",\"properties\":{\"zeppelin.spark.concurrentSQL\":{\"name\":\"zeppelin.spark.concurrentSQL\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.R.knitr\":{\"name\":\"zeppelin.R.knitr\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.R.cmd\":{\"name\":\"zeppelin.R.cmd\",\"value\":\"R\",\"type\":\"string\"},\"zeppelin.R.image.width\":{\"name\":\"zeppelin.R.image.width\",\"value\":\"100%\",\"type\":\"number\"},\"zeppelin.spark.importImplicit\":{\"name\":\"zeppelin.spark.importImplicit\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.dep.additionalRemoteRepository\":{\"name\":\"zeppelin.dep.additionalRemoteRepository\",\"value\":\"spark-packages,http://dl.bintray.com/spark-packages/maven,false;\",\"type\":\"textarea\"},\"zeppelin.dep.localrepo\":{\"name\":\"zeppelin.dep.localrepo\",\"value\":\"local-repo\",\"type\":\"string\"},\"zeppelin.spark.sql.stacktrace\":{\"name\":\"zeppelin.spark.sql.stacktrace\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.spark.useHiveContext\":{\"name\":\"zeppelin.spark.useHiveContext\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.printREPLOutput\":{\"name\":\"zeppelin.spark.printREPLOutput\",\"value\":true,\"type\":\"checkbox\"},\"spark.cores.max\":{\"name\":\"spark.cores.max\",\"value\":\"3\",\"type\":\"number\"},\"spark.executor.memory\":{\"name\":\"spark.executor.memory\",\"value\":\"2g\",\"type\":\"string\"},\"zeppelin.spark.sql.interpolation\":{\"name\":\"zeppelin.spark.sql.interpolation\",\"value\":false,\"type\":\"checkbox\"},\"spark.driver.memory\":{\"name\":\"spark.driver.memory\",\"value\":\"2g\",\"type\":\"textarea\"},\"spark.app.name\":{\"name\":\"spark.app.name\",\"value\":\"Zeppelin\",\"type\":\"string\"},\"zeppelin.spark.maxResult\":{\"name\":\"zeppelin.spark.maxResult\",\"value\":\"1000\",\"type\":\"number\"},\"master\":{\"name\":\"master\",\"value\":\"local[*]\",\"type\":\"string\"},\"zeppelin.pyspark.python\":{\"name\":\"zeppelin.pyspark.python\",\"value\":\"python\",\"type\":\"string\"},\"args\":{\"name\":\"args\",\"value\":\"\",\"type\":\"textarea\"},\"zeppelin.spark.enableSupportedVersionCheck\":{\"name\":\"zeppelin.spark.enableSupportedVersionCheck\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.useNew\":{\"name\":\"zeppelin.spark.useNew\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.pyspark.useIPython\":{\"name\":\"zeppelin.pyspark.useIPython\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.uiWebUrl\":{\"name\":\"zeppelin.spark.uiWebUrl\",\"value\":\"\",\"type\":\"string\"},\"zeppelin.R.render.options\":{\"name\":\"zeppelin.R.render.options\",\"value\":\"out.format \\u003d \\u0027html\\u0027, comment \\u003d NA, echo \\u003d FALSE, results \\u003d \\u0027asis\\u0027, message \\u003d F, warning \\u003d F, fig.retina \\u003d 2\",\"type\":\"textarea\"},\"spark.jars\":{\"name\":\"spark.jars\",\"value\":\"/zeppelin/lib/sqlite-jdbc-3.23.1.jar\",\"type\":\"textarea\"}},\"status\":\"READY\",\"interpreterGroup\":[{\"name\":\"spark\",\"class\":\"org.apache.zeppelin.spark.SparkInterpreter\",\"defaultInterpreter\":true,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"sql\",\"class\":\"org.apache.zeppelin.spark.SparkSqlInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"sql\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"dep\",\"class\":\"org.apache.zeppelin.spark.DepInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"pyspark\",\"class\":\"org.apache.zeppelin.spark.PySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"ipyspark\",\"class\":\"org.apache.zeppelin.spark.IPySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionSupport\":true}},{\"name\":\"r\",\"class\":\"org.apache.zeppelin.spark.SparkRInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"r\",\"editOnDblClick\":false,\"completionSupport\":false}}],\"dependencies\":[],\"option\":{\"remote\":true,\"port\":-1,\"perNote\":\"shared\",\"perUser\":\"shared\",\"isExistingProcess\":false,\"setPermission\":false,\"owners\":[],\"isUserImpersonate\":false}}}"}]},"apps":[],"jobName":"paragraph_1647233338881_149935958","id":"20220314-044858_1559482361","dateCreated":"2022-03-14T04:48:58+0000","dateStarted":"2022-03-20T06:01:52+0000","dateFinished":"2022-03-20T06:01:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:31517"},{"text":"%md\n## Dataset","user":"anonymous","dateUpdated":"2022-03-20T06:01:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Dataset</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233628595_-1890129508","id":"20220314-045348_1971694915","dateCreated":"2022-03-14T04:53:48+0000","dateStarted":"2022-03-20T06:01:54+0000","dateFinished":"2022-03-20T06:01:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31518"},{"text":"// 스칼라\nimport spark.implicits._\ncase class Flight(DEST_COUNTRY_NAME: String,\n                  ORIGIN_COUNTRY_NAME: String,\n                  count: BigInt)\nval flightsDF = (spark.read\n  .parquet(\"/data/flight-data/parquet/2010-summary.parquet/\"))\nval flights = flightsDF.as[Flight]","user":"anonymous","dateUpdated":"2022-03-20T06:01:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import spark.implicits._\ndefined class Flight\nflightsDF: org.apache.spark.sql.DataFrame = [DEST_COUNTRY_NAME: string, ORIGIN_COUNTRY_NAME: string ... 1 more field]\nflights: org.apache.spark.sql.Dataset[Flight] = [DEST_COUNTRY_NAME: string, ORIGIN_COUNTRY_NAME: string ... 1 more field]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233359075_757271676","id":"20220314-044919_826709262","dateCreated":"2022-03-14T04:49:19+0000","dateStarted":"2022-03-20T06:01:54+0000","dateFinished":"2022-03-20T06:02:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31519"},{"text":"%md\n- Dataset에서 collect나 take 메서드를 호출하면 DataFrame을 구성하는 Row 타입의 객체가 아닌 Dataset에 매개변수로 지정한 타입의 객체를 반환한다는 장점이 있음\n    - <strong>코드 변경 없이 타입 안정성이 보장됨</strong>","user":"anonymous","dateUpdated":"2022-03-20T06:02:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Dataset에서 collect나 take 메서드를 호출하면 DataFrame을 구성하는 Row 타입의 객체가 아닌 Dataset에 매개변수로 지정한 타입의 객체를 반환한다는 장점이 있음\n    <ul>\n      <li>\n      <strong>코드 변경 없이 타입 안정성이 보장됨</strong></li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647752748602_1458614688","id":"20220320-050548_1794555535","dateCreated":"2022-03-20T05:05:48+0000","dateStarted":"2022-03-20T06:02:07+0000","dateFinished":"2022-03-20T06:02:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31520"},{"text":"%md\n","user":"anonymous","dateUpdated":"2022-03-20T06:07:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647756420173_2079945591","id":"20220320-060700_1986371321","dateCreated":"2022-03-20T06:07:00+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38861"},{"text":"// 스칼라\n// 개체 할당 안하면 에러나던데 왜?\nval ex1 = (flights\n  .filter(flight_row => flight_row.ORIGIN_COUNTRY_NAME != \"Canada\")\n  .map(flight_row => flight_row)\n  .take(5))","user":"anonymous","dateUpdated":"2022-03-20T06:02:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ex1: Array[Flight] = Array(Flight(United States,Romania,1), Flight(United States,Ireland,264), Flight(United States,India,69), Flight(Egypt,United States,24), Flight(Equatorial Guinea,United States,1))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233429532_1408859979","id":"20220314-045029_368361294","dateCreated":"2022-03-14T04:50:29+0000","dateStarted":"2022-03-20T06:02:08+0000","dateFinished":"2022-03-20T06:02:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31521"},{"text":"// 스칼라\nval ex2 = (flights\n  .take(5)\n  .filter(flight_row => flight_row.ORIGIN_COUNTRY_NAME != \"Canada\")\n  .map(fr => Flight(fr.DEST_COUNTRY_NAME, fr.ORIGIN_COUNTRY_NAME, fr.count + 5)))","user":"anonymous","dateUpdated":"2022-03-20T06:02:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ex2: Array[Flight] = Array(Flight(United States,Romania,6), Flight(United States,Ireland,269), Flight(United States,India,74), Flight(Egypt,United States,29), Flight(Equatorial Guinea,United States,6))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233431556_946044122","id":"20220314-045031_973271420","dateCreated":"2022-03-14T04:50:31+0000","dateStarted":"2022-03-20T06:02:09+0000","dateFinished":"2022-03-20T06:02:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31522"},{"text":"%md\n## 구조적 스트리밍\n### 예제: 특정 고객이 대량으로 구매하는 영업 시간 살펴보기\n  - 구매비용 컬럼을 추가하고\n  - 고객이 가장 많이 소비한 날 구하기","user":"anonymous","dateUpdated":"2022-03-20T06:02:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>구조적 스트리밍</h2>\n<h3>예제: 특정 고객이 대량으로 구매하는 영업 시간 살펴보기</h3>\n<ul>\n  <li>구매비용 컬럼을 추가하고</li>\n  <li>고객이 가장 많이 소비한 날 구하기</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233372800_-1478405192","id":"20220314-044932_504934924","dateCreated":"2022-03-14T04:49:32+0000","dateStarted":"2022-03-20T06:02:10+0000","dateFinished":"2022-03-20T06:02:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31523"},{"text":"%md\n#### Case 1: 기본(정적) DataFrame 처리","user":"anonymous","dateUpdated":"2022-03-20T06:02:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Case 1: 기본(정적) DataFrame 처리</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233831089_-1834197802","id":"20220314-045711_734694432","dateCreated":"2022-03-14T04:57:11+0000","dateStarted":"2022-03-20T06:02:10+0000","dateFinished":"2022-03-20T06:02:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31524"},{"text":"// 스칼라\nval staticDataFrame = (spark.read.format(\"csv\")\n  .option(\"header\", \"true\")\n  .option(\"inferSchema\", \"true\")\n  .load(\"/data/retail-data/by-day/*.csv\"))\n  \nstaticDataFrame.createOrReplaceTempView(\"retail_data\")\nval staticSchema = staticDataFrame.schema","user":"anonymous","dateUpdated":"2022-03-20T06:02:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"staticDataFrame: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\nstaticSchema: org.apache.spark.sql.types.StructType = StructType(StructField(InvoiceNo,StringType,true), StructField(StockCode,StringType,true), StructField(Description,StringType,true), StructField(Quantity,IntegerType,true), StructField(InvoiceDate,TimestampType,true), StructField(UnitPrice,DoubleType,true), StructField(CustomerID,DoubleType,true), StructField(Country,StringType,true))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=3","http://0927a691e26f:4040/jobs/job?id=4","http://0927a691e26f:4040/jobs/job?id=5","http://0927a691e26f:4040/jobs/job?id=6"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233686768_-437542041","id":"20220314-045446_691747789","dateCreated":"2022-03-14T04:54:46+0000","dateStarted":"2022-03-20T06:02:10+0000","dateFinished":"2022-03-20T06:02:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31525"},{"text":"// 스칼라\nstaticSchema","user":"anonymous","dateUpdated":"2022-03-20T06:02:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res15: org.apache.spark.sql.types.StructType = StructType(StructField(InvoiceNo,StringType,true), StructField(StockCode,StringType,true), StructField(Description,StringType,true), StructField(Quantity,IntegerType,true), StructField(InvoiceDate,TimestampType,true), StructField(UnitPrice,DoubleType,true), StructField(CustomerID,DoubleType,true), StructField(Country,StringType,true))\n"}]},"apps":[],"jobName":"paragraph_1647233781216_-297582658","id":"20220314-045621_1447982425","dateCreated":"2022-03-14T04:56:21+0000","dateStarted":"2022-03-20T06:02:15+0000","dateFinished":"2022-03-20T06:02:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31526"},{"text":"%spark.pyspark\nstaticDataFrame = spark.read.format(\"csv\")\\\n  .option(\"header\", \"true\")\\\n  .option(\"inferSchema\", \"true\")\\\n  .load(\"/data/retail-data/by-day/*.csv\")\n\nstaticDataFrame.createOrReplaceTempView(\"retail_data\")\nstaticSchema = staticDataFrame.schema\nstaticSchema","user":"anonymous","dateUpdated":"2022-03-20T06:02:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(InvoiceNo,StringType,true),StructField(StockCode,StringType,true),StructField(Description,StringType,true),StructField(Quantity,IntegerType,true),StructField(InvoiceDate,TimestampType,true),StructField(UnitPrice,DoubleType,true),StructField(CustomerID,DoubleType,true),StructField(Country,StringType,true)))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=7","http://0927a691e26f:4040/jobs/job?id=8","http://0927a691e26f:4040/jobs/job?id=9","http://0927a691e26f:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233701573_-1396321414","id":"20220314-045501_191039233","dateCreated":"2022-03-14T04:55:01+0000","dateStarted":"2022-03-20T06:02:15+0000","dateFinished":"2022-03-20T06:02:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31527"},{"text":"%spark.pyspark\nstaticSchema","user":"anonymous","dateUpdated":"2022-03-20T06:02:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StructType(List(StructField(InvoiceNo,StringType,true),StructField(StockCode,StringType,true),StructField(Description,StringType,true),StructField(Quantity,IntegerType,true),StructField(InvoiceDate,TimestampType,true),StructField(UnitPrice,DoubleType,true),StructField(CustomerID,DoubleType,true),StructField(Country,StringType,true)))\n"}]},"apps":[],"jobName":"paragraph_1647233763274_-71708844","id":"20220314-045603_804809329","dateCreated":"2022-03-14T04:56:03+0000","dateStarted":"2022-03-20T06:02:19+0000","dateFinished":"2022-03-20T06:02:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31528"},{"text":"// 스칼라\nimport org.apache.spark.sql.functions.{window, column, desc, col}\n(staticDataFrame\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\n  .groupBy(\n    col(\"CustomerId\"), window(col(\"InvoiceDate\"), \"1 day\"))\n  .sum(\"total_cost\")\n  .show(5, false))","user":"anonymous","dateUpdated":"2022-03-20T06:02:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.{window, column, desc, col}\n+----------+------------------------------------------+-----------------+\n|CustomerId|window                                    |sum(total_cost)  |\n+----------+------------------------------------------+-----------------+\n|16057.0   |[2011-12-05 00:00:00, 2011-12-06 00:00:00]|-37.6            |\n|14126.0   |[2011-11-29 00:00:00, 2011-11-30 00:00:00]|643.6300000000001|\n|13500.0   |[2011-11-16 00:00:00, 2011-11-17 00:00:00]|497.9700000000001|\n|17160.0   |[2011-11-08 00:00:00, 2011-11-09 00:00:00]|516.8499999999999|\n|15608.0   |[2011-11-11 00:00:00, 2011-11-12 00:00:00]|122.4            |\n+----------+------------------------------------------+-----------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=11"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233923495_655262579","id":"20220314-045843_1296227226","dateCreated":"2022-03-14T04:58:43+0000","dateStarted":"2022-03-20T06:02:19+0000","dateFinished":"2022-03-20T06:02:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31529"},{"text":"%spark.pyspark\nfrom pyspark.sql.functions import window, column, desc, col\nstaticDataFrame\\\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\\\n  .groupBy(\n    col(\"CustomerId\"), window(col(\"InvoiceDate\"), \"1 day\"))\\\n  .sum(\"total_cost\")\\\n  .show(5, False)","user":"anonymous","dateUpdated":"2022-03-20T06:02:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+------------------------------------------+-----------------+\n|CustomerId|window                                    |sum(total_cost)  |\n+----------+------------------------------------------+-----------------+\n|16057.0   |[2011-12-05 00:00:00, 2011-12-06 00:00:00]|-37.6            |\n|14126.0   |[2011-11-29 00:00:00, 2011-11-30 00:00:00]|643.6300000000001|\n|13500.0   |[2011-11-16 00:00:00, 2011-11-17 00:00:00]|497.9700000000001|\n|17160.0   |[2011-11-08 00:00:00, 2011-11-09 00:00:00]|516.8499999999999|\n|15608.0   |[2011-11-11 00:00:00, 2011-11-12 00:00:00]|122.4            |\n+----------+------------------------------------------+-----------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=12"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233974658_-744286181","id":"20220314-045934_1079551459","dateCreated":"2022-03-14T04:59:34+0000","dateStarted":"2022-03-20T06:02:22+0000","dateFinished":"2022-03-20T06:02:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31530"},{"text":"%md\n- 로컬 모드에 적합한 셔플 파티션 수 설정\n    - 셔플 파티션 수 = 셔플 이후에 생성될 파티션 수\n    - 기본값(=200)처럼 많은 익스큐터는 필요없음","user":"anonymous","dateUpdated":"2022-03-20T06:02:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>로컬 모드에 적합한 셔플 파티션 수 설정\n    <ul>\n      <li>셔플 파티션 수 = 셔플 이후에 생성될 파티션 수</li>\n      <li>기본값(=200)처럼 많은 익스큐터는 필요없음</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647234460396_1605625792","id":"20220314-050740_1016591329","dateCreated":"2022-03-14T05:07:40+0000","dateStarted":"2022-03-20T06:02:24+0000","dateFinished":"2022-03-20T06:02:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31531"},{"text":"// 스칼라\nspark.conf.set(\"spark.sql.shuffle.partitions\", \"5\")","user":"anonymous","dateUpdated":"2022-03-20T06:02:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647234465342_-2049747641","id":"20220314-050745_688106998","dateCreated":"2022-03-14T05:07:45+0000","dateStarted":"2022-03-20T06:02:24+0000","dateFinished":"2022-03-20T06:02:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31532"},{"text":"%spark.pyspark\nspark.conf.set(\"spark.sql.shuffle.partitions\", \"5\")","user":"anonymous","dateUpdated":"2022-03-20T06:02:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647234475567_-1408084193","id":"20220314-050755_784085710","dateCreated":"2022-03-14T05:07:55+0000","dateStarted":"2022-03-20T06:02:24+0000","dateFinished":"2022-03-20T06:02:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31533"},{"text":"%md\n#### Case 2: 스트리밍 DataFrame 처리\n- 가장 큰 차이점: read 메서드 대신 <strong>readStream</strong> 메서드를 사용","user":"anonymous","dateUpdated":"2022-03-20T06:02:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Case 2: 스트리밍 DataFrame 처리</h4>\n<ul>\n  <li>가장 큰 차이점: read 메서드 대신 <strong>readStream</strong> 메서드를 사용</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233700755_-2142574820","id":"20220314-045500_1951702771","dateCreated":"2022-03-14T04:55:00+0000","dateStarted":"2022-03-20T06:02:25+0000","dateFinished":"2022-03-20T06:02:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31534"},{"text":"// 스칼라\nval streamingDataFrame = (spark.readStream\n    .schema(staticSchema)\n    .option(\"maxFilesPerTrigger\", 1) // maxFilesPerTrigger: 한 번에 읽을 파일수 설정\n    .format(\"csv\")\n    .option(\"header\", \"true\")\n    .load(\"/data/retail-data/by-day/*.csv\"))","user":"anonymous","dateUpdated":"2022-03-20T06:02:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"streamingDataFrame: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=13"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233699445_456184617","id":"20220314-045459_2066183149","dateCreated":"2022-03-14T04:54:59+0000","dateStarted":"2022-03-20T06:02:25+0000","dateFinished":"2022-03-20T06:02:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31535"},{"text":"// 스칼라\nstreamingDataFrame.isStreaming // returns true","user":"anonymous","dateUpdated":"2022-03-20T06:02:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res26: Boolean = true\n"}]},"apps":[],"jobName":"paragraph_1647234617799_-215898988","id":"20220314-051017_1449120862","dateCreated":"2022-03-14T05:10:17+0000","dateStarted":"2022-03-20T06:02:26+0000","dateFinished":"2022-03-20T06:02:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31536"},{"text":"%spark.pyspark\n# maxFilesPerTrigger: 한 번에 읽을 파일수 설정\nstreamingDataFrame = spark.readStream\\\n    .schema(staticSchema)\\\n    .option(\"maxFilesPerTrigger\", 1)\\\n    .format(\"csv\")\\\n    .option(\"header\", \"true\")\\\n    .load(\"/data/retail-data/by-day/*.csv\")","user":"anonymous","dateUpdated":"2022-03-20T06:02:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=14"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647233862978_-205003984","id":"20220314-045742_1634518324","dateCreated":"2022-03-14T04:57:42+0000","dateStarted":"2022-03-20T06:02:26+0000","dateFinished":"2022-03-20T06:02:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31537"},{"text":"%spark.pyspark\nstreamingDataFrame.isStreaming # returns true","user":"anonymous","dateUpdated":"2022-03-20T06:02:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"True\n"}]},"apps":[],"jobName":"paragraph_1647234632659_1362402574","id":"20220314-051032_569162782","dateCreated":"2022-03-14T05:10:32+0000","dateStarted":"2022-03-20T06:02:27+0000","dateFinished":"2022-03-20T06:02:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31538"},{"text":"// 스칼라\nval purchaseByCustomerPerHour = (streamingDataFrame\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\n  .groupBy(\n    $\"CustomerId\", window($\"InvoiceDate\", \"1 day\"))\n  .sum(\"total_cost\"))\n","user":"anonymous","dateUpdated":"2022-03-20T06:02:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"purchaseByCustomerPerHour: org.apache.spark.sql.DataFrame = [CustomerId: double, window: struct<start: timestamp, end: timestamp> ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1647234765375_1230888374","id":"20220314-051245_435497639","dateCreated":"2022-03-14T05:12:45+0000","dateStarted":"2022-03-20T06:02:27+0000","dateFinished":"2022-03-20T06:02:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31539"},{"text":"%spark.pyspark\npurchaseByCustomerPerHour = streamingDataFrame\\\n  .selectExpr(\n    \"CustomerId\",\n    \"(UnitPrice * Quantity) as total_cost\",\n    \"InvoiceDate\")\\\n  .groupBy(\n    col(\"CustomerId\"), window(col(\"InvoiceDate\"), \"1 day\"))\\\n  .sum(\"total_cost\")","user":"anonymous","dateUpdated":"2022-03-20T06:02:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647234793392_1754203593","id":"20220314-051313_1297367260","dateCreated":"2022-03-14T05:13:13+0000","dateStarted":"2022-03-20T06:02:27+0000","dateFinished":"2022-03-20T06:02:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31540"},{"text":"%md\n##### 스트리밍 액션\n- 위의 작업은 지연 연산(lazy operation)이므로 데이터 플로를 실행하기 위해 스트리밍 액션을 호출해야함\n- 스트리밍 액션은 <strong>어딘가에 데이터를 채워 넣어야</strong> 하므로 count, show 메서드 등 일반적인 정적 액션을 먹히지 않음\n- 본 예제에서 사용할 스트리밍 액션은 <strong>트리거가 실행된 다음 데이터를 갱신하게 될 인메모리 테이블에 데이터를 저장함</strong>\n  - 스파크는 <strong>이전 집계값보다 더 큰 값이 발생</strong>한 경우에만 인메모리 테이블을 <strong>갱신</strong>함\n- 스트림이 시작되면 <strong>쿼리 실행 결과가 어떠한 형태로 인메모리 테이블에 기록되는지 확인 가능</strong>","user":"anonymous","dateUpdated":"2022-03-20T06:02:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h5>스트리밍 액션</h5>\n<ul>\n  <li>위의 작업은 지연 연산(lazy operation)이므로 데이터 플로를 실행하기 위해 스트리밍 액션을 호출해야함</li>\n  <li>스트리밍 액션은 <strong>어딘가에 데이터를 채워 넣어야</strong> 하므로 count, show 메서드 등 일반적인 정적 액션을 먹히지 않음</li>\n  <li>본 예제에서 사용할 스트리밍 액션은 <strong>트리거가 실행된 다음 데이터를 갱신하게 될 인메모리 테이블에 데이터를 저장함</strong></li>\n  <li>스파크는 <strong>이전 집계값보다 더 큰 값이 발생</strong>한 경우에만 인메모리 테이블을 <strong>갱신</strong>함</li>\n  <li>스트림이 시작되면 <strong>쿼리 실행 결과가 어떠한 형태로 인메모리 테이블에 기록되는지 확인 가능</strong></li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233862075_366508820","id":"20220314-045742_234011013","dateCreated":"2022-03-14T04:57:42+0000","dateStarted":"2022-03-20T06:02:28+0000","dateFinished":"2022-03-20T06:02:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31541"},{"text":"// 스칼라\n(purchaseByCustomerPerHour.writeStream\n    .format(\"memory\") // memory = 인메모리 테이블에 저장\n    .queryName(\"customer_purchases\") // 인메모리에 저장될 테이블명\n    .outputMode(\"complete\") // complete = 모든 카운트 수행 결과를 테이블에 저장\n    .start())\n\nThread.sleep(5000)","user":"anonymous","dateUpdated":"2022-03-20T06:02:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res31: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@5c9e0867\n"}]},"apps":[],"jobName":"paragraph_1647233861260_-408711634","id":"20220314-045741_1425758896","dateCreated":"2022-03-14T04:57:41+0000","dateStarted":"2022-03-20T06:02:28+0000","dateFinished":"2022-03-20T06:02:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31542"},{"text":"%spark.pyspark\npurchaseByCustomerPerHour.writeStream\\\n    .format(\"memory\")\\\n    .queryName(\"customer_purchases_python\")\\\n    .outputMode(\"complete\")\\\n    .start()","user":"anonymous","dateUpdated":"2022-03-20T06:02:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<pyspark.sql.streaming.StreamingQuery object at 0x7f2440157d90>\n"}]},"apps":[],"jobName":"paragraph_1647234954564_1053027931","id":"20220314-051554_1654573654","dateCreated":"2022-03-14T05:15:54+0000","dateStarted":"2022-03-20T06:02:33+0000","dateFinished":"2022-03-20T06:02:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31543"},{"text":"%md\n- 인메모리 테이블에 어떻게 기록되는지 찍어보기","user":"anonymous","dateUpdated":"2022-03-20T06:02:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>인메모리 테이블에 어떻게 기록되는지 찍어보기</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647235236437_-1795251120","id":"20220314-052036_711591286","dateCreated":"2022-03-14T05:20:36+0000","dateStarted":"2022-03-20T06:02:34+0000","dateFinished":"2022-03-20T06:02:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31544"},{"text":"// in Scala\n(spark.sql(\"\"\"\n  SELECT *\n  FROM customer_purchases\n  ORDER BY `sum(total_cost)` DESC\n  \"\"\")\n  .show(5))","user":"anonymous","dateUpdated":"2022-03-20T06:02:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+--------------------+------------------+\n|CustomerId|              window|   sum(total_cost)|\n+----------+--------------------+------------------+\n|      null|[2010-12-03 00:00...| 23021.99999999999|\n|      null|[2010-12-14 00:00...|15929.879999999974|\n|      null|[2011-02-04 00:00...| 7001.680000000016|\n|   17857.0|[2011-04-05 00:00...|            5424.0|\n|   16333.0|[2011-04-01 00:00...|           4187.76|\n+----------+--------------------+------------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=32"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647234954243_994755600","id":"20220314-051554_643520903","dateCreated":"2022-03-14T05:15:54+0000","dateStarted":"2022-03-20T06:02:34+0000","dateFinished":"2022-03-20T06:02:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31545"},{"text":"%spark.pyspark\nspark.sql(\"\"\"\n  SELECT *\n  FROM customer_purchases_python\n  ORDER BY `sum(total_cost)` DESC\n  \"\"\")\\\n  .show(5)","user":"anonymous","dateUpdated":"2022-03-20T06:02:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+--------------------+------------------+\n|CustomerId|              window|   sum(total_cost)|\n+----------+--------------------+------------------+\n|      null|[2010-12-14 00:00...|15929.879999999974|\n|   14298.0|[2010-12-14 00:00...|2973.0599999999995|\n|   16553.0|[2010-12-14 00:00...|1609.4400000000003|\n|   12370.0|[2010-12-14 00:00...|           1590.82|\n|   14961.0|[2010-12-14 00:00...|            1182.7|\n+----------+--------------------+------------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=35"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647234953771_1696182121","id":"20220314-051553_977861185","dateCreated":"2022-03-14T05:15:53+0000","dateStarted":"2022-03-20T06:02:35+0000","dateFinished":"2022-03-20T06:02:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31546"},{"text":"%md\n- 콘솔에 처리 결과를 출력할 수 있음","user":"anonymous","dateUpdated":"2022-03-20T06:02:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>콘솔에 처리 결과를 출력할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647235275056_-1639920286","id":"20220314-052115_236818500","dateCreated":"2022-03-14T05:21:15+0000","dateStarted":"2022-03-20T06:02:36+0000","dateFinished":"2022-03-20T06:02:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31547"},{"text":"// 스칼라\n(purchaseByCustomerPerHour.writeStream\n    .format(\"console\") // console = 콘솔에 결과 출력\n    .queryName(\"customer_purchases_2\") // 인메모리에 저장될 테이블명\n    .outputMode(\"complete\") // complete = 모든 카운트 수행 결과를 테이블에 저장\n    .start())\n    \nThread.sleep(5000)","user":"anonymous","dateUpdated":"2022-03-20T06:02:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res38: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@b0c7fee\n-------------------------------------------\nBatch: 0\n-------------------------------------------\n+----------+--------------------+-------------------+\n|CustomerId|              window|    sum(total_cost)|\n+----------+--------------------+-------------------+\n|   14298.0|[2010-12-14 00:00...| 2973.0599999999995|\n|   14415.0|[2010-12-14 00:00...|             862.28|\n|   14907.0|[2010-12-14 00:00...|             341.37|\n|   15181.0|[2010-12-14 00:00...|              -4.25|\n|   15983.0|[2010-12-14 00:00...| 324.71999999999997|\n|   13050.0|[2010-12-14 00:00...|             292.42|\n|   15039.0|[2010-12-14 00:00...|  706.2500000000002|\n|   13329.0|[2010-12-14 00:00...|-13.200000000000001|\n|   17894.0|[2010-12-14 00:00...|             167.86|\n|   12434.0|[2010-12-14 00:00...|-27.749999999999996|\n|   17526.0|[2010-12-14 00:00...|-3.1999999999999993|\n|   14871.0|[2010-12-14 00:00...|              140.4|\n|   16722.0|[2010-12-14 00:00...|              -1.45|\n|   17158.0|[2010-12-14 00:00...|  413.7899999999999|\n|   14057.0|[2010-12-14 00:00...|  925.9200000000001|\n|   16499.0|[2010-12-14 00:00...| 118.89999999999999|\n|   17757.0|[2010-12-14 00:00...|             115.35|\n|   14680.0|[2010-12-14 00:00...| 1154.3200000000002|\n|   17722.0|[2010-12-14 00:00...|              -30.0|\n|   17685.0|[2010-12-14 00:00...|               10.5|\n+----------+--------------------+-------------------+\nonly showing top 20 rows\n\n-------------------------------------------\nBatch: 1\n-------------------------------------------\n+----------+--------------------+-------------------+\n|CustomerId|              window|    sum(total_cost)|\n+----------+--------------------+-------------------+\n|   14298.0|[2010-12-14 00:00...| 2973.0599999999995|\n|   14415.0|[2010-12-14 00:00...|             862.28|\n|   14907.0|[2010-12-14 00:00...|             341.37|\n|   15181.0|[2010-12-14 00:00...|              -4.25|\n|   15983.0|[2010-12-14 00:00...| 324.71999999999997|\n|   15039.0|[2010-12-14 00:00...|  706.2500000000002|\n|   13799.0|[2011-08-15 00:00...| 347.15999999999997|\n|   17894.0|[2010-12-14 00:00...|             167.86|\n|   14321.0|[2011-08-15 00:00...|             273.72|\n|   13078.0|[2011-08-15 00:00...|             434.74|\n|   18143.0|[2011-08-15 00:00...|             519.98|\n|   15624.0|[2011-08-15 00:00...|  68.10000000000001|\n|      null|[2011-08-15 00:00...|                0.0|\n|   13050.0|[2010-12-14 00:00...|             292.42|\n|   16961.0|[2011-08-15 00:00...|             234.17|\n|   13329.0|[2010-12-14 00:00...|-13.200000000000001|\n|   12434.0|[2010-12-14 00:00...|-27.749999999999996|\n|   17526.0|[2010-12-14 00:00...|-3.1999999999999993|\n|   14871.0|[2010-12-14 00:00...|              140.4|\n|   16722.0|[2010-12-14 00:00...|              -1.45|\n+----------+--------------------+-------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1647234952767_-1589721945","id":"20220314-051552_1078737048","dateCreated":"2022-03-14T05:15:52+0000","dateStarted":"2022-03-20T06:02:36+0000","dateFinished":"2022-03-20T06:02:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31548"},{"text":"%md\n## 머신러닝과 고급 분석","user":"anonymous","dateUpdated":"2022-03-20T06:02:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>머신러닝과 고급 분석</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1647233698609_-1860006289","id":"20220314-045458_46375137","dateCreated":"2022-03-14T04:54:58+0000","dateStarted":"2022-03-20T06:02:43+0000","dateFinished":"2022-03-20T06:02:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31549"},{"text":"%md\n### 예제: k-means로 기본적인 군집화 수행\n- k-means란?\n    - 데이터를 k개의 그룹으로 뭉쳐주는 알고리즘\n        1. k개 기준점(센트로이드)을 뿌려놓고\n        2. 센트로이드와 가까운 데이터를 같은 그룹으로 할당하고\n        3. 같은 그룹의 평균을 새로운 센트로이드로 지정\n        4. 센트로이드가 변하지 않을때까지 위의 과정을 반복하면 k개의 그룹이 완성됨","user":"anonymous","dateUpdated":"2022-03-20T06:02:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>예제: k-means로 기본적인 군집화 수행</h3>\n<ul>\n  <li>k-means란?\n    <ul>\n      <li>데이터를 k개의 그룹으로 뭉쳐주는 알고리즘\n        <ol>\n          <li>k개 기준점(센트로이드)을 뿌려놓고</li>\n          <li>센트로이드와 가까운 데이터를 같은 그룹으로 할당하고</li>\n          <li>같은 그룹의 평균을 새로운 센트로이드로 지정</li>\n          <li>센트로이드가 변하지 않을때까지 위의 과정을 반복하면 k개의 그룹이 완성됨</li>\n        </ol>\n      </li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647752984625_689011679","id":"20220320-050944_679809655","dateCreated":"2022-03-20T05:09:44+0000","dateStarted":"2022-03-20T06:02:44+0000","dateFinished":"2022-03-20T06:02:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31550"},{"text":"// 스칼라\nstaticDataFrame.printSchema()","user":"anonymous","dateUpdated":"2022-03-20T06:02:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- InvoiceNo: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: timestamp (nullable = true)\n |-- UnitPrice: double (nullable = true)\n |-- CustomerID: double (nullable = true)\n |-- Country: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1647753676244_1570186524","id":"20220320-052116_1781232753","dateCreated":"2022-03-20T05:21:16+0000","dateStarted":"2022-03-20T06:02:44+0000","dateFinished":"2022-03-20T06:02:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31551"},{"text":"%md\n- 날짜 데이터 변환","user":"anonymous","dateUpdated":"2022-03-20T06:02:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>날짜 데이터 변환</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647753934875_-2125074044","id":"20220320-052534_2052690854","dateCreated":"2022-03-20T05:25:34+0000","dateStarted":"2022-03-20T06:02:46+0000","dateFinished":"2022-03-20T06:02:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31552"},{"text":"// 스칼라\nimport org.apache.spark.sql.functions.date_format\nval preppedDataFrame = (staticDataFrame\n  .na.fill(0)\n  .withColumn(\"day_of_week\", date_format($\"InvoiceDate\", \"EEEE\"))\n  .coalesce(5))","user":"anonymous","dateUpdated":"2022-03-20T06:02:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.date_format\npreppedDataFrame: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [InvoiceNo: string, StockCode: string ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1647753675563_-1016691795","id":"20220320-052115_696061085","dateCreated":"2022-03-20T05:21:15+0000","dateStarted":"2022-03-20T06:02:46+0000","dateFinished":"2022-03-20T06:02:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31553"},{"text":"// 스칼라\npreppedDataFrame.show(1)","user":"anonymous","dateUpdated":"2022-03-20T06:02:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+------------------+--------+-------------------+---------+----------+--------------+-----------+\n|InvoiceNo|StockCode|       Description|Quantity|        InvoiceDate|UnitPrice|CustomerID|       Country|day_of_week|\n+---------+---------+------------------+--------+-------------------+---------+----------+--------------+-----------+\n|   580538|    23084|RABBIT NIGHT LIGHT|      48|2011-12-05 08:38:00|     1.79|   14075.0|United Kingdom|     Monday|\n+---------+---------+------------------+--------+-------------------+---------+----------+--------------+-----------+\nonly showing top 1 row\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=76"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647753862335_847073219","id":"20220320-052422_331093511","dateCreated":"2022-03-20T05:24:22+0000","dateStarted":"2022-03-20T06:02:47+0000","dateFinished":"2022-03-20T06:02:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31554"},{"text":"%spark.pyspark\nfrom pyspark.sql.functions import date_format, col\npreppedDataFrame = (staticDataFrame\n  .na.fill(0)\n  .withColumn(\"day_of_week\", date_format(col(\"InvoiceDate\"), \"EEEE\"))\n  .coalesce(5))","user":"anonymous","dateUpdated":"2022-03-20T06:02:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647753674906_602443051","id":"20220320-052114_2044082709","dateCreated":"2022-03-20T05:21:14+0000","dateStarted":"2022-03-20T06:02:51+0000","dateFinished":"2022-03-20T06:02:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31555"},{"text":"%spark.pyspark\npreppedDataFrame.show(1)","user":"anonymous","dateUpdated":"2022-03-20T06:02:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+------------------+--------+-------------------+---------+----------+--------------+-----------+\n|InvoiceNo|StockCode|       Description|Quantity|        InvoiceDate|UnitPrice|CustomerID|       Country|day_of_week|\n+---------+---------+------------------+--------+-------------------+---------+----------+--------------+-----------+\n|   580538|    23084|RABBIT NIGHT LIGHT|      48|2011-12-05 08:38:00|     1.79|   14075.0|United Kingdom|     Monday|\n+---------+---------+------------------+--------+-------------------+---------+----------+--------------+-----------+\nonly showing top 1 row\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=92"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647753894412_419684576","id":"20220320-052454_1869364550","dateCreated":"2022-03-20T05:24:54+0000","dateStarted":"2022-03-20T06:02:53+0000","dateFinished":"2022-03-20T06:02:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31556"},{"text":"%md\n- 학습 데이터와 테스트 데이터 분리\n    - TrainValidationSplit이나 CrossValidator API로도 분리 가능함(6부에서 다룸)","user":"anonymous","dateUpdated":"2022-03-20T06:02:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>학습 데이터와 테스트 데이터 분리\n    <ul>\n      <li>TrainValidationSplit이나 CrossValidator API로도 분리 가능함(6부에서 다룸)</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647753674333_1504481827","id":"20220320-052114_518088408","dateCreated":"2022-03-20T05:21:14+0000","dateStarted":"2022-03-20T06:02:54+0000","dateFinished":"2022-03-20T06:02:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31557"},{"text":"// 스칼라\nval trainDataFrame = (preppedDataFrame\n  .where(\"InvoiceDate < '2011-07-01'\"))\nval testDataFrame = (preppedDataFrame\n  .where(\"InvoiceDate >= '2011-07-01'\"))","user":"anonymous","dateUpdated":"2022-03-20T06:02:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainDataFrame: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [InvoiceNo: string, StockCode: string ... 7 more fields]\ntestDataFrame: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [InvoiceNo: string, StockCode: string ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1647753673672_-425916340","id":"20220320-052113_842780010","dateCreated":"2022-03-20T05:21:13+0000","dateStarted":"2022-03-20T06:02:55+0000","dateFinished":"2022-03-20T06:02:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31558"},{"text":"// 스칼라\n// 액션 호출\ntrainDataFrame.count()\ntestDataFrame.count()","user":"anonymous","dateUpdated":"2022-03-20T06:02:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res53: Long = 245903\nres54: Long = 296006\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=106","http://0927a691e26f:4040/jobs/job?id=120"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647753672523_-1942112363","id":"20220320-052112_1941855603","dateCreated":"2022-03-20T05:21:12+0000","dateStarted":"2022-03-20T06:02:57+0000","dateFinished":"2022-03-20T06:03:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31559"},{"text":"%spark.pyspark\ntrainDataFrame = (preppedDataFrame\n  .where(\"InvoiceDate < '2011-07-01'\"))\ntestDataFrame = (preppedDataFrame\n  .where(\"InvoiceDate >= '2011-07-01'\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647753012561_1753355043","id":"20220320-051012_1104121741","dateCreated":"2022-03-20T05:10:12+0000","dateStarted":"2022-03-20T06:03:04+0000","dateFinished":"2022-03-20T06:03:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31560"},{"text":"%spark.pyspark\n# 액션 호출\ntrainDataFrame.count()\ntestDataFrame.count()","user":"anonymous","dateUpdated":"2022-03-20T06:03:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"296006\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=134","http://0927a691e26f:4040/jobs/job?id=146"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647753010546_1317610599","id":"20220320-051010_1218295707","dateCreated":"2022-03-20T05:10:10+0000","dateStarted":"2022-03-20T06:03:04+0000","dateFinished":"2022-03-20T06:03:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31561"},{"text":"%md\n- StringIndexer로 각 요일을 수치형으로 변환\n    - 토요일 6, 월요일 1로 반환","user":"anonymous","dateUpdated":"2022-03-20T06:03:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>StringIndexer로 각 요일을 수치형으로 변환\n    <ul>\n      <li>토요일 6, 월요일 1로 반환</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647754240111_106299087","id":"20220320-053040_429525230","dateCreated":"2022-03-20T05:30:40+0000","dateStarted":"2022-03-20T06:03:14+0000","dateFinished":"2022-03-20T06:03:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31562"},{"text":"// 스칼라\nimport org.apache.spark.ml.feature.StringIndexer\nval indexer = (new StringIndexer()\n  .setInputCol(\"day_of_week\")\n  .setOutputCol(\"day_of_week_index\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.StringIndexer\nindexer: org.apache.spark.ml.feature.StringIndexer = strIdx_3523ce9b6b6b\n"}]},"apps":[],"jobName":"paragraph_1647753009190_-1204949922","id":"20220320-051009_584797399","dateCreated":"2022-03-20T05:10:09+0000","dateStarted":"2022-03-20T06:03:14+0000","dateFinished":"2022-03-20T06:03:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31563"},{"text":"%spark.pyspark\nfrom pyspark.ml.feature import StringIndexer\nindexer = (StringIndexer()\n  .setInputCol(\"day_of_week\")\n  .setOutputCol(\"day_of_week_index\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647754156439_-1445487997","id":"20220320-052916_1271123632","dateCreated":"2022-03-20T05:29:16+0000","dateStarted":"2022-03-20T06:03:17+0000","dateFinished":"2022-03-20T06:03:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31564"},{"text":"%md\n- OneHotEncoder로 index -> binary vector로 변환\n    - 수치형으로 변환한 요일을 그대로 넣으면 알고리즘에서 토요일 6 > 월요일 1로 판단하므로 숫자가 의미 없도록 변환해야함","user":"anonymous","dateUpdated":"2022-03-20T06:03:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>OneHotEncoder로 index -&gt; binary vector로 변환\n    <ul>\n      <li>수치형으로 변환한 요일을 그대로 넣으면 알고리즘에서 토요일 6 &gt; 월요일 1로 판단하므로 숫자가 의미 없도록 변환해야함</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647754155591_1692970241","id":"20220320-052915_40932235","dateCreated":"2022-03-20T05:29:15+0000","dateStarted":"2022-03-20T06:03:18+0000","dateFinished":"2022-03-20T06:03:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31565"},{"text":"// 스칼라\nimport org.apache.spark.ml.feature.OneHotEncoder\nval encoder = (new OneHotEncoder()\n  .setInputCol(\"day_of_week_index\")\n  .setOutputCol(\"day_of_week_encoded\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.OneHotEncoder\nwarning: there was one deprecation warning; re-run with -deprecation for details\nencoder: org.apache.spark.ml.feature.OneHotEncoder = oneHot_f0fa60867d4b\n"}]},"apps":[],"jobName":"paragraph_1647753007505_-884218899","id":"20220320-051007_322239018","dateCreated":"2022-03-20T05:10:07+0000","dateStarted":"2022-03-20T06:03:18+0000","dateFinished":"2022-03-20T06:03:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31566"},{"text":"%spark.pyspark\nfrom pyspark.ml.feature import OneHotEncoder\nencoder = (OneHotEncoder()\n  .setInputCol(\"day_of_week_index\")\n  .setOutputCol(\"day_of_week_encoded\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647754319456_1312183681","id":"20220320-053159_1518317282","dateCreated":"2022-03-20T05:31:59+0000","dateStarted":"2022-03-20T06:03:20+0000","dateFinished":"2022-03-20T06:03:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31567"},{"text":"%md\n- 스파크의 모든 머신러닝 알고리즘은 수치형 벡터 타입을 입력으로 사용함","user":"anonymous","dateUpdated":"2022-03-20T06:03:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>스파크의 모든 머신러닝 알고리즘은 수치형 벡터 타입을 입력으로 사용함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647754548825_-1260071101","id":"20220320-053548_136685146","dateCreated":"2022-03-20T05:35:48+0000","dateStarted":"2022-03-20T06:03:20+0000","dateFinished":"2022-03-20T06:03:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31568"},{"text":"// 스칼라\nimport org.apache.spark.ml.feature.VectorAssembler\nval vectorAssembler = (new VectorAssembler()\n  .setInputCols(Array(\"UnitPrice\", \"Quantity\", \"day_of_week_encoded\"))\n  .setOutputCol(\"features\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.VectorAssembler\nvectorAssembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_d15234f37fe7\n"}]},"apps":[],"jobName":"paragraph_1647754318505_-1035497995","id":"20220320-053158_1628549811","dateCreated":"2022-03-20T05:31:58+0000","dateStarted":"2022-03-20T06:03:20+0000","dateFinished":"2022-03-20T06:03:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31569"},{"text":"%spark.pyspark\nfrom pyspark.ml.feature import VectorAssembler\nvectorAssembler = (VectorAssembler()\n  .setInputCols([\"UnitPrice\", \"Quantity\", \"day_of_week_encoded\"])\n  .setOutputCol(\"features\"))","user":"anonymous","dateUpdated":"2022-03-20T06:03:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647754316880_-1519309785","id":"20220320-053156_420538495","dateCreated":"2022-03-20T05:31:56+0000","dateStarted":"2022-03-20T06:03:22+0000","dateFinished":"2022-03-20T06:03:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31570"},{"text":"%md\n- 나중에 입력값으로 들어올 데이터가 같은 프로세스를 거쳐 변환되도록 파이프라인을 설정","user":"anonymous","dateUpdated":"2022-03-20T06:03:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>나중에 입력값으로 들어올 데이터가 같은 프로세스를 거쳐 변환되도록 파이프라인을 설정</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647754614065_2068251030","id":"20220320-053654_1717403482","dateCreated":"2022-03-20T05:36:54+0000","dateStarted":"2022-03-20T06:03:22+0000","dateFinished":"2022-03-20T06:03:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31571"},{"text":"import org.apache.spark.ml.Pipeline\nval transformationPipeline = (new Pipeline()\n  .setStages(Array(indexer, encoder, vectorAssembler)))","user":"anonymous","dateUpdated":"2022-03-20T06:03:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.Pipeline\ntransformationPipeline: org.apache.spark.ml.Pipeline = pipeline_cedef0d547f4\n"}]},"apps":[],"jobName":"paragraph_1647754514325_-1233027576","id":"20220320-053514_1611912717","dateCreated":"2022-03-20T05:35:14+0000","dateStarted":"2022-03-20T06:03:22+0000","dateFinished":"2022-03-20T06:03:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31572"},{"text":"%spark.pyspark\nfrom pyspark.ml import Pipeline\ntransformationPipeline = (Pipeline()\n  .setStages([indexer, encoder, vectorAssembler]))","user":"anonymous","dateUpdated":"2022-03-20T06:03:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647754518726_-209379866","id":"20220320-053518_1397063045","dateCreated":"2022-03-20T05:35:18+0000","dateStarted":"2022-03-20T06:03:23+0000","dateFinished":"2022-03-20T06:03:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31573"},{"text":"%md\n- 학습 데이터에 변환자를 적합(fit)시킴\n    - 학습을 위한 맞춤 파이프라인(fitted pipeline)이 준비됨","user":"anonymous","dateUpdated":"2022-03-20T06:03:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>학습 데이터에 변환자를 적합(fit)시킴\n    <ul>\n      <li>학습을 위한 맞춤 파이프라인(fitted pipeline)이 준비됨</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647754739130_-745973698","id":"20220320-053859_656580715","dateCreated":"2022-03-20T05:38:59+0000","dateStarted":"2022-03-20T06:03:24+0000","dateFinished":"2022-03-20T06:03:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31574"},{"text":"// 스칼라\nval fittedPipeline = transformationPipeline.fit(trainDataFrame)","user":"anonymous","dateUpdated":"2022-03-20T06:03:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"fittedPipeline: org.apache.spark.ml.PipelineModel = pipeline_cedef0d547f4\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=199"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647754518341_529318605","id":"20220320-053518_1265777479","dateCreated":"2022-03-20T05:35:18+0000","dateStarted":"2022-03-20T06:03:24+0000","dateFinished":"2022-03-20T06:03:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31575"},{"text":"%spark.pyspark\nfittedPipeline = transformationPipeline.fit(trainDataFrame)","user":"anonymous","dateUpdated":"2022-03-20T06:03:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=223"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647754711809_498384799","id":"20220320-053831_1023378086","dateCreated":"2022-03-20T05:38:31+0000","dateStarted":"2022-03-20T06:03:36+0000","dateFinished":"2022-03-20T06:03:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31576"},{"text":"%md\n- fitted pipeline을 사용해서 일관되고 반복적인 방식으로 모든 데이터를 변환할 수 있음","user":"anonymous","dateUpdated":"2022-03-20T06:03:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>fitted pipeline을 사용해서 일관되고 반복적인 방식으로 모든 데이터를 변환할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647754711612_2045561013","id":"20220320-053831_1075420387","dateCreated":"2022-03-20T05:38:31+0000","dateStarted":"2022-03-20T06:03:41+0000","dateFinished":"2022-03-20T06:03:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31577"},{"text":"// 스칼라\nval transformedTraining = fittedPipeline.transform(trainDataFrame)","user":"anonymous","dateUpdated":"2022-03-20T06:03:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"transformedTraining: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 10 more fields]\n"}]},"apps":[],"jobName":"paragraph_1647754860099_-413113677","id":"20220320-054100_943702118","dateCreated":"2022-03-20T05:41:00+0000","dateStarted":"2022-03-20T06:03:42+0000","dateFinished":"2022-03-20T06:03:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31578"},{"text":"%spark.pyspark\ntransformedTraining = fittedPipeline.transform(trainDataFrame)","user":"anonymous","dateUpdated":"2022-03-20T06:03:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647754711450_468879379","id":"20220320-053831_1218581965","dateCreated":"2022-03-20T05:38:31+0000","dateStarted":"2022-03-20T06:03:43+0000","dateFinished":"2022-03-20T06:03:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31579"},{"text":"%md\n- 모델의 하이퍼파라미터를 튜닝할 때, <strong>캐싱</strong>을 사용하면 중간 변환된 데이터셋의 복사본을 <strong>메모리에 저장</strong>하므로 빠르게 반복적으로 수행 가능\n    - 스파크는 캐싱하고 파이썬은 캐싱하지 않고 실행해서 비교","user":"anonymous","dateUpdated":"2022-03-20T06:03:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>모델의 하이퍼파라미터를 튜닝할 때, <strong>캐싱</strong>을 사용하면 중간 변환된 데이터셋의 복사본을 <strong>메모리에 저장</strong>하므로 빠르게 반복적으로 수행 가능\n    <ul>\n      <li>스파크는 캐싱하고 파이썬은 캐싱하지 않고 실행해서 비교</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647755058560_-1613151931","id":"20220320-054418_1153890061","dateCreated":"2022-03-20T05:44:18+0000","dateStarted":"2022-03-20T06:03:44+0000","dateFinished":"2022-03-20T06:03:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31580"},{"text":"// 스칼라\ntransformedTraining.cache()","user":"anonymous","dateUpdated":"2022-03-20T06:03:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"org.apache.thrift.transport.TTransportException\n\tat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\n\tat org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_interpret(RemoteInterpreterService.java:274)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:258)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:233)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:229)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:135)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647754711321_441890011","id":"20220320-053831_1371800372","dateCreated":"2022-03-20T05:38:31+0000","dateStarted":"2022-03-20T06:03:44+0000","dateFinished":"2022-03-20T06:03:49+0000","status":"ERROR","errorMessage":"org.apache.thrift.transport.TTransportException\n\tat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\n\tat org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_interpret(RemoteInterpreterService.java:274)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:258)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:233)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter$4.call(RemoteInterpreter.java:229)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:135)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31581"},{"text":"%md\n- 데이터 변환 결과","user":"anonymous","dateUpdated":"2022-03-20T05:53:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>데이터 변환 결과</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647755621161_-1705178596","id":"20220320-055341_2077372066","dateCreated":"2022-03-20T05:53:41+0000","dateStarted":"2022-03-20T05:53:52+0000","dateFinished":"2022-03-20T05:53:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31582"},{"text":"// 스칼라\ntransformedTraining.show(2)","user":"anonymous","dateUpdated":"2022-03-20T05:50:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+--------------------+--------+-------------------+---------+----------+--------------+-----------+-----------------+-------------------+--------------------+\n|InvoiceNo|StockCode|         Description|Quantity|        InvoiceDate|UnitPrice|CustomerID|       Country|day_of_week|day_of_week_index|day_of_week_encoded|            features|\n+---------+---------+--------------------+--------+-------------------+---------+----------+--------------+-----------+-----------------+-------------------+--------------------+\n|   537226|    22811|SET OF 6 T-LIGHTS...|       6|2010-12-06 08:34:00|     2.95|   15987.0|United Kingdom|     Monday|              2.0|      (5,[2],[1.0])|(7,[0,1,4],[2.95,...|\n|   537226|    21713|CITRONELLA CANDLE...|       8|2010-12-06 08:34:00|      2.1|   15987.0|United Kingdom|     Monday|              2.0|      (5,[2],[1.0])|(7,[0,1,4],[2.1,8...|\n+---------+---------+--------------------+--------+-------------------+---------+----------+--------------+-----------+-----------------+-------------------+--------------------+\nonly showing top 2 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=25"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647755158145_1609680900","id":"20220320-054558_855560650","dateCreated":"2022-03-20T05:45:58+0000","dateStarted":"2022-03-20T05:50:03+0000","dateFinished":"2022-03-20T05:50:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31583"},{"text":"%spark.pyspark\ntransformedTraining.createOrReplaceTempView('transformedTraining')","user":"anonymous","dateUpdated":"2022-03-20T05:51:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647755453390_-2030097145","id":"20220320-055053_1916419980","dateCreated":"2022-03-20T05:50:53+0000","dateStarted":"2022-03-20T05:51:20+0000","dateFinished":"2022-03-20T05:51:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31584"},{"text":"%spark.sql\nselect *\nfrom transformedTraining\nlimit 2","user":"anonymous","dateUpdated":"2022-03-20T05:54:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"InvoiceNo":"string","StockCode":"string","Description":"string","Quantity":"string","InvoiceDate":"string","UnitPrice":"string","CustomerID":"string","Country":"string","day_of_week":"string","day_of_week_index":"string","day_of_week_encoded":"string","features":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"InvoiceNo\tStockCode\tDescription\tQuantity\tInvoiceDate\tUnitPrice\tCustomerID\tCountry\tday_of_week\tday_of_week_index\tday_of_week_encoded\tfeatures\n537226\t22811\tSET OF 6 T-LIGHTS CACTI \t6\t2010-12-06 08:34:00.0\t2.95\t15987.0\tUnited Kingdom\tMonday\t2.0\t(5,[2],[1.0])\t(7,[0,1,4],[2.95,6.0,1.0])\n537226\t21713\tCITRONELLA CANDLE FLOWERPOT\t8\t2010-12-06 08:34:00.0\t2.1\t15987.0\tUnited Kingdom\tMonday\t2.0\t(5,[2],[1.0])\t(7,[0,1,4],[2.1,8.0,1.0])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=34"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647755672457_1050524169","id":"20220320-055432_1370502601","dateCreated":"2022-03-20T05:54:32+0000","dateStarted":"2022-03-20T05:54:41+0000","dateFinished":"2022-03-20T05:54:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31585"},{"text":"%spark.sql\nselect distinct day_of_week_index\n              , day_of_week\nfrom transformedTraining\norder by 1","user":"anonymous","dateUpdated":"2022-03-20T05:53:13+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"day_of_week":"string","day_of_week_index":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"day_of_week_index\tday_of_week\n0.0\tThursday\n1.0\tTuesday\n2.0\tMonday\n3.0\tWednesday\n4.0\tFriday\n5.0\tSunday\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=33"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1647755482908_274412440","id":"20220320-055122_1485903185","dateCreated":"2022-03-20T05:51:22+0000","dateStarted":"2022-03-20T05:53:13+0000","dateFinished":"2022-03-20T05:53:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31586"},{"text":"%md\n- 모델 학습 과정\n    1. 머신러닝 모델을 사용하려면 관련 클래스를 임포트하고 인스턴스를 생성\n    2. 아직 학습되지 않은 모델을 초기화\n    3. 해당 모델을 학습\n- 명명규칙\n    - 학습 전: [알고리즘명]\n    - 학습 후: [알고리즘명]+Model","user":"anonymous","dateUpdated":"2022-03-20T05:58:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>모델 학습 과정\n    <ol>\n      <li>머신러닝 모델을 사용하려면 관련 클래스를 임포트하고 인스턴스를 생성</li>\n      <li>아직 학습되지 않은 모델을 초기화</li>\n      <li>해당 모델을 학습</li>\n    </ol>\n  </li>\n  <li>명명규칙\n    <ul>\n      <li>학습 전: [알고리즘명]</li>\n      <li>학습 후: [알고리즘명]+Model</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647755062193_-511360635","id":"20220320-054422_46793533","dateCreated":"2022-03-20T05:44:22+0000","dateStarted":"2022-03-20T05:58:17+0000","dateFinished":"2022-03-20T05:58:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31587"},{"text":"// 스칼라\nimport org.apache.spark.ml.clustering.KMeans\nval kmeans = (new KMeans()\n  .setK(20)\n  .setSeed(1L))","user":"anonymous","dateUpdated":"2022-03-20T05:59:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.clustering.KMeans\nkmeans: org.apache.spark.ml.clustering.KMeans = kmeans_1ea72bd78689\n"}]},"apps":[],"jobName":"paragraph_1647754711146_-390291810","id":"20220320-053831_690348196","dateCreated":"2022-03-20T05:38:31+0000","dateStarted":"2022-03-20T05:59:14+0000","dateFinished":"2022-03-20T05:59:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31588"},{"text":"%spark.pyspark\nfrom pyspark.ml.clustering import KMeans\nkmeans = (KMeans()\n  .setK(20)\n  .setSeed(1L))","user":"anonymous","dateUpdated":"2022-03-20T05:59:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1647754517853_-458185694","id":"20220320-053517_522359943","dateCreated":"2022-03-20T05:35:17+0000","dateStarted":"2022-03-20T05:59:16+0000","dateFinished":"2022-03-20T05:59:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31589"},{"text":"// 스칼라\nval kmModel = kmeans.fit(transformedTraining)","user":"anonymous","dateUpdated":"2022-03-20T06:05:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647754517011_26875442","id":"20220320-053517_482890785","dateCreated":"2022-03-20T05:35:17+0000","dateStarted":"2022-03-20T06:05:16+0000","dateFinished":"2022-03-20T06:05:16+0000","status":"ERROR","errorMessage":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31590"},{"text":"%spark.pyspark\nkmModel = kmeans.fit(transformedTraining)","user":"anonymous","dateUpdated":"2022-03-20T06:05:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647755963954_976141216","id":"20220320-055923_374538515","dateCreated":"2022-03-20T05:59:23+0000","dateStarted":"2022-03-20T06:05:22+0000","dateFinished":"2022-03-20T06:05:22+0000","status":"ERROR","errorMessage":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31591"},{"text":"%md\n- 학습 데이터셋에 대한 비용 계산","user":"anonymous","dateUpdated":"2022-03-20T05:47:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>학습 데이터셋에 대한 비용 계산</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647755075542_-1640142579","id":"20220320-054435_1372422673","dateCreated":"2022-03-20T05:44:35+0000","dateStarted":"2022-03-20T05:47:14+0000","dateFinished":"2022-03-20T05:47:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31592"},{"text":"// 스칼라\nkmModel.computeCost(transformedTraining)","user":"anonymous","dateUpdated":"2022-03-20T06:05:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647755074337_809494002","id":"20220320-054434_522496995","dateCreated":"2022-03-20T05:44:34+0000","dateStarted":"2022-03-20T06:05:26+0000","dateFinished":"2022-03-20T06:05:26+0000","status":"ERROR","errorMessage":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31593"},{"text":"%spark.pyspark\nkmModel.computeCost(transformedTraining)","user":"anonymous","dateUpdated":"2022-03-20T06:05:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647755073061_1726160674","id":"20220320-054433_1025117979","dateCreated":"2022-03-20T05:44:33+0000","dateStarted":"2022-03-20T06:05:29+0000","dateFinished":"2022-03-20T06:05:29+0000","status":"ERROR","errorMessage":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31594"},{"text":"// 스칼라\nval transformedTest = fittedPipeline.transform(testDataFrame)","user":"anonymous","dateUpdated":"2022-03-20T06:05:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647754316439_-1502054567","id":"20220320-053156_1146416629","dateCreated":"2022-03-20T05:31:56+0000","dateStarted":"2022-03-20T06:05:32+0000","dateFinished":"2022-03-20T06:05:32+0000","status":"ERROR","errorMessage":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31595"},{"text":"%spark.pyspark\ntransformedTest = fittedPipeline.transform(testDataFrame)","user":"anonymous","dateUpdated":"2022-03-20T06:05:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1647755105533_-963062808","id":"20220320-054505_1052269107","dateCreated":"2022-03-20T05:45:05+0000","dateStarted":"2022-03-20T06:05:33+0000","dateFinished":"2022-03-20T06:05:33+0000","status":"ERROR","errorMessage":"java.net.ConnectException: Connection refused (Connection refused)\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n\tat java.net.Socket.connect(Socket.java:589)\n\tat org.apache.thrift.transport.TSocket.open(TSocket.java:182)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:51)\n\tat org.apache.zeppelin.interpreter.remote.ClientFactory.create(ClientFactory.java:37)\n\tat org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:60)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:861)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:435)\n\tat org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.getClient(RemoteInterpreterProcess.java:62)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterProcess.callRemoteFunction(RemoteInterpreterProcess.java:133)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:228)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:437)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:307)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n","progressUpdateIntervalMs":500,"$$hashKey":"object:31596"},{"text":"%md\n## 저수준 API\n- 스파크의 <strong>거의 모든 기능은 RDD 기반</strong>으로 만들어짐\n    - DataFrame 연산도 RDD 기반으로 만들어졌고, 매우 효율적인 분산 처리를 위해 저수준 명령으로 컴파일됨\n- RDD를 이용하면 파티션과 같은 <strong>물리적 실행 특성을 결정</strong>할 수 있다는 장점이 있음\n    - 구조적 API보다 더 세밀한 제어 가능(근데 대부분은 구조적 API를 사용하는게 좋음)\n    - 메모리에 저장된 원시 데이터를 병렬처리하는 데 RDD 사용\n    - 비정형 데이터나 정제되지 않은 원시 데이터를 처리해야 한다면 RDD를 사용해야함\n- 스칼라와 파이썬의 RDD는 동일하지 않음\n    - DataFrame API는 언어와 관계없이 동일한 실행 특성이지만 RDD는 그렇지 않음","user":"anonymous","dateUpdated":"2022-03-20T06:11:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>저수준 API</h2>\n<ul>\n  <li>스파크의 <strong>거의 모든 기능은 RDD 기반</strong>으로 만들어짐\n    <ul>\n      <li>DataFrame 연산도 RDD 기반으로 만들어졌고, 매우 효율적인 분산 처리를 위해 저수준 명령으로 컴파일됨</li>\n    </ul>\n  </li>\n  <li>RDD를 이용하면 파티션과 같은 <strong>물리적 실행 특성을 결정</strong>할 수 있다는 장점이 있음\n    <ul>\n      <li>구조적 API보다 더 세밀한 제어 가능(근데 대부분은 구조적 API를 사용하는게 좋음)</li>\n      <li>메모리에 저장된 원시 데이터를 병렬처리하는 데 RDD 사용</li>\n      <li>비정형 데이터나 정제되지 않은 원시 데이터를 처리해야 한다면 RDD를 사용해야함</li>\n    </ul>\n  </li>\n  <li>스칼라와 파이썬의 RDD는 동일하지 않음\n    <ul>\n      <li>DataFrame API는 언어와 관계없이 동일한 실행 특성이지만 RDD는 그렇지 않음</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1647755103132_48273251","id":"20220320-054503_1596927090","dateCreated":"2022-03-20T05:45:03+0000","dateStarted":"2022-03-20T06:11:34+0000","dateFinished":"2022-03-20T06:11:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31597"},{"text":"%md\n* 간단한 숫자를 병렬화해 RDD를 생성한 뒤 DataFrame으로 변환하는 예제","user":"anonymous","dateUpdated":"2022-03-20T06:10:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647756579154_836871669","id":"20220320-060939_1128472080","dateCreated":"2022-03-20T06:09:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:40048","dateFinished":"2022-03-20T06:10:01+0000","dateStarted":"2022-03-20T06:10:01+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>간단한 숫자를 병렬화해 RDD를 생성한 뒤 DataFrame으로 변환하는 예제</li>\n</ul>\n</div>"}]}},{"text":"// 스칼라\nspark.sparkContext.parallelize(Seq(1, 2, 3)).toDF()","user":"anonymous","dateUpdated":"2022-03-20T06:07:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res5: org.apache.spark.sql.DataFrame = [value: int]\n"}]},"apps":[],"jobName":"paragraph_1647756371564_-1172223649","id":"20220320-060611_704572993","dateCreated":"2022-03-20T06:06:11+0000","dateStarted":"2022-03-20T06:07:09+0000","dateFinished":"2022-03-20T06:07:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31598"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1647756389683_-1021740077","id":"20220320-060629_343911238","dateCreated":"2022-03-20T06:06:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:31599","text":"%spark.pyspark\nfrom pyspark.sql import Row\nspark.sparkContext.parallelize([Row(1), Row(2), Row(3)]).toDF()","dateUpdated":"2022-03-20T06:07:26+0000","dateFinished":"2022-03-20T06:07:28+0000","dateStarted":"2022-03-20T06:07:26+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[_1: bigint]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=0","http://0927a691e26f:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}}}],"name":"Chapter3","id":"2GWUVHHAG","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}