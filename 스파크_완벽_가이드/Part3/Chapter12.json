{"paragraphs":[{"text":"%sh\n# For prevent crash with other note's execution,\n# I recommend to restart spark interpreter.\ncurl -X PUT http://localhost:8080/api/interpreter/setting/restart/spark","user":"anonymous","dateUpdated":"2022-05-01T13:17:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0\r100  3988  100  3988    0     0   1428      0  0:00:02  0:00:02 --:--:--  1428\n{\"status\":\"OK\",\"message\":\"\",\"body\":{\"id\":\"spark\",\"name\":\"spark\",\"group\":\"spark\",\"properties\":{\"zeppelin.spark.concurrentSQL\":{\"name\":\"zeppelin.spark.concurrentSQL\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.R.knitr\":{\"name\":\"zeppelin.R.knitr\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.R.cmd\":{\"name\":\"zeppelin.R.cmd\",\"value\":\"R\",\"type\":\"string\"},\"zeppelin.R.image.width\":{\"name\":\"zeppelin.R.image.width\",\"value\":\"100%\",\"type\":\"number\"},\"zeppelin.spark.importImplicit\":{\"name\":\"zeppelin.spark.importImplicit\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.dep.additionalRemoteRepository\":{\"name\":\"zeppelin.dep.additionalRemoteRepository\",\"value\":\"spark-packages,http://dl.bintray.com/spark-packages/maven,false;\",\"type\":\"textarea\"},\"zeppelin.dep.localrepo\":{\"name\":\"zeppelin.dep.localrepo\",\"value\":\"local-repo\",\"type\":\"string\"},\"zeppelin.spark.sql.stacktrace\":{\"name\":\"zeppelin.spark.sql.stacktrace\",\"value\":false,\"type\":\"checkbox\"},\"zeppelin.spark.useHiveContext\":{\"name\":\"zeppelin.spark.useHiveContext\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.printREPLOutput\":{\"name\":\"zeppelin.spark.printREPLOutput\",\"value\":true,\"type\":\"checkbox\"},\"spark.cores.max\":{\"name\":\"spark.cores.max\",\"value\":\"3\",\"type\":\"number\"},\"spark.executor.memory\":{\"name\":\"spark.executor.memory\",\"value\":\"2g\",\"type\":\"string\"},\"zeppelin.spark.sql.interpolation\":{\"name\":\"zeppelin.spark.sql.interpolation\",\"value\":false,\"type\":\"checkbox\"},\"spark.driver.memory\":{\"name\":\"spark.driver.memory\",\"value\":\"2g\",\"type\":\"textarea\"},\"spark.app.name\":{\"name\":\"spark.app.name\",\"value\":\"Zeppelin\",\"type\":\"string\"},\"zeppelin.spark.maxResult\":{\"name\":\"zeppelin.spark.maxResult\",\"value\":\"1000\",\"type\":\"number\"},\"master\":{\"name\":\"master\",\"value\":\"local[*]\",\"type\":\"string\"},\"zeppelin.pyspark.python\":{\"name\":\"zeppelin.pyspark.python\",\"value\":\"python\",\"type\":\"string\"},\"args\":{\"name\":\"args\",\"value\":\"\",\"type\":\"textarea\"},\"zeppelin.spark.enableSupportedVersionCheck\":{\"name\":\"zeppelin.spark.enableSupportedVersionCheck\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.useNew\":{\"name\":\"zeppelin.spark.useNew\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.pyspark.useIPython\":{\"name\":\"zeppelin.pyspark.useIPython\",\"value\":true,\"type\":\"checkbox\"},\"zeppelin.spark.uiWebUrl\":{\"name\":\"zeppelin.spark.uiWebUrl\",\"value\":\"\",\"type\":\"string\"},\"zeppelin.R.render.options\":{\"name\":\"zeppelin.R.render.options\",\"value\":\"out.format \\u003d \\u0027html\\u0027, comment \\u003d NA, echo \\u003d FALSE, results \\u003d \\u0027asis\\u0027, message \\u003d F, warning \\u003d F, fig.retina \\u003d 2\",\"type\":\"textarea\"},\"spark.jars\":{\"name\":\"spark.jars\",\"value\":\"/zeppelin/lib/sqlite-jdbc-3.23.1.jar\",\"type\":\"textarea\"}},\"status\":\"READY\",\"interpreterGroup\":[{\"name\":\"spark\",\"class\":\"org.apache.zeppelin.spark.SparkInterpreter\",\"defaultInterpreter\":true,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"sql\",\"class\":\"org.apache.zeppelin.spark.SparkSqlInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"sql\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"dep\",\"class\":\"org.apache.zeppelin.spark.DepInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"scala\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"pyspark\",\"class\":\"org.apache.zeppelin.spark.PySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionKey\":\"TAB\",\"completionSupport\":true}},{\"name\":\"ipyspark\",\"class\":\"org.apache.zeppelin.spark.IPySparkInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"python\",\"editOnDblClick\":false,\"completionSupport\":true}},{\"name\":\"r\",\"class\":\"org.apache.zeppelin.spark.SparkRInterpreter\",\"defaultInterpreter\":false,\"editor\":{\"language\":\"r\",\"editOnDblClick\":false,\"completionSupport\":false}}],\"dependencies\":[],\"option\":{\"remote\":true,\"port\":-1,\"perNote\":\"shared\",\"perUser\":\"shared\",\"isExistingProcess\":false,\"setPermission\":false,\"owners\":[],\"isUserImpersonate\":false}}}"}]},"apps":[],"jobName":"paragraph_1651239497825_1484000832","id":"20220429-133817_1552945454","dateCreated":"2022-04-29T13:38:17+0000","dateStarted":"2022-05-01T13:17:08+0000","dateFinished":"2022-05-01T13:17:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:54"},{"text":"%md\n### 12.1.2 저수준 API는 어떻게 사용할까","user":"anonymous","dateUpdated":"2022-05-01T13:17:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.1.2 저수준 API는 어떻게 사용할까</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241430279_1697782652","id":"20220429-141030_897991304","dateCreated":"2022-04-29T14:10:30+0000","dateStarted":"2022-05-01T13:17:11+0000","dateFinished":"2022-05-01T13:17:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:55"},{"text":"spark.sparkContext","user":"anonymous","dateUpdated":"2022-05-01T13:17:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res4: org.apache.spark.SparkContext = org.apache.spark.SparkContext@58ad7c66\n"}]},"apps":[],"jobName":"paragraph_1651240192260_1290006065","id":"20220429-134952_332460595","dateCreated":"2022-04-29T13:49:52+0000","dateStarted":"2022-05-01T13:17:11+0000","dateFinished":"2022-05-01T13:17:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:56"},{"text":"%pyspark\nspark.sparkContext","user":"anonymous","dateUpdated":"2022-05-01T13:17:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<SparkContext master=local[*] appName=Zeppelin>\n"}]},"apps":[],"jobName":"paragraph_1651240660284_-12414684","id":"20220429-135740_1918812584","dateCreated":"2022-04-29T13:57:40+0000","dateStarted":"2022-05-01T13:17:27+0000","dateFinished":"2022-05-01T13:17:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:57"},{"text":"%md\n## 12.3 RDD 생성하기","user":"anonymous","dateUpdated":"2022-05-01T13:17:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.3 RDD 생성하기</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1651383764262_612285041","id":"20220501-054244_1693155526","dateCreated":"2022-05-01T05:42:44+0000","dateStarted":"2022-05-01T13:17:29+0000","dateFinished":"2022-05-01T13:17:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:58"},{"text":"%md\n### 12.3.1 DataFrame, Dataset으로 RDD 생성하기","user":"anonymous","dateUpdated":"2022-05-01T13:17:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.3.1 DataFrame, Dataset으로 RDD 생성하기</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241421617_-1738556152","id":"20220429-141021_851959367","dateCreated":"2022-04-29T14:10:21+0000","dateStarted":"2022-05-01T13:17:29+0000","dateFinished":"2022-05-01T13:17:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:59"},{"text":"%md\n- Dataset은 자바와 스칼라에서만 사용 가능\n- Dataset[데이터 타입] -> RDD[데이터 타입]","user":"anonymous","dateUpdated":"2022-05-01T13:17:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Dataset은 자바와 스칼라에서만 사용 가능</li>\n  <li>Dataset[데이터 타입] -&gt; RDD[데이터 타입]</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651379753800_-59833326","id":"20220501-043553_774046831","dateCreated":"2022-05-01T04:35:53+0000","dateStarted":"2022-05-01T13:17:29+0000","dateFinished":"2022-05-01T13:17:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:60"},{"text":"spark.range(10)","user":"anonymous","dateUpdated":"2022-05-01T13:17:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res6: org.apache.spark.sql.Dataset[Long] = [id: bigint]\n"}]},"apps":[],"jobName":"paragraph_1651240672441_-1528747600","id":"20220429-135752_909011011","dateCreated":"2022-04-29T13:57:52+0000","dateStarted":"2022-05-01T13:17:29+0000","dateFinished":"2022-05-01T13:17:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:61"},{"text":"spark.range(10).show()","user":"anonymous","dateUpdated":"2022-05-01T13:17:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+\n| id|\n+---+\n|  0|\n|  1|\n|  2|\n|  3|\n|  4|\n|  5|\n|  6|\n|  7|\n|  8|\n|  9|\n+---+\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=0","http://0927a691e26f:4040/jobs/job?id=1","http://0927a691e26f:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651241291025_1572996933","id":"20220429-140811_1645163052","dateCreated":"2022-04-29T14:08:11+0000","dateStarted":"2022-05-01T13:17:31+0000","dateFinished":"2022-05-01T13:17:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:62"},{"text":"spark.range(10).rdd","user":"anonymous","dateUpdated":"2022-05-01T13:17:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res10: org.apache.spark.rdd.RDD[Long] = MapPartitionsRDD[9] at rdd at <console>:24\n"}]},"apps":[],"jobName":"paragraph_1651241217052_1164487820","id":"20220429-140657_1977619330","dateCreated":"2022-04-29T14:06:57+0000","dateStarted":"2022-05-01T13:17:34+0000","dateFinished":"2022-05-01T13:17:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:63"},{"text":"spark.range(10).rdd.show()","user":"anonymous","dateUpdated":"2022-05-01T13:17:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:24: error: value show is not a member of org.apache.spark.rdd.RDD[Long]\n       spark.range(10).rdd.show()\n                           ^\n"}]},"apps":[],"jobName":"paragraph_1651241285032_-1464962184","id":"20220429-140805_625325349","dateCreated":"2022-04-29T14:08:05+0000","dateStarted":"2022-05-01T13:17:35+0000","dateFinished":"2022-05-01T13:17:35+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:64"},{"text":"%md\n- python에서는 DataFrame만 존재하여 Row 타입의 RDD를 얻게 됨","user":"anonymous","dateUpdated":"2022-05-01T04:36:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>python에서는 DataFrame만 존재하여 Row 타입의 RDD를 얻게 됨</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651379758539_1903761427","id":"20220501-043558_1908661033","dateCreated":"2022-05-01T04:35:58+0000","dateStarted":"2022-05-01T04:36:46+0000","dateFinished":"2022-05-01T04:36:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:65"},{"text":"%spark.pyspark\nspark.range(10)","user":"anonymous","dateUpdated":"2022-05-01T05:34:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DataFrame[id: bigint]\n"}]},"apps":[],"jobName":"paragraph_1651241223806_2032126405","id":"20220429-140703_1450725758","dateCreated":"2022-04-29T14:07:03+0000","dateStarted":"2022-05-01T05:34:59+0000","dateFinished":"2022-05-01T05:34:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:66"},{"text":"%spark.pyspark\nspark.range(10).rdd","user":"anonymous","dateUpdated":"2022-05-01T05:35:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"MapPartitionsRDD[14] at javaToPython at NativeMethodAccessorImpl.java:0\n"}]},"apps":[],"jobName":"paragraph_1651241238163_323471733","id":"20220429-140718_999681301","dateCreated":"2022-04-29T14:07:18+0000","dateStarted":"2022-05-01T05:35:00+0000","dateFinished":"2022-05-01T05:35:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67"},{"text":"%md\n- Row 객체를 올바른 데이터 타입으로 변환하거나, Row 객체에서 값을 추출해야함\n- Row 타입을 가진 RDD가 반환됨","user":"anonymous","dateUpdated":"2022-05-01T04:39:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Row 객체를 올바른 데이터 타입으로 변환하거나, Row 객체에서 값을 추출해야함</li>\n  <li>Row 타입을 가진 RDD가 반환됨</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651379887094_19080793","id":"20220501-043807_1915019230","dateCreated":"2022-05-01T04:38:07+0000","dateStarted":"2022-05-01T04:39:37+0000","dateFinished":"2022-05-01T04:39:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:68"},{"text":"spark.range(10).toDF().rdd.map(rowObject => rowObject.getLong(0))","user":"anonymous","dateUpdated":"2022-05-01T05:35:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res13: org.apache.spark.rdd.RDD[Long] = MapPartitionsRDD[20] at map at <console>:24\n"}]},"apps":[],"jobName":"paragraph_1651241324677_1035077547","id":"20220429-140844_155251042","dateCreated":"2022-04-29T14:08:44+0000","dateStarted":"2022-05-01T05:35:03+0000","dateFinished":"2022-05-01T05:35:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:69"},{"text":"%spark.pyspark\nspark.range(10).toDF(\"id\").rdd.map(lambda row: row[0])","user":"anonymous","dateUpdated":"2022-05-01T05:35:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"PythonRDD[26] at RDD at PythonRDD.scala:52\n"}]},"apps":[],"jobName":"paragraph_1651241245939_995522373","id":"20220429-140725_152654599","dateCreated":"2022-04-29T14:07:25+0000","dateStarted":"2022-05-01T05:35:04+0000","dateFinished":"2022-05-01T05:35:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:70"},{"text":"%md\n- toDF() : RDD를 사용해서 DataFrame이나 Dataset 생성할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T04:42:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>toDF() : RDD를 사용해서 DataFrame이나 Dataset 생성할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241407787_1134198939","id":"20220429-141007_2129102430","dateCreated":"2022-04-29T14:10:07+0000","dateStarted":"2022-05-01T04:42:19+0000","dateFinished":"2022-05-01T04:42:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:71"},{"text":"spark.range(10).rdd.toDF()","user":"anonymous","dateUpdated":"2022-05-01T05:35:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res15: org.apache.spark.sql.DataFrame = [value: bigint]\n"}]},"apps":[],"jobName":"paragraph_1651241350766_120450482","id":"20220429-140910_1066548213","dateCreated":"2022-04-29T14:09:10+0000","dateStarted":"2022-05-01T05:35:06+0000","dateFinished":"2022-05-01T05:35:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:72"},{"text":"spark.range(10).rdd.toDF()","user":"anonymous","dateUpdated":"2022-05-01T05:35:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res17: org.apache.spark.sql.DataFrame = [value: bigint]\n"}]},"apps":[],"jobName":"paragraph_1651241389243_-1569048803","id":"20220429-140949_349565852","dateCreated":"2022-04-29T14:09:49+0000","dateStarted":"2022-05-01T05:35:08+0000","dateFinished":"2022-05-01T05:35:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:73"},{"text":"%md\n- rdd 메서드는 Row 타입을 가진 RDD를 생성함\n    - Row 타입은 스파크가 구조적 API에서 데이터를 표현하는데 사용하는 내부 카탈리스트 포맷\n    - 이 기능을 사용하면 구조적 API와 저수준 API 사이를 오고가게 만들 수 있음","user":"anonymous","dateUpdated":"2022-05-01T04:42:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>rdd 메서드는 Row 타입을 가진 RDD를 생성함\n    <ul>\n      <li>Row 타입은 스파크가 구조적 API에서 데이터를 표현하는데 사용하는 내부 카탈리스트 포맷</li>\n      <li>이 기능을 사용하면 구조적 API와 저수준 API 사이를 오고가게 만들 수 있음</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651380141709_933956886","id":"20220501-044221_329749900","dateCreated":"2022-05-01T04:42:21+0000","dateStarted":"2022-05-01T04:42:23+0000","dateFinished":"2022-05-01T04:42:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:74"},{"text":"%md\n### 12.3.2 로컬 컬렉션으로 RDD 생성하기\n- SparkSession 안에 있는 컬렉션 객체를 RDD를 만들려면 sparkContext의 parallelize 메서드 호출\n    - 단일 노드에 있는 컬렉션을 병렬 컬렉션으로 전환함","user":"anonymous","dateUpdated":"2022-05-01T05:30:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.3.2 로컬 컬렉션으로 RDD 생성하기</h3>\n<ul>\n  <li>SparkSession 안에 있는 컬렉션 객체를 RDD를 만들려면 sparkContext의 parallelize 메서드 호출\n    <ul>\n      <li>단일 노드에 있는 컬렉션을 병렬 컬렉션으로 전환함</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241405988_748708877","id":"20220429-141005_652215318","dateCreated":"2022-04-29T14:10:05+0000","dateStarted":"2022-05-01T05:30:14+0000","dateFinished":"2022-05-01T05:30:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:75"},{"text":"val myCollection = \"Spark The Definitive Guide : Big Data Processing Made Simple\".split(\" \")\nval words = spark.sparkContext.parallelize(myCollection, 2)","user":"anonymous","dateUpdated":"2022-05-01T05:35:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myCollection: Array[String] = Array(Spark, The, Definitive, Guide, :, Big, Data, Processing, Made, Simple)\nwords: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[37] at parallelize at <console>:25\n"}]},"apps":[],"jobName":"paragraph_1651241524553_-2042075155","id":"20220429-141204_1029831677","dateCreated":"2022-04-29T14:12:04+0000","dateStarted":"2022-05-01T05:35:11+0000","dateFinished":"2022-05-01T05:35:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:76"},{"text":"%spark.pyspark\nmyCollection = \"Spark The Definitive Guide : Big Data Processing Made Simple\".split(\" \")\nwords = spark.sparkContext.parallelize(myCollection, 2)","user":"anonymous","dateUpdated":"2022-05-01T12:18:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651241544672_1506623911","id":"20220429-141224_1104089809","dateCreated":"2022-04-29T14:12:24+0000","dateStarted":"2022-05-01T12:18:49+0000","dateFinished":"2022-05-01T12:18:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:77"},{"text":"words","user":"anonymous","dateUpdated":"2022-05-01T05:35:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res20: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[37] at parallelize at <console>:25\n"}]},"apps":[],"jobName":"paragraph_1651383236296_-2008717736","id":"20220501-053356_1215716166","dateCreated":"2022-05-01T05:33:56+0000","dateStarted":"2022-05-01T05:35:23+0000","dateFinished":"2022-05-01T05:35:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:78"},{"text":"words.setName(\"myWords\")\nwords.name","user":"anonymous","dateUpdated":"2022-05-01T05:35:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res22: words.type = myWords ParallelCollectionRDD[37] at parallelize at <console>:25\nres23: String = myWords\n"}]},"apps":[],"jobName":"paragraph_1651241601864_142251797","id":"20220429-141321_290147967","dateCreated":"2022-04-29T14:13:21+0000","dateStarted":"2022-05-01T05:35:26+0000","dateFinished":"2022-05-01T05:35:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:79"},{"text":"words","user":"anonymous","dateUpdated":"2022-05-01T05:35:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res25: org.apache.spark.rdd.RDD[String] = myWords ParallelCollectionRDD[37] at parallelize at <console>:25\n"}]},"apps":[],"jobName":"paragraph_1651383229067_-1512212095","id":"20220501-053349_242314239","dateCreated":"2022-05-01T05:33:49+0000","dateStarted":"2022-05-01T05:35:27+0000","dateFinished":"2022-05-01T05:35:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:80"},{"text":"%spark.pyspark\nwords","user":"anonymous","dateUpdated":"2022-05-01T05:35:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ParallelCollectionRDD[38] at parallelize at PythonRDD.scala:194\n"}]},"apps":[],"jobName":"paragraph_1651383242616_1664889129","id":"20220501-053402_584213037","dateCreated":"2022-05-01T05:34:02+0000","dateStarted":"2022-05-01T05:35:33+0000","dateFinished":"2022-05-01T05:35:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:81"},{"text":"%spark.pyspark\nwords.setName(\"myWords\")\nwords.name()","user":"anonymous","dateUpdated":"2022-05-01T12:18:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'myWords'\n"}]},"apps":[],"jobName":"paragraph_1651241633095_-96769618","id":"20220429-141353_1610203535","dateCreated":"2022-04-29T14:13:53+0000","dateStarted":"2022-05-01T12:18:56+0000","dateFinished":"2022-05-01T12:18:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:82"},{"text":"%spark.pyspark\nwords","user":"anonymous","dateUpdated":"2022-05-01T05:35:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myWords ParallelCollectionRDD[38] at parallelize at PythonRDD.scala:194\n"}]},"apps":[],"jobName":"paragraph_1651383231104_1953253356","id":"20220501-053351_1782741222","dateCreated":"2022-05-01T05:33:51+0000","dateStarted":"2022-05-01T05:35:36+0000","dateFinished":"2022-05-01T05:35:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:83"},{"text":"%md\n### 12.3.3 데이터소스로 RDD 생성하기\n- RDD를 직접 생성하기보다는 DataFrame이 제공하는 DataSource API를 사용하는 것이 바람직함\n- RDD에는 DataSource API 개념이 없음. RDD는 주로 RDD 간의 의존성 구조와 파티션 목록을 정의함.\n- sparkContext를 사용해 데이터를 RDD로 읽을 수 있음","user":"anonymous","dateUpdated":"2022-05-01T05:39:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.3.3 데이터소스로 RDD 생성하기</h3>\n<ul>\n  <li>RDD를 직접 생성하기보다는 DataFrame이 제공하는 DataSource API를 사용하는 것이 바람직함</li>\n  <li>RDD에는 DataSource API 개념이 없음. RDD는 주로 RDD 간의 의존성 구조와 파티션 목록을 정의함.</li>\n  <li>sparkContext를 사용해 데이터를 RDD로 읽을 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241661828_1314691824","id":"20220429-141421_872874853","dateCreated":"2022-04-29T14:14:21+0000","dateStarted":"2022-05-01T05:39:57+0000","dateFinished":"2022-05-01T05:39:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:84"},{"text":"// 줄 단위로 텍스트 파일 읽기\nspark.sparkContext.textFile(\"/some/path/withTextFiles\")","user":"anonymous","dateUpdated":"2022-05-01T05:40:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res27: org.apache.spark.rdd.RDD[String] = /some/path/withTextFiles MapPartitionsRDD[40] at textFile at <console>:24\n"}]},"apps":[],"jobName":"paragraph_1651241678948_-590278130","id":"20220429-141438_106135522","dateCreated":"2022-04-29T14:14:38+0000","dateStarted":"2022-05-01T05:40:08+0000","dateFinished":"2022-05-01T05:40:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:85"},{"text":"// 여러 텍스트 파일의 각 줄을 레코드로 가진 RDD를 생성\nspark.sparkContext.wholeTextFiles(\"/some/path/withTextFiles\")","user":"anonymous","dateUpdated":"2022-05-01T05:41:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res30: org.apache.spark.rdd.RDD[(String, String)] = /some/path/withTextFiles MapPartitionsRDD[42] at wholeTextFiles at <console>:26\n"}]},"apps":[],"jobName":"paragraph_1651241700054_1878913872","id":"20220429-141500_2035876995","dateCreated":"2022-04-29T14:15:00+0000","dateStarted":"2022-05-01T05:41:54+0000","dateFinished":"2022-05-01T05:41:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:86"},{"text":"%spark.pyspark\nspark.sparkContext.textFile('/FileStore/tables/withTextFiles')","user":"anonymous","dateUpdated":"2022-05-01T05:42:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"/FileStore/tables/withTextFiles MapPartitionsRDD[44] at textFile at NativeMethodAccessorImpl.java:0\n"}]},"apps":[],"jobName":"paragraph_1651241718091_-2111688435","id":"20220429-141518_709636479","dateCreated":"2022-04-29T14:15:18+0000","dateStarted":"2022-05-01T05:42:05+0000","dateFinished":"2022-05-01T05:42:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:87"},{"text":"%spark.pyspark\nspark.sparkContext.wholeTextFiles('/FileStore/tables/withTextFiles')","user":"anonymous","dateUpdated":"2022-05-01T05:42:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"org.apache.spark.api.java.JavaPairRDD@66c3764a\n"}]},"apps":[],"jobName":"paragraph_1651241726203_-1036347708","id":"20220429-141526_1613399469","dateCreated":"2022-04-29T14:15:26+0000","dateStarted":"2022-05-01T05:42:06+0000","dateFinished":"2022-05-01T05:42:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:88"},{"text":"%md\n## 12.4 RDD 다루기\n- DataFrame을 다루는 방식과 매우 유사하나 아래와 같은 차이점이 있음\n    - 스파크 데이터 타입 대신 자바나 스칼라의 객체를 다룸\n    - DataFrame에 비해 연산을 단순화하는 헬퍼 메서드나 함수가 부족함\n        - 필터, 맵 함수, 집계 등 함수를 사용자가 직접 정의해야함","user":"anonymous","dateUpdated":"2022-05-01T05:45:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.4 RDD 다루기</h2>\n<ul>\n  <li>DataFrame을 다루는 방식과 매우 유사하나 아래와 같은 차이점이 있음\n    <ul>\n      <li>스파크 데이터 타입 대신 자바나 스칼라의 객체를 다룸</li>\n      <li>DataFrame에 비해 연산을 단순화하는 헬퍼 메서드나 함수가 부족함\n        <ul>\n          <li>필터, 맵 함수, 집계 등 함수를 사용자가 직접 정의해야함</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651383811996_-1462343543","id":"20220501-054331_981541396","dateCreated":"2022-05-01T05:43:31+0000","dateStarted":"2022-05-01T05:45:06+0000","dateFinished":"2022-05-01T05:45:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:89"},{"text":"%md\n## 12.5 트랜스포메이션\n- 대부분은 구조적 API에서 사용할 수 있는 기능을 가지고 있음\n- DataFrame이나 Dataset과 동일하게 RDD에 트랜스포메이션을 지정해 새로운 RDD를 생성할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T05:46:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.5 트랜스포메이션</h2>\n<ul>\n  <li>대부분은 구조적 API에서 사용할 수 있는 기능을 가지고 있음</li>\n  <li>DataFrame이나 Dataset과 동일하게 RDD에 트랜스포메이션을 지정해 새로운 RDD를 생성할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241739280_-393512620","id":"20220429-141539_651937433","dateCreated":"2022-04-29T14:15:39+0000","dateStarted":"2022-05-01T05:46:19+0000","dateFinished":"2022-05-01T05:46:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:90"},{"text":"words.collect()","user":"anonymous","dateUpdated":"2022-05-01T05:47:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res39: Array[String] = Array(Spark, The, Definitive, Guide, :, Big, Data, Processing, Made, Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=7"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651384022710_168994985","id":"20220501-054702_43004420","dateCreated":"2022-05-01T05:47:02+0000","dateStarted":"2022-05-01T05:47:16+0000","dateFinished":"2022-05-01T05:47:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:91"},{"text":"%spark.pyspark\nwords.collect()","user":"anonymous","dateUpdated":"2022-05-01T05:47:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Spark', 'The', 'Definitive', 'Guide', ':', 'Big', 'Data', 'Processing', 'Made', 'Simple']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=8"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651384042962_916498282","id":"20220501-054722_1444050752","dateCreated":"2022-05-01T05:47:22+0000","dateStarted":"2022-05-01T05:47:30+0000","dateFinished":"2022-05-01T05:47:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:92"},{"text":"%md\n### 12.5.1 distinct","user":"anonymous","dateUpdated":"2022-04-29T14:17:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.5.1 distinct</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241769282_-437312023","id":"20220429-141609_57884445","dateCreated":"2022-04-29T14:16:09+0000","dateStarted":"2022-04-29T14:17:50+0000","dateFinished":"2022-04-29T14:17:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:93"},{"text":"words.distinct().count()","user":"anonymous","dateUpdated":"2022-05-01T05:46:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res34: Long = 10\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=5"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651241912196_-213930328","id":"20220429-141832_372514573","dateCreated":"2022-04-29T14:18:32+0000","dateStarted":"2022-05-01T05:46:41+0000","dateFinished":"2022-05-01T05:46:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:94"},{"text":"%spark.pyspark\nwords.distinct().count()","user":"anonymous","dateUpdated":"2022-05-01T05:46:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=6"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651241927358_840513538","id":"20220429-141847_1108526560","dateCreated":"2022-04-29T14:18:47+0000","dateStarted":"2022-05-01T05:46:45+0000","dateFinished":"2022-05-01T05:46:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:95"},{"text":"%md\n### 12.5.2 filter","user":"anonymous","dateUpdated":"2022-04-29T14:18:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.5.2 filter</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651241872201_1346607853","id":"20220429-141752_501036063","dateCreated":"2022-04-29T14:17:52+0000","dateStarted":"2022-04-29T14:18:25+0000","dateFinished":"2022-04-29T14:18:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:96"},{"text":"def startsWithS(individual:String) = {\n  individual.startsWith(\"S\")\n}\n\nwords.filter(word => startsWithS(word)).collect()","user":"anonymous","dateUpdated":"2022-05-01T05:48:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"startsWithS: (individual: String)Boolean\nres41: Array[String] = Array(Spark, Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=9"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651241949501_1760062429","id":"20220429-141909_1716088803","dateCreated":"2022-04-29T14:19:09+0000","dateStarted":"2022-05-01T05:48:29+0000","dateFinished":"2022-05-01T05:48:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:97"},{"text":"%spark.pyspark\ndef startsWithS(individual):\n  return individual.startswith(\"S\")\n\nwords.filter(lambda word: startsWithS(word)).collect()","user":"anonymous","dateUpdated":"2022-05-01T05:48:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Spark', 'Simple']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651241967820_518473222","id":"20220429-141927_183987201","dateCreated":"2022-04-29T14:19:27+0000","dateStarted":"2022-05-01T05:48:30+0000","dateFinished":"2022-05-01T05:48:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:98"},{"text":"%md\n- Dataset API처럼 사용한 언어의 데이터 타입으로 반환함\n    - 데이터를 Row 타입으로 강제 변환하거나 데이터를 수집한 다음 변환할 필요가 없기 때문","user":"anonymous","dateUpdated":"2022-05-01T05:50:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Dataset API처럼 사용한 언어의 데이터 타입으로 반환함\n    <ul>\n      <li>데이터를 Row 타입으로 강제 변환하거나 데이터를 수집한 다음 변환할 필요가 없기 때문</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651384173207_-988273061","id":"20220501-054933_2103062045","dateCreated":"2022-05-01T05:49:33+0000","dateStarted":"2022-05-01T05:50:34+0000","dateFinished":"2022-05-01T05:50:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:99"},{"text":"%md\n### 12.5.3 map\n- 주어진 입력을 원하는 값으로 반환하는 함수를 명시하고 레코드별로 적용함","user":"anonymous","dateUpdated":"2022-05-01T05:51:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.5.3 map</h3>\n<ul>\n  <li>주어진 입력을 원하는 값으로 반환하는 함수를 명시하고 레코드별로 적용함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651384236878_564668145","id":"20220501-055036_1166679335","dateCreated":"2022-05-01T05:50:36+0000","dateStarted":"2022-05-01T05:51:26+0000","dateFinished":"2022-05-01T05:51:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:100"},{"text":"val words2 = words.map(word => (word, word(0), word.startsWith(\"S\")))","user":"anonymous","dateUpdated":"2022-05-01T05:54:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"words2: org.apache.spark.rdd.RDD[(String, Char, Boolean)] = MapPartitionsRDD[68] at map at <console>:27\n"}]},"apps":[],"jobName":"paragraph_1651242116643_828873619","id":"20220429-142156_276194686","dateCreated":"2022-04-29T14:21:56+0000","dateStarted":"2022-05-01T05:54:42+0000","dateFinished":"2022-05-01T05:54:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:101"},{"text":"words2.collect()","user":"anonymous","dateUpdated":"2022-05-01T05:54:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res47: Array[(String, Char, Boolean)] = Array((Spark,S,true), (The,T,false), (Definitive,D,false), (Guide,G,false), (:,:,false), (Big,B,false), (Data,D,false), (Processing,P,false), (Made,M,false), (Simple,S,true))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=14"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651384489798_121626112","id":"20220501-055449_1699572933","dateCreated":"2022-05-01T05:54:49+0000","dateStarted":"2022-05-01T05:54:54+0000","dateFinished":"2022-05-01T05:54:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:102"},{"text":"%spark.pyspark\nwords2 = words.map(lambda word: (word, word[0], word.startswith(\"S\")))","user":"anonymous","dateUpdated":"2022-05-01T05:55:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651242139483_2054050781","id":"20220429-142219_862292981","dateCreated":"2022-04-29T14:22:19+0000","dateStarted":"2022-05-01T05:55:00+0000","dateFinished":"2022-05-01T05:55:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:103"},{"text":"%spark.pyspark\nwords2.collect()","user":"anonymous","dateUpdated":"2022-05-01T05:55:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('Spark', 'S', True), ('The', 'T', False), ('Definitive', 'D', False), ('Guide', 'G', False), (':', ':', False), ('Big', 'B', False), ('Data', 'D', False), ('Processing', 'P', False), ('Made', 'M', False), ('Simple', 'S', True)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=15"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651242159156_285158136","id":"20220429-142239_787275958","dateCreated":"2022-04-29T14:22:39+0000","dateStarted":"2022-05-01T05:55:05+0000","dateFinished":"2022-05-01T05:55:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:104"},{"text":"words2.filter(record => record._3).take(5)","user":"anonymous","dateUpdated":"2022-05-01T05:55:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res49: Array[(String, Char, Boolean)] = Array((Spark,S,true), (Simple,S,true))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=16","http://0927a691e26f:4040/jobs/job?id=17"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651242214803_1559919849","id":"20220429-142334_630666188","dateCreated":"2022-04-29T14:23:34+0000","dateStarted":"2022-05-01T05:55:42+0000","dateFinished":"2022-05-01T05:55:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:105"},{"text":"%spark.pyspark\nwords2.filter(lambda record: record[2]).take(5)","user":"anonymous","dateUpdated":"2022-05-01T05:55:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('Spark', 'S', True), ('Simple', 'S', True)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=18","http://0927a691e26f:4040/jobs/job?id=19"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651242209746_-1724399280","id":"20220429-142329_1699781492","dateCreated":"2022-04-29T14:23:29+0000","dateStarted":"2022-05-01T05:55:44+0000","dateFinished":"2022-05-01T05:55:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:106"},{"text":"%md\n#### flapMap\n- map 함수의 확장 버전\n- map 함수의 출력을 반복 처리할 수 있는 형태로 반환\n- ex) 단일 로우를 여러 로우로 변환해야하는 경우\n    - flatMap 메서드로 단어를 문자 집합으로 변환\n    - 각 단어는 여러 문자로 구성되어 있으므로 flatMap 메서드를 사용해 다수의 로우로 변환 가능","user":"anonymous","dateUpdated":"2022-05-01T06:00:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>flapMap</h4>\n<ul>\n  <li>map 함수의 확장 버전</li>\n  <li>map 함수의 출력을 반복 처리할 수 있는 형태로 반환</li>\n  <li>ex) 단일 로우를 여러 로우로 변환해야하는 경우\n    <ul>\n      <li>flatMap 메서드로 단어를 문자 집합으로 변환</li>\n      <li>각 단어는 여러 문자로 구성되어 있으므로 flatMap 메서드를 사용해 다수의 로우로 변환 가능</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651384326672_-1104983774","id":"20220501-055206_950736696","dateCreated":"2022-05-01T05:52:06+0000","dateStarted":"2022-05-01T06:00:07+0000","dateFinished":"2022-05-01T06:00:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:107"},{"text":"words.flatMap(word => word.toSeq).take(5)","user":"anonymous","dateUpdated":"2022-05-01T06:00:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res51: Array[Char] = Array(S, p, a, r, k)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=20"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651242346236_14971677","id":"20220429-142546_1194133752","dateCreated":"2022-04-29T14:25:46+0000","dateStarted":"2022-05-01T06:00:18+0000","dateFinished":"2022-05-01T06:00:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:108"},{"text":"%spark.pyspark\nwords.flatMap(lambda word: list(word)).take(5)","user":"anonymous","dateUpdated":"2022-05-01T06:00:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['S', 'p', 'a', 'r', 'k']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=21"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651241625177_817410865","id":"20220429-141345_857775971","dateCreated":"2022-04-29T14:13:45+0000","dateStarted":"2022-05-01T06:00:19+0000","dateFinished":"2022-05-01T06:00:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:109"},{"text":"%md\n### 12.5.4 sortBy\n- 다른 RDD 작업과 마찬가지로 함수를 지정해 RDD의 데이터 객체에서 값을 추출한 다음 정렬","user":"anonymous","dateUpdated":"2022-05-01T06:01:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.5.4 sortBy</h3>\n<ul>\n  <li>다른 RDD 작업과 마찬가지로 함수를 지정해 RDD의 데이터 객체에서 값을 추출한 다음 정렬</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651384348114_-416081471","id":"20220501-055228_1337476850","dateCreated":"2022-05-01T05:52:28+0000","dateStarted":"2022-05-01T06:01:17+0000","dateFinished":"2022-05-01T06:01:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:110"},{"text":"// 단어 길이가 가장 긴 것부터\nwords.sortBy(word => word.length() * -1).take(100)","user":"anonymous","dateUpdated":"2022-05-01T06:01:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res53: Array[String] = Array(Definitive, Processing, Simple, Spark, Guide, Data, Made, The, Big, :)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=22","http://0927a691e26f:4040/jobs/job?id=23","http://0927a691e26f:4040/jobs/job?id=24"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651242357706_-363695862","id":"20220429-142557_1874141563","dateCreated":"2022-04-29T14:25:57+0000","dateStarted":"2022-05-01T06:01:20+0000","dateFinished":"2022-05-01T06:01:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:111"},{"text":"%spark.pyspark\n# 단어 길이가 가장 긴 것부터\nwords.sortBy(lambda word: len(word) * -1).take(100)","user":"anonymous","dateUpdated":"2022-05-01T06:02:02+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Definitive', 'Processing', 'Simple', 'Spark', 'Guide', 'Data', 'Made', 'The', 'Big', ':']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=29","http://0927a691e26f:4040/jobs/job?id=30","http://0927a691e26f:4040/jobs/job?id=31","http://0927a691e26f:4040/jobs/job?id=32"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651242702610_2005754077","id":"20220429-143142_2072509808","dateCreated":"2022-04-29T14:31:42+0000","dateStarted":"2022-05-01T06:02:01+0000","dateFinished":"2022-05-01T06:02:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:112"},{"text":"%md\n### 12.5.5 randomSplit\n- RDD를 임의로 분할해 배열을 만들 때 사용\n- 가중치와 random seed로 구성된 배열을 파라미터로 사용","user":"anonymous","dateUpdated":"2022-05-01T06:02:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.5.5 randomSplit</h3>\n<ul>\n  <li>RDD를 임의로 분할해 배열을 만들 때 사용</li>\n  <li>가중치와 random seed로 구성된 배열을 파라미터로 사용</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651384386041_126312238","id":"20220501-055306_801033432","dateCreated":"2022-05-01T05:53:06+0000","dateStarted":"2022-05-01T06:02:48+0000","dateFinished":"2022-05-01T06:02:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:113"},{"text":"val fiftyFiftySplit = words.randomSplit(Array[Double](0.5, 0.5))","user":"anonymous","dateUpdated":"2022-05-01T06:02:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"fiftyFiftySplit: Array[org.apache.spark.rdd.RDD[String]] = Array(MapPartitionsRDD[96] at randomSplit at <console>:27, MapPartitionsRDD[97] at randomSplit at <console>:27)\n"}]},"apps":[],"jobName":"paragraph_1651242753290_-1395761763","id":"20220429-143233_1197179836","dateCreated":"2022-04-29T14:32:33+0000","dateStarted":"2022-05-01T06:02:53+0000","dateFinished":"2022-05-01T06:02:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:114"},{"text":"fiftyFiftySplit","user":"anonymous","dateUpdated":"2022-05-01T06:03:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res59: Array[org.apache.spark.rdd.RDD[String]] = Array(MapPartitionsRDD[96] at randomSplit at <console>:27, MapPartitionsRDD[97] at randomSplit at <console>:27)\n"}]},"apps":[],"jobName":"paragraph_1651384978785_615648565","id":"20220501-060258_2064411809","dateCreated":"2022-05-01T06:02:58+0000","dateStarted":"2022-05-01T06:03:10+0000","dateFinished":"2022-05-01T06:03:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:115"},{"text":"fiftyFiftySplit.collect()","user":"anonymous","dateUpdated":"2022-05-01T06:03:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"<console>:30: error: not enough arguments for method collect: (pf: PartialFunction[org.apache.spark.rdd.RDD[String],B])(implicit bf: scala.collection.generic.CanBuildFrom[Array[org.apache.spark.rdd.RDD[String]],B,That])That.\nUnspecified value parameter pf.\n       fiftyFiftySplit.collect()\n                              ^\n"}]},"apps":[],"jobName":"paragraph_1651384996269_199214788","id":"20220501-060316_391994533","dateCreated":"2022-05-01T06:03:16+0000","dateStarted":"2022-05-01T06:03:19+0000","dateFinished":"2022-05-01T06:03:19+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:116"},{"text":"%spark.pyspark\nfiftyFiftySplit = words.randomSplit([0.5, 0.5])","user":"anonymous","dateUpdated":"2022-05-01T06:02:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651242748297_955900143","id":"20220429-143228_1112554472","dateCreated":"2022-04-29T14:32:28+0000","dateStarted":"2022-05-01T06:02:55+0000","dateFinished":"2022-05-01T06:02:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:117"},{"text":"%spark.pyspark\nfiftyFiftySplit.collect()","user":"anonymous","dateUpdated":"2022-05-01T06:03:46+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 1: fiftyFiftySplit.collect()\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-8568537563192626481.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'list' object has no attribute 'collect'\n"}]},"apps":[],"jobName":"paragraph_1651385004379_-972665962","id":"20220501-060324_428953582","dateCreated":"2022-05-01T06:03:24+0000","dateStarted":"2022-05-01T06:03:47+0000","dateFinished":"2022-05-01T06:03:47+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:118"},{"text":"%md\n# 12.6 액션\n- 트랜스포메이션 연산을 시작하려면 액션을 사용해야함\n- 데이터를 드라이버로 모으거나 외부 데이터소스로 보낼 수 있음","user":"anonymous","dateUpdated":"2022-05-01T12:10:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>12.6 액션</h1>\n<ul>\n  <li>트랜스포메이션 연산을 시작하려면 액션을 사용해야함</li>\n  <li>데이터를 드라이버로 모으거나 외부 데이터소스로 보낼 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651242810824_741774972","id":"20220429-143330_1539006677","dateCreated":"2022-04-29T14:33:30+0000","dateStarted":"2022-05-01T12:10:00+0000","dateFinished":"2022-05-01T12:10:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:119"},{"text":"%md\n### 12.6.1 reduce\n- RDD의 모든 값을 하나의 값으로 만듦","user":"anonymous","dateUpdated":"2022-05-01T12:12:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.6.1 reduce</h3>\n<ul>\n  <li>RDD의 모든 값을 하나의 값으로 만듦</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385028788_1613409564","id":"20220501-060348_795264763","dateCreated":"2022-05-01T06:03:48+0000","dateStarted":"2022-05-01T12:12:17+0000","dateFinished":"2022-05-01T12:12:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:120"},{"text":"spark.sparkContext.parallelize(1 to 20).reduce(_ + _) // 210","user":"anonymous","dateUpdated":"2022-05-01T12:11:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res62: Int = 210\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=33"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407002888_1399424390","id":"20220501-121002_444684488","dateCreated":"2022-05-01T12:10:02+0000","dateStarted":"2022-05-01T12:11:28+0000","dateFinished":"2022-05-01T12:11:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:121"},{"text":"%spark.pyspark\nspark.sparkContext.parallelize(range(1, 21)).reduce(lambda x, y: x + y) # 210","user":"anonymous","dateUpdated":"2022-05-01T12:11:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"210\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=34"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407058842_1647723652","id":"20220501-121058_1806580769","dateCreated":"2022-05-01T12:10:58+0000","dateStarted":"2022-05-01T12:11:30+0000","dateFinished":"2022-05-01T12:11:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:122"},{"text":"%md\n- 파티션에 대한 리듀스 연산은 비결정적 특성을 가짐\n    - 비결정적 특성: 원인이 동일하더라도 결과가 매번 달라질 수 있다는 의미\n- 단어의 길이가 10인 'definitive'나 'processing' 중 하나가 leftWord 변수에 할당될 수 잇음\n- 즉, 실행할 때마다 다른 결과를 반환할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T12:14:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>파티션에 대한 리듀스 연산은 비결정적 특성을 가짐\n    <ul>\n      <li>비결정적 특성: 원인이 동일하더라도 결과가 매번 달라질 수 있다는 의미</li>\n    </ul>\n  </li>\n  <li>단어의 길이가 10인 &lsquo;definitive&rsquo;나 &lsquo;processing&rsquo; 중 하나가 leftWord 변수에 할당될 수 잇음</li>\n  <li>즉, 실행할 때마다 다른 결과를 반환할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651407194106_123330693","id":"20220501-121314_1312916951","dateCreated":"2022-05-01T12:13:14+0000","dateStarted":"2022-05-01T12:14:52+0000","dateFinished":"2022-05-01T12:14:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:123"},{"text":"words.collect()","user":"anonymous","dateUpdated":"2022-05-01T12:20:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res111: Array[String] = Array(Spark, The, Definitive, Guide, :, Big, Data, Processing, Made, Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=484"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407633128_-882379411","id":"20220501-122033_595544870","dateCreated":"2022-05-01T12:20:33+0000","dateStarted":"2022-05-01T12:20:38+0000","dateFinished":"2022-05-01T12:20:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:124"},{"text":"def wordLengthReducer(leftWord:String, rightWord:String): String = {\n  if (leftWord.length > rightWord.length)\n    return leftWord\n  else\n    return rightWord\n}\n\nwords.reduce(wordLengthReducer)","user":"anonymous","dateUpdated":"2022-05-01T12:19:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"wordLengthReducer: (leftWord: String, rightWord: String)String\nres92: String = Definitive\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=473"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407031036_923647520","id":"20220501-121031_1652552321","dateCreated":"2022-05-01T12:10:31+0000","dateStarted":"2022-05-01T12:19:19+0000","dateFinished":"2022-05-01T12:19:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:125"},{"text":"words.reduce(wordLengthReducer)","user":"anonymous","dateUpdated":"2022-05-01T12:19:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res94: String = Processing\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=474"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407560601_-87067881","id":"20220501-121920_86158127","dateCreated":"2022-05-01T12:19:20+0000","dateStarted":"2022-05-01T12:19:21+0000","dateFinished":"2022-05-01T12:19:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:126"},{"text":"%spark.pyspark\ndef wordLengthReducer(leftWord, rightWord):\n  if len(leftWord) > len(rightWord):\n    return leftWord\n  else:\n    return rightWord\n\nwords.reduce(wordLengthReducer)","user":"anonymous","dateUpdated":"2022-05-01T12:19:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'Processing'\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=472"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407065900_-1676909618","id":"20220501-121105_1403929313","dateCreated":"2022-05-01T12:11:05+0000","dateStarted":"2022-05-01T12:19:14+0000","dateFinished":"2022-05-01T12:19:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:127"},{"text":"%spark.pyspark\nwords.reduce(wordLengthReducer)","user":"anonymous","dateUpdated":"2022-05-01T12:19:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'Processing'\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=476"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407565852_-1592963417","id":"20220501-121925_1440645070","dateCreated":"2022-05-01T12:19:25+0000","dateStarted":"2022-05-01T12:19:29+0000","dateFinished":"2022-05-01T12:19:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:128"},{"text":"%md\n- 파티션을 하나로 하니까 항상 결과가 같음","user":"anonymous","dateUpdated":"2022-05-01T12:19:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>파티션을 하나로 하니까 항상 결과가 같음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651407367410_-1217407735","id":"20220501-121607_1869915930","dateCreated":"2022-05-01T12:16:07+0000","dateStarted":"2022-05-01T12:19:38+0000","dateFinished":"2022-05-01T12:19:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:129"},{"text":"var words_2 = spark.sparkContext.parallelize(myCollection, 1)","user":"anonymous","dateUpdated":"2022-05-01T12:19:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"words_2: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[536] at parallelize at <console>:25\n"}]},"apps":[],"jobName":"paragraph_1651407347282_-400754343","id":"20220501-121547_1398824911","dateCreated":"2022-05-01T12:15:47+0000","dateStarted":"2022-05-01T12:19:54+0000","dateFinished":"2022-05-01T12:19:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:130"},{"text":"words_2.reduce(wordLengthReducer)","user":"anonymous","dateUpdated":"2022-05-01T12:20:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res109: String = Processing\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=483"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407598457_974179011","id":"20220501-121958_1453236600","dateCreated":"2022-05-01T12:19:58+0000","dateStarted":"2022-05-01T12:20:04+0000","dateFinished":"2022-05-01T12:20:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:131"},{"text":"%md\n### 12.6.2 count","user":"anonymous","dateUpdated":"2022-05-01T06:06:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.6.2 count</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385036547_678522055","id":"20220501-060356_600738182","dateCreated":"2022-05-01T06:03:56+0000","dateStarted":"2022-05-01T06:06:56+0000","dateFinished":"2022-05-01T06:06:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:132"},{"text":"words.count()","user":"anonymous","dateUpdated":"2022-05-01T12:21:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res113: Long = 10\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=485"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407041254_-359885192","id":"20220501-121041_1975041844","dateCreated":"2022-05-01T12:10:41+0000","dateStarted":"2022-05-01T12:21:10+0000","dateFinished":"2022-05-01T12:21:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:133"},{"text":"%md\n#### countApprox\n- count함수의 근사치를 제한 시간 내에 계산\n- 제한 시간 초과 시 불완전한 결과 반환\n- 신뢰도(confidence)는 실제로 연산한 결과와의 오차율을 의미\n    - ex) 0.9면 실제 연산 결과와 동일한 값이 90% 이상","user":"anonymous","dateUpdated":"2022-05-01T12:22:41+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>countApprox</h4>\n<ul>\n  <li>count함수의 근사치를 제한 시간 내에 계산</li>\n  <li>제한 시간 초과 시 불완전한 결과 반환</li>\n  <li>신뢰도(confidence)는 실제로 연산한 결과와의 오차율을 의미\n    <ul>\n      <li>ex) 0.9면 실제 연산 결과와 동일한 값이 90% 이상</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385163775_-88723872","id":"20220501-060603_1158634786","dateCreated":"2022-05-01T06:06:03+0000","dateStarted":"2022-05-01T12:22:41+0000","dateFinished":"2022-05-01T12:22:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:134"},{"text":"val confidence = 0.95\nval timeoutMilliseconds = 400\nwords.countApprox(timeoutMilliseconds, confidence)","user":"anonymous","dateUpdated":"2022-05-01T12:23:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"confidence: Double = 0.95\ntimeoutMilliseconds: Int = 400\nres115: org.apache.spark.partial.PartialResult[org.apache.spark.partial.BoundedDouble] = (final: [10.000, 10.000])\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=486"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407676913_636941055","id":"20220501-122116_887922920","dateCreated":"2022-05-01T12:21:16+0000","dateStarted":"2022-05-01T12:23:04+0000","dateFinished":"2022-05-01T12:23:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:135"},{"text":"%spark.pyspark\nconfidence = 0.95\ntimeout = 400\nwords.countApprox(timeout, confidence)","user":"anonymous","dateUpdated":"2022-05-01T12:24:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=487"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407888955_-1474051581","id":"20220501-122448_2118681415","dateCreated":"2022-05-01T12:24:48+0000","dateStarted":"2022-05-01T12:24:53+0000","dateFinished":"2022-05-01T12:24:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:136"},{"text":"%md\n#### countApproxDistinct\n- streamlib 관련 논문인 'HyperLogLog 실전 활용: 최신 카니널리티 추정 알고리즘 엔지니어링(HyperLogLog in Practice: Algorithmic Engineering of a State-of-the-Art Cardinality Estimation Algorithm)'을 기반으로 두 가지 구현체가 있음","user":"anonymous","dateUpdated":"2022-05-01T12:27:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>countApproxDistinct</h4>\n<ul>\n  <li>streamlib 관련 논문인 &lsquo;HyperLogLog 실전 활용: 최신 카니널리티 추정 알고리즘 엔지니어링(HyperLogLog in Practice: Algorithmic Engineering of a State-of-the-Art Cardinality Estimation Algorithm)&rsquo;을 기반으로 두 가지 구현체가 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385177632_-643171490","id":"20220501-060617_9432199","dateCreated":"2022-05-01T06:06:17+0000","dateStarted":"2022-05-01T12:27:44+0000","dateFinished":"2022-05-01T12:27:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:137"},{"text":"%md\n- 첫 번째 구현체: 상대 정확도를 파라미터로 사용하는 방식\n    - 상대 정확도(relative accuracy)값이 작으면 더 많은 메모리 공간을 사용\n        - 0.000017보단 커야함","user":"anonymous","dateUpdated":"2022-05-01T12:28:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>첫 번째 구현체: 상대 정확도를 파라미터로 사용하는 방식\n    <ul>\n      <li>상대 정확도(relative accuracy)값이 작으면 더 많은 메모리 공간을 사용\n        <ul>\n          <li>0.000017보단 커야함</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651407967077_-1001517010","id":"20220501-122607_33056368","dateCreated":"2022-05-01T12:26:07+0000","dateStarted":"2022-05-01T12:28:35+0000","dateFinished":"2022-05-01T12:28:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:138"},{"text":"words.countApproxDistinct(0.05)","user":"anonymous","dateUpdated":"2022-05-01T12:28:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res117: Long = 10\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=488"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407799757_978910309","id":"20220501-122319_622378334","dateCreated":"2022-05-01T12:23:19+0000","dateStarted":"2022-05-01T12:28:44+0000","dateFinished":"2022-05-01T12:28:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:139"},{"text":"%spark.pyspark\nwords.countApproxDistinct(0.05)","user":"anonymous","dateUpdated":"2022-05-01T12:33:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"10L\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=490"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651408377457_1210858668","id":"20220501-123257_88281363","dateCreated":"2022-05-01T12:32:57+0000","dateStarted":"2022-05-01T12:33:04+0000","dateFinished":"2022-05-01T12:33:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:140"},{"text":"%spark.pyspark\nwords.countApproxDistinct(0.000017)","user":"anonymous","dateUpdated":"2022-05-01T12:33:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 1: words.countApproxDistinct(0.000017)\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-8568537563192626481.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\n  File \"/spark-2.3.2-bin-hadoop2.7/python/lib/pyspark.zip/pyspark/rdd.py\", line 2372, in countApproxDistinct\n    return hashRDD._to_java_object_rdd().countApproxDistinct(relativeSD)\n  File \"/spark-2.3.2-bin-hadoop2.7/python/lib/py4j-0.10.7-src.zip/py4j/java_gateway.py\", line 1257, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/spark-2.3.2-bin-hadoop2.7/python/lib/pyspark.zip/pyspark/sql/utils.py\", line 79, in deco\n    raise IllegalArgumentException(s.split(': ', 1)[1], stackTrace)\nIllegalArgumentException: u'requirement failed: accuracy (1.7E-5) must be greater than 0.000017'\n"}]},"apps":[],"jobName":"paragraph_1651408396907_847287056","id":"20220501-123316_929281086","dateCreated":"2022-05-01T12:33:16+0000","dateStarted":"2022-05-01T12:33:21+0000","dateFinished":"2022-05-01T12:33:21+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:141"},{"text":"%md\n- 두 번째 구현체: 상대 정확도를 좀 더 세부적으로 지정하는 방식\n    - p: 일반 데이터의 정밀도를 나타내는 파라미터\n        - 1.054 / sqrt(2^p)\n    - sp: 희소 표현을 위한 정밀도를 나타내는 파라미터\n    - 카디널리티가 작을 때 0이 아닌 값(sp > p)을 설정하면 메모리 소비를 줄이면서 정확도를 높일 수 있음","user":"anonymous","dateUpdated":"2022-05-01T12:32:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>두 번째 구현체: 상대 정확도를 좀 더 세부적으로 지정하는 방식\n    <ul>\n      <li>p: 일반 데이터의 정밀도를 나타내는 파라미터\n        <ul>\n          <li>1.054 / sqrt(2^p)</li>\n        </ul>\n      </li>\n      <li>sp: 희소 표현을 위한 정밀도를 나타내는 파라미터</li>\n      <li>카디널리티가 작을 때 0이 아닌 값(sp &gt; p)을 설정하면 메모리 소비를 줄이면서 정확도를 높일 수 있음</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651408125273_-1343854126","id":"20220501-122845_1570592248","dateCreated":"2022-05-01T12:28:45+0000","dateStarted":"2022-05-01T12:32:36+0000","dateFinished":"2022-05-01T12:32:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:142"},{"text":"words.countApproxDistinct(4, 10)","user":"anonymous","dateUpdated":"2022-05-01T12:32:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res119: Long = 10\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=489"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407802138_733807175","id":"20220501-122322_513059143","dateCreated":"2022-05-01T12:23:22+0000","dateStarted":"2022-05-01T12:32:40+0000","dateFinished":"2022-05-01T12:32:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:143"},{"text":"%md\n#### countByValue\n- RDD 값의 개수를 구함\n- 결과 데이터셋을 드라이버의 메모리로 읽어들여 처리\n- 이 메서드를 사용하면 익스큐터의 연산 결과가 드라이버 메모리에 모두 적재됨\n- 그래서 결과가 작은 경우에만 사용해야함","user":"anonymous","dateUpdated":"2022-05-01T12:33:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>countByValue</h4>\n<ul>\n  <li>RDD 값의 개수를 구함</li>\n  <li>결과 데이터셋을 드라이버의 메모리로 읽어들여 처리</li>\n  <li>이 메서드를 사용하면 익스큐터의 연산 결과가 드라이버 메모리에 모두 적재됨</li>\n  <li>그래서 결과가 작은 경우에만 사용해야함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385190272_669470457","id":"20220501-060630_891884787","dateCreated":"2022-05-01T06:06:30+0000","dateStarted":"2022-05-01T12:33:40+0000","dateFinished":"2022-05-01T12:33:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:144"},{"text":"words.countByValue()","user":"anonymous","dateUpdated":"2022-05-01T12:35:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res121: scala.collection.Map[String,Long] = Map(Definitive -> 1, Simple -> 1, Processing -> 1, The -> 1, Spark -> 1, Made -> 1, Guide -> 1, Big -> 1, : -> 1, Data -> 1)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=491"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407808253_-1973040377","id":"20220501-122328_597883326","dateCreated":"2022-05-01T12:23:28+0000","dateStarted":"2022-05-01T12:35:29+0000","dateFinished":"2022-05-01T12:35:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:145"},{"text":"%spark.pyspark\nwords.countByValue()","user":"anonymous","dateUpdated":"2022-05-01T12:35:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defaultdict(<type 'int'>, {'Made': 1, 'Definitive': 1, 'Simple': 1, 'Big': 1, 'Processing': 1, 'Guide': 1, 'Spark': 1, ':': 1, 'Data': 1, 'The': 1})\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=492"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651408424068_2134519588","id":"20220501-123344_716987868","dateCreated":"2022-05-01T12:33:44+0000","dateStarted":"2022-05-01T12:35:31+0000","dateFinished":"2022-05-01T12:35:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:146"},{"text":"%md\n#### countByValueApprox\n- count 함수와 동일한 연산을 수행하지만 근사치를 계산함\n- 첫 번째 파라미터 =  제한 시간\n    - 반드시 제한 시간 내에 처리해야하며, 만약 제한 시간을 초과하면 불완전한 결과를 반환할 수 있음\n- 두 번째 파라미터 = 신뢰도\n    - 실제로 연산한 결과와의 오차율\n    - 0.9 설정 = 반복적으로 호출하면 실제 연산 결과와 동일한 값이 90% 이상 포함될 것으로 기대할 수 있다는 의미","user":"anonymous","dateUpdated":"2022-05-01T12:38:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>countByValueApprox</h4>\n<ul>\n  <li>count 함수와 동일한 연산을 수행하지만 근사치를 계산함</li>\n  <li>첫 번째 파라미터 = 제한 시간\n    <ul>\n      <li>반드시 제한 시간 내에 처리해야하며, 만약 제한 시간을 초과하면 불완전한 결과를 반환할 수 있음</li>\n    </ul>\n  </li>\n  <li>두 번째 파라미터 = 신뢰도\n    <ul>\n      <li>실제로 연산한 결과와의 오차율</li>\n      <li>0.9 설정 = 반복적으로 호출하면 실제 연산 결과와 동일한 값이 90% 이상 포함될 것으로 기대할 수 있다는 의미</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385187477_-685944650","id":"20220501-060627_1430898435","dateCreated":"2022-05-01T06:06:27+0000","dateStarted":"2022-05-01T12:38:07+0000","dateFinished":"2022-05-01T12:38:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:147"},{"text":"words.countByValueApprox(1000, 0.95)","user":"anonymous","dateUpdated":"2022-05-01T12:38:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res123: org.apache.spark.partial.PartialResult[scala.collection.Map[String,org.apache.spark.partial.BoundedDouble]] = (final: Map(Definitive -> [1.000, 1.000], Simple -> [1.000, 1.000], Processing -> [1.000, 1.000], The -> [1.000, 1.000], Spark -> [1.000, 1.000], Made -> [1.000, 1.000], Guide -> [1.000, 1.000], Big -> [1.000, 1.000], : -> [1.000, 1.000], Data -> [1.000, 1.000]))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=493"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407816961_-286380677","id":"20220501-122336_1151871560","dateCreated":"2022-05-01T12:23:36+0000","dateStarted":"2022-05-01T12:38:21+0000","dateFinished":"2022-05-01T12:38:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:148"},{"text":"%md\n### 12.6.3 first\n- 데이터셋의 첫 번째 값 반환","user":"anonymous","dateUpdated":"2022-05-01T12:34:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.6.3 first</h3>\n<ul>\n  <li>데이터셋의 첫 번째 값 반환</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385043288_1893116775","id":"20220501-060403_1501849687","dateCreated":"2022-05-01T06:04:03+0000","dateStarted":"2022-05-01T12:34:03+0000","dateFinished":"2022-05-01T12:34:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:149"},{"text":"words.first()","user":"anonymous","dateUpdated":"2022-05-01T12:38:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res125: String = Spark\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=494"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407819832_998862731","id":"20220501-122339_401661350","dateCreated":"2022-05-01T12:23:39+0000","dateStarted":"2022-05-01T12:38:54+0000","dateFinished":"2022-05-01T12:38:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:150"},{"text":"%spark.pyspark\nwords.first()","user":"anonymous","dateUpdated":"2022-05-01T12:38:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'Spark'\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=495"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651408448557_1614322514","id":"20220501-123408_1050813945","dateCreated":"2022-05-01T12:34:08+0000","dateStarted":"2022-05-01T12:38:56+0000","dateFinished":"2022-05-01T12:38:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:151"},{"text":"%md\n### 12.6.4 max와 min","user":"anonymous","dateUpdated":"2022-05-01T06:07:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.6.4 max와 min</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385041936_-1971698879","id":"20220501-060401_752572773","dateCreated":"2022-05-01T06:04:01+0000","dateStarted":"2022-05-01T06:07:03+0000","dateFinished":"2022-05-01T06:07:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:152"},{"text":"spark.sparkContext.parallelize(1 to 20).max()\nspark.sparkContext.parallelize(1 to 20).min()","user":"anonymous","dateUpdated":"2022-05-01T12:39:01+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res127: Int = 20\nres128: Int = 1\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=496","http://0927a691e26f:4040/jobs/job?id=497"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407830114_-258277398","id":"20220501-122350_640064121","dateCreated":"2022-05-01T12:23:50+0000","dateStarted":"2022-05-01T12:39:01+0000","dateFinished":"2022-05-01T12:39:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:153"},{"text":"%spark.pyspark\nspark.sparkContext.parallelize(range(1,20)).max()","user":"anonymous","dateUpdated":"2022-05-01T12:39:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"19\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=501"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651408457575_2019546234","id":"20220501-123417_80125227","dateCreated":"2022-05-01T12:34:17+0000","dateStarted":"2022-05-01T12:39:12+0000","dateFinished":"2022-05-01T12:39:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:154"},{"text":"%spark.pyspark\nspark.sparkContext.parallelize(range(1,20)).min()","user":"anonymous","dateUpdated":"2022-05-01T12:39:10+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=500"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651408747403_1904710939","id":"20220501-123907_346827344","dateCreated":"2022-05-01T12:39:07+0000","dateStarted":"2022-05-01T12:39:10+0000","dateFinished":"2022-05-01T12:39:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:155"},{"text":"%md\n### 12.6.5 take\n-  RDD에서 가져올 값의 개수를 파라미터로 사용\n- 이 메서드는 먼저 하나의 파티션을 스캔함\n- 그 다음 해당 파티션의 결과 수를 이용해 파라미터로 지정된 값을 만족하는 데 필요한 추가 파티션 수를 예측함","user":"anonymous","dateUpdated":"2022-05-01T12:34:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.6.5 take</h3>\n<ul>\n  <li>RDD에서 가져올 값의 개수를 파라미터로 사용</li>\n  <li>이 메서드는 먼저 하나의 파티션을 스캔함</li>\n  <li>그 다음 해당 파티션의 결과 수를 이용해 파라미터로 지정된 값을 만족하는 데 필요한 추가 파티션 수를 예측함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385039792_-1491234603","id":"20220501-060359_1918908292","dateCreated":"2022-05-01T06:03:59+0000","dateStarted":"2022-05-01T12:34:37+0000","dateFinished":"2022-05-01T12:34:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:156"},{"text":"words.take(5)\nwords.takeOrdered(5) // take 유사 함수\nwords.top(5) // take 유사 함수\nval withReplacement = true\nval numberToTake = 6\nval randomSeed = 100L\nwords.takeSample(withReplacement, numberToTake, randomSeed)","user":"anonymous","dateUpdated":"2022-05-01T12:45:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res130: Array[String] = Array(Spark, The, Definitive, Guide, :)\nres131: Array[String] = Array(:, Big, Data, Definitive, Guide)\nres132: Array[String] = Array(The, Spark, Simple, Processing, Made)\nwithReplacement: Boolean = true\nnumberToTake: Int = 6\nrandomSeed: Long = 100\nres133: Array[String] = Array(Guide, Spark, :, Simple, Simple, Spark)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=502","http://0927a691e26f:4040/jobs/job?id=503","http://0927a691e26f:4040/jobs/job?id=504","http://0927a691e26f:4040/jobs/job?id=505","http://0927a691e26f:4040/jobs/job?id=506"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651407836885_-810198186","id":"20220501-122356_1028243465","dateCreated":"2022-05-01T12:23:56+0000","dateStarted":"2022-05-01T12:44:53+0000","dateFinished":"2022-05-01T12:44:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:157"},{"text":"%spark.pyspark\nwords.take(5)","user":"anonymous","dateUpdated":"2022-05-01T12:45:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['Spark', 'The', 'Definitive', 'Guide', ':']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=510"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651408482652_776673201","id":"20220501-123442_1681387579","dateCreated":"2022-05-01T12:34:42+0000","dateStarted":"2022-05-01T12:45:19+0000","dateFinished":"2022-05-01T12:45:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:158"},{"text":"%spark.pyspark\nwords.takeOrdered(5)","user":"anonymous","dateUpdated":"2022-05-01T12:45:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[':', 'Big', 'Data', 'Definitive', 'Guide']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=511"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409111619_-251465129","id":"20220501-124511_1296234347","dateCreated":"2022-05-01T12:45:11+0000","dateStarted":"2022-05-01T12:45:24+0000","dateFinished":"2022-05-01T12:45:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:159"},{"text":"%spark.pyspark\nwords.top(5)","user":"anonymous","dateUpdated":"2022-05-01T12:45:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['The', 'Spark', 'Simple', 'Processing', 'Made']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=512"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409111072_2094878121","id":"20220501-124511_2103629368","dateCreated":"2022-05-01T12:45:11+0000","dateStarted":"2022-05-01T12:45:27+0000","dateFinished":"2022-05-01T12:45:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:160"},{"text":"%md\n## 12.7 파일 저장하기\n- RDD를 사용하면 일반적인 의미의 데이터소스에 저장할 수 없음\n- 전체 파티션을 순회하면서 각 파티션의 내용을 외부 데이터베이스에 저장해야함","user":"anonymous","dateUpdated":"2022-05-01T12:43:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.7 파일 저장하기</h2>\n<ul>\n  <li>RDD를 사용하면 일반적인 의미의 데이터소스에 저장할 수 없음</li>\n  <li>전체 파티션을 순회하면서 각 파티션의 내용을 외부 데이터베이스에 저장해야함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385096079_-1628452529","id":"20220501-060456_1223254969","dateCreated":"2022-05-01T06:04:56+0000","dateStarted":"2022-05-01T12:43:00+0000","dateFinished":"2022-05-01T12:43:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:161"},{"text":"%md\n### 12.7.1 saveAsTextFile","user":"anonymous","dateUpdated":"2022-05-01T12:47:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.7.1 saveAsTextFile</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385236232_2123896391","id":"20220501-060716_748852400","dateCreated":"2022-05-01T06:07:16+0000","dateStarted":"2022-05-01T12:47:49+0000","dateFinished":"2022-05-01T12:47:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:162"},{"text":"words.saveAsTextFile(\"file:/tmp/bookeTitle\")","user":"anonymous","dateUpdated":"2022-05-01T12:49:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=513"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409235610_1722726761","id":"20220501-124715_2074610665","dateCreated":"2022-05-01T12:47:15+0000","dateStarted":"2022-05-01T12:49:18+0000","dateFinished":"2022-05-01T12:49:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:163"},{"text":"%md\n- 압축 코덱을 설정하려면 하둡에서 사용 가능한 코덱을 임포트해야함","user":"anonymous","dateUpdated":"2022-05-01T12:48:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>압축 코덱을 설정하려면 하둡에서 사용 가능한 코덱을 임포트해야함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651409265587_615805809","id":"20220501-124745_1417121100","dateCreated":"2022-05-01T12:47:45+0000","dateStarted":"2022-05-01T12:48:58+0000","dateFinished":"2022-05-01T12:48:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:164"},{"text":"import org.apache.hadoop.io.compress.BZip2Codec\nwords.saveAsTextFile(\"file:/tmp/bookeTitleCompressed\", classOf[BZip2Codec])","user":"anonymous","dateUpdated":"2022-05-01T12:49:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.hadoop.io.compress.BZip2Codec\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=514"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409294025_441081784","id":"20220501-124814_1843309106","dateCreated":"2022-05-01T12:48:14+0000","dateStarted":"2022-05-01T12:49:31+0000","dateFinished":"2022-05-01T12:49:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:165"},{"text":"%spark.pyspark\nwords.saveAsTextFile('/FileStore/tables/bookeTitle')","user":"anonymous","dateUpdated":"2022-05-01T12:49:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=515"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409156753_-238851744","id":"20220501-124556_1305360340","dateCreated":"2022-05-01T12:45:56+0000","dateStarted":"2022-05-01T12:49:33+0000","dateFinished":"2022-05-01T12:49:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:166"},{"text":"%md\n### 12.7.2 시퀀스 파일\n- 시퀀스 파일은 바이너리 키-값 쌍으로 구성된 플랫 파일이며 맵리듀스의 입출력 포맷으로 널리 사용됨","user":"anonymous","dateUpdated":"2022-05-01T12:46:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.7.2 시퀀스 파일</h3>\n<ul>\n  <li>시퀀스 파일은 바이너리 키-값 쌍으로 구성된 플랫 파일이며 맵리듀스의 입출력 포맷으로 널리 사용됨</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385245955_-410138461","id":"20220501-060725_189734928","dateCreated":"2022-05-01T06:07:25+0000","dateStarted":"2022-05-01T12:46:42+0000","dateFinished":"2022-05-01T12:46:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:167"},{"text":"words.saveAsObjectFile(\"tmp/my/sequenceFilePath\")","user":"anonymous","dateUpdated":"2022-05-01T12:53:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=517"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409561269_-2143312981","id":"20220501-125241_1548191339","dateCreated":"2022-05-01T12:52:41+0000","dateStarted":"2022-05-01T12:53:00+0000","dateFinished":"2022-05-01T12:53:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:168"},{"text":"%spark.pyspark\nwords.saveAsSequenceFile('tmp/my/sequenceFilePath')","user":"anonymous","dateUpdated":"2022-05-01T12:53:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.saveAsSequenceFile.\n: org.apache.spark.SparkException: RDD element of type java.lang.String cannot be used\n\tat org.apache.spark.api.python.SerDeUtil$.pythonToPairRDD(SerDeUtil.scala:274)\n\tat org.apache.spark.api.python.PythonRDD$.saveAsHadoopFile(PythonRDD.scala:503)\n\tat org.apache.spark.api.python.PythonRDD$.saveAsSequenceFile(PythonRDD.scala:478)\n\tat org.apache.spark.api.python.PythonRDD.saveAsSequenceFile(PythonRDD.scala)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\n\n(<class 'py4j.protocol.Py4JJavaError'>, Py4JJavaError(u'An error occurred while calling z:org.apache.spark.api.python.PythonRDD.saveAsSequenceFile.\\n', JavaObject id=o4463), <traceback object at 0x7f13074eeab8>)"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=518"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651409163899_-1092757063","id":"20220501-124603_1678853095","dateCreated":"2022-05-01T12:46:03+0000","dateStarted":"2022-05-01T12:53:14+0000","dateFinished":"2022-05-01T12:53:14+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:169"},{"text":"%md\n### 12.7.3 하둡 파일\n- 클래스, 출력 포맷, 하둡 설정 그리고 압축 방식을 지정할 수 있음","user":"anonymous","dateUpdated":"2022-05-01T12:54:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.7.3 하둡 파일</h3>\n<ul>\n  <li>클래스, 출력 포맷, 하둡 설정 그리고 압축 방식을 지정할 수 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385244362_1103532825","id":"20220501-060724_1567876220","dateCreated":"2022-05-01T06:07:24+0000","dateStarted":"2022-05-01T12:54:30+0000","dateFinished":"2022-05-01T12:54:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:170"},{"text":"%spark.pyspark\nwords.saveAsHadoopFile('tmp/my/hadoopFilePath')","user":"anonymous","dateUpdated":"2022-05-01T12:55:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Fail to execute line 1: words.saveAsHadoopFile('tmp/my/hadoopFilePath')\nTraceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-8568537563192626481.py\", line 380, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nTypeError: saveAsHadoopFile() takes at least 3 arguments (2 given)\n"}]},"apps":[],"jobName":"paragraph_1651409172854_-622962914","id":"20220501-124612_178310770","dateCreated":"2022-05-01T12:46:12+0000","dateStarted":"2022-05-01T12:55:03+0000","dateFinished":"2022-05-01T12:55:03+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:171"},{"text":"%md\n## 12.8 캐싱\n- RDD 캐싱도 구조적 API와 동일한 원칙 적용","user":"anonymous","dateUpdated":"2022-05-01T12:55:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.8 캐싱</h2>\n<ul>\n  <li>RDD 캐싱도 구조적 API와 동일한 원칙 적용</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385289250_-1011866374","id":"20220501-060809_818326620","dateCreated":"2022-05-01T06:08:09+0000","dateStarted":"2022-05-01T12:55:33+0000","dateFinished":"2022-05-01T12:55:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:172"},{"text":"words.cache()\nwords.unpersist()\nwords.cache()","user":"anonymous","dateUpdated":"2022-05-01T12:57:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res149: words.type = myWords ParallelCollectionRDD[37] at parallelize at <console>:25\nres150: words.type = myWords ParallelCollectionRDD[37] at parallelize at <console>:25\nres151: words.type = myWords ParallelCollectionRDD[37] at parallelize at <console>:25\n"}]},"apps":[],"jobName":"paragraph_1651409826075_-909704035","id":"20220501-125706_45205860","dateCreated":"2022-05-01T12:57:06+0000","dateStarted":"2022-05-01T12:57:40+0000","dateFinished":"2022-05-01T12:57:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"text":"%spark.pyspark\nwords.cache()","user":"anonymous","dateUpdated":"2022-05-01T12:57:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myWords ParallelCollectionRDD[516] at parallelize at PythonRDD.scala:194\n"}]},"apps":[],"jobName":"paragraph_1651409180707_2107298309","id":"20220501-124620_655519620","dateCreated":"2022-05-01T12:46:20+0000","dateStarted":"2022-05-01T12:57:17+0000","dateFinished":"2022-05-01T12:57:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"text":"%md\n- 저장소 수준은 싱글턴 객체인 org.apache.spark.storage.StorageLevel의 속성(메모리, 디스크 또는 둘의 조합 그리고 오프힙 등) 중 하나로 지정할 수 있음\n- 저장소 수준을 지정하면 아래처럼 저장소 수준을 조회할 수 있음\n    - 20장에서 자세히 설명","user":"anonymous","dateUpdated":"2022-05-01T12:59:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>저장소 수준은 싱글턴 객체인 org.apache.spark.storage.StorageLevel의 속성(메모리, 디스크 또는 둘의 조합 그리고 오프힙 등) 중 하나로 지정할 수 있음</li>\n  <li>저장소 수준을 지정하면 아래처럼 저장소 수준을 조회할 수 있음\n    <ul>\n      <li>20장에서 자세히 설명</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651409886058_-653009177","id":"20220501-125806_1815962820","dateCreated":"2022-05-01T12:58:06+0000","dateStarted":"2022-05-01T12:59:23+0000","dateFinished":"2022-05-01T12:59:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"text":"words.getStorageLevel","user":"anonymous","dateUpdated":"2022-05-01T12:59:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res154: org.apache.spark.storage.StorageLevel = StorageLevel(memory, deserialized, 1 replicas)\n"}]},"apps":[],"jobName":"paragraph_1651409766870_-1971023876","id":"20220501-125606_273785979","dateCreated":"2022-05-01T12:56:06+0000","dateStarted":"2022-05-01T12:59:34+0000","dateFinished":"2022-05-01T12:59:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"%spark.pyspark\nwords.getStorageLevel()","user":"anonymous","dateUpdated":"2022-05-01T12:59:25+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"StorageLevel(False, True, False, False, 1)\n"}]},"apps":[],"jobName":"paragraph_1651409765118_-1912766323","id":"20220501-125605_2114421939","dateCreated":"2022-05-01T12:56:05+0000","dateStarted":"2022-05-01T12:59:25+0000","dateFinished":"2022-05-01T12:59:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"text":"%md\n## 12.9 체크포인팅\n- DataFrame API에서 사용할 수 없는 기능 중 하나가 체크포인팅\n- 체크포인팅은 RDD를 디스크에 저장하는 방식\n- 나중에 저장된 RDD를 참조할 때 원본 데이터 소스를 다시 계산하지 않고 <strong>디스크에 저장된 중간 결과 파티션 참조</strong>\n    - 메모리에 저장하지 않고 디스크에 저장한다는 사실만 제외하면 캐싱과 유사\n    - 반복적인 연산 수행 시 매우 유용","user":"anonymous","dateUpdated":"2022-05-01T13:02:03+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.9 체크포인팅</h2>\n<ul>\n  <li>DataFrame API에서 사용할 수 없는 기능 중 하나가 체크포인팅</li>\n  <li>체크포인팅은 RDD를 디스크에 저장하는 방식</li>\n  <li>나중에 저장된 RDD를 참조할 때 원본 데이터 소스를 다시 계산하지 않고 <strong>디스크에 저장된 중간 결과 파티션 참조</strong>\n    <ul>\n      <li>메모리에 저장하지 않고 디스크에 저장한다는 사실만 제외하면 캐싱과 유사</li>\n      <li>반복적인 연산 수행 시 매우 유용</li>\n    </ul>\n  </li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385310980_-652456477","id":"20220501-060830_1707922177","dateCreated":"2022-05-01T06:08:30+0000","dateStarted":"2022-05-01T13:02:03+0000","dateFinished":"2022-05-01T13:02:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:178"},{"text":"spark.sparkContext.setCheckpointDir(\"/some/path/for/checkpointing\")","user":"anonymous","dateUpdated":"2022-05-01T13:03:26+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651410180332_-1220237112","id":"20220501-130300_532683796","dateCreated":"2022-05-01T13:03:00+0000","dateStarted":"2022-05-01T13:03:26+0000","dateFinished":"2022-05-01T13:03:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:179"},{"text":"%spark.pyspark\nspark.sparkContext.setCheckpointDir('/some/path/for/checkpointing')","user":"anonymous","dateUpdated":"2022-05-01T13:03:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651410000643_1024336232","id":"20220501-130000_1613395337","dateCreated":"2022-05-01T13:00:00+0000","dateStarted":"2022-05-01T13:03:29+0000","dateFinished":"2022-05-01T13:03:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:180"},{"text":"%md\n- 아래를 실행하면 경로만 생기고 아무 파일도 안 생기는데 뭔지 잘 모르겠음","user":"anonymous","dateUpdated":"2022-05-01T13:04:29+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>아래를 실행하면 경로만 생기고 아무 파일도 안 생기는데 뭔지 잘 모르겠음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651410249775_-1776095651","id":"20220501-130409_2074842577","dateCreated":"2022-05-01T13:04:09+0000","dateStarted":"2022-05-01T13:04:29+0000","dateFinished":"2022-05-01T13:04:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:181"},{"text":"words.checkpoint()","user":"anonymous","dateUpdated":"2022-05-01T13:03:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651410192179_124070281","id":"20220501-130312_732573070","dateCreated":"2022-05-01T13:03:12+0000","dateStarted":"2022-05-01T13:03:32+0000","dateFinished":"2022-05-01T13:03:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:182"},{"text":"%spark.pyspark\nwords.checkpoint()","user":"anonymous","dateUpdated":"2022-05-01T13:03:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1651410012012_670282222","id":"20220501-130012_1855251686","dateCreated":"2022-05-01T13:00:12+0000","dateStarted":"2022-05-01T13:03:34+0000","dateFinished":"2022-05-01T13:03:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:183"},{"text":"%md\n## 12.10 RDD를 시스템 명령으로 전송하기\n- pipe 메서드를 사용하면 파이핑 요소로 생성된 RDD를 외부 프로세스로 전달 가능\n- 이때 외부 프로세스는 파티션마다 한 번씩 처리해 결과 RDD를 생성","user":"anonymous","dateUpdated":"2022-05-01T13:05:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.10 RDD를 시스템 명령으로 전송하기</h2>\n<ul>\n  <li>pipe 메서드를 사용하면 파이핑 요소로 생성된 RDD를 외부 프로세스로 전달 가능</li>\n  <li>이때 외부 프로세스는 파티션마다 한 번씩 처리해 결과 RDD를 생성</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385335589_129692026","id":"20220501-060855_1914341873","dateCreated":"2022-05-01T06:08:55+0000","dateStarted":"2022-05-01T13:05:45+0000","dateFinished":"2022-05-01T13:05:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:184"},{"text":"// wc -l: 파일 내 전체 라인 수 출력\n// 파티션 2개, 각 파티션은 5개의 로우를 가짐\nwords.pipe(\"wc -l\").collect()","user":"anonymous","dateUpdated":"2022-05-01T13:19:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res162: Array[String] = Array(5, 5)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=519"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410321555_-1844121873","id":"20220501-130521_1852062661","dateCreated":"2022-05-01T13:05:21+0000","dateStarted":"2022-05-01T13:05:35+0000","dateFinished":"2022-05-01T13:05:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:185"},{"text":"%spark.pyspark\n# wc -l: 파일 내 전체 라인 수 출력\n# 파티션 2개, 각 파티션은 5개의 로우를 가짐\nwords.pipe('wc -l').collect()","user":"anonymous","dateUpdated":"2022-05-01T13:19:35+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[u'5', u'5']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=520"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410026143_-1813846994","id":"20220501-130026_1413288303","dateCreated":"2022-05-01T13:00:26+0000","dateStarted":"2022-05-01T13:05:37+0000","dateFinished":"2022-05-01T13:05:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:186"},{"text":"%md\n## 12.10.1 mapPartitions\n- 이전 예제에서 보았듯이 스파크는 실제 코드를 실행할 때 파티션 단위로 동작함\n    - map 함수에서 반환하는 RDD의 진짜 형태는 mapPartitionsRDD임\n- mapPartitions는 로우 단위가 아닌 <strong>파티션 단위로 map 연산</strong> 수행 가능\n- 클러스터에서 물리적인 단위로 개별 파티션을 처리하기 때문(로우 단위로 처리하지 않음)","user":"anonymous","dateUpdated":"2022-05-01T13:08:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>12.10.1 mapPartitions</h2>\n<ul>\n  <li>이전 예제에서 보았듯이 스파크는 실제 코드를 실행할 때 파티션 단위로 동작함\n    <ul>\n      <li>map 함수에서 반환하는 RDD의 진짜 형태는 mapPartitionsRDD임</li>\n    </ul>\n  </li>\n  <li>mapPartitions는 로우 단위가 아닌 <strong>파티션 단위로 map 연산</strong> 수행 가능</li>\n  <li>클러스터에서 물리적인 단위로 개별 파티션을 처리하기 때문(로우 단위로 처리하지 않음)</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385341595_55498712","id":"20220501-060901_1727442388","dateCreated":"2022-05-01T06:09:01+0000","dateStarted":"2022-05-01T13:08:52+0000","dateFinished":"2022-05-01T13:08:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:187"},{"text":"words.mapPartitions(part => Iterator[Int](1)).sum() // 2\n// 각 파티션(두 개)에 '1' 값을 생성했으니 합산하면 2가 나오게됨","user":"anonymous","dateUpdated":"2022-05-01T13:19:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651410553075_829540510","id":"20220501-130913_1390679293","dateCreated":"2022-05-01T13:09:13+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:188"},{"text":"%spark.pyspark\nwords.mapPartitions(lambda part: [1]).sum() # 2\n# 각 파티션(두 개)에 '1' 값을 생성했으니 합산하면 2가 나오게됨","user":"anonymous","dateUpdated":"2022-05-01T13:19:13+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1651410538954_1510355089","id":"20220501-130858_953513365","dateCreated":"2022-05-01T13:08:58+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:189"},{"text":"%md\n#### mapPartitionWithIndex\n- 파티션 인덱스를 사용해 각 레코드가 속한 데이터셋이 어디에 있는지 알아낼 수 있음\n- 이 메서드를 사용하려면 인덱스와 파티션의 모든 아이템을 순회하는 이터레이터를 가진 함수를 인수로 지정해야함","user":"anonymous","dateUpdated":"2022-05-01T13:13:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>mapPartitionWithIndex</h4>\n<ul>\n  <li>파티션 인덱스를 사용해 각 레코드가 속한 데이터셋이 어디에 있는지 알아낼 수 있음</li>\n  <li>이 메서드를 사용하려면 인덱스와 파티션의 모든 아이템을 순회하는 이터레이터를 가진 함수를 인수로 지정해야함</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385358596_1747200769","id":"20220501-060918_602673214","dateCreated":"2022-05-01T06:09:18+0000","dateStarted":"2022-05-01T13:13:51+0000","dateFinished":"2022-05-01T13:13:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:190"},{"text":"def indexedFunc(partitionIndex:Int, withinPartIterator: Iterator[String]) = {\n  withinPartIterator.toList.map(\n    value => s\"Partition: $partitionIndex => $value\").iterator\n}\nwords.mapPartitionsWithIndex(indexedFunc).collect()","user":"anonymous","dateUpdated":"2022-05-01T13:13:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"indexedFunc: (partitionIndex: Int, withinPartIterator: Iterator[String])Iterator[String]\nres164: Array[String] = Array(Partition: 0 => Spark, Partition: 0 => The, Partition: 0 => Definitive, Partition: 0 => Guide, Partition: 0 => :, Partition: 1 => Big, Partition: 1 => Data, Partition: 1 => Processing, Partition: 1 => Made, Partition: 1 => Simple)\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=521"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410566791_1287717586","id":"20220501-130926_2141146699","dateCreated":"2022-05-01T13:09:26+0000","dateStarted":"2022-05-01T13:13:57+0000","dateFinished":"2022-05-01T13:13:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:191"},{"text":"%spark.pyspark\ndef indexedFunc(partitionIndex, withinPartIterator):\n  return [\"partition: {} => {}\".format(partitionIndex, x) for x in withinPartIterator]\nwords.mapPartitionsWithIndex(indexedFunc).collect()","user":"anonymous","dateUpdated":"2022-05-01T13:14:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['partition: 0 => Spark', 'partition: 0 => The', 'partition: 0 => Definitive', 'partition: 0 => Guide', 'partition: 0 => :', 'partition: 1 => Big', 'partition: 1 => Data', 'partition: 1 => Processing', 'partition: 1 => Made', 'partition: 1 => Simple']\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=522"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410577269_-1805721142","id":"20220501-130937_1538621993","dateCreated":"2022-05-01T13:09:37+0000","dateStarted":"2022-05-01T13:14:01+0000","dateFinished":"2022-05-01T13:14:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:192"},{"text":"%md\n### 12.10.2 foreachPartition\n- mapPartitions는 처리 결과를 반환하지만 foreachPartition은 파티션의 모든 데이터를 순회할 뿐 결과 반환하지 않음\n- 각 파티션의 데이터를 DB에 저장하는 것과 같이 개별 파티션에서 특정 작업을 수행하는 데 적합\n- 실제로 많은 데이터소스 커넥터에서 이 함수를 사용하고 있음","user":"anonymous","dateUpdated":"2022-05-01T13:15:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.10.2 foreachPartition</h3>\n<ul>\n  <li>mapPartitions는 처리 결과를 반환하지만 foreachPartition은 파티션의 모든 데이터를 순회할 뿐 결과 반환하지 않음</li>\n  <li>각 파티션의 데이터를 DB에 저장하는 것과 같이 개별 파티션에서 특정 작업을 수행하는 데 적합</li>\n  <li>실제로 많은 데이터소스 커넥터에서 이 함수를 사용하고 있음</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651410062218_-874535819","id":"20220501-130102_463284487","dateCreated":"2022-05-01T13:01:02+0000","dateStarted":"2022-05-01T13:15:07+0000","dateFinished":"2022-05-01T13:15:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"words.foreachPartition { iter =>\n  import java.io._\n  import scala.util.Random\n  val randomFileName = new Random().nextInt()\n  val pw = new PrintWriter(new File(s\"/tmp/random-file-${randomFileName}.txt\"))\n  while (iter.hasNext) {\n      pw.write(iter.next())\n  }\n  pw.close()\n}","user":"anonymous","dateUpdated":"2022-05-01T13:15:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=523"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410649479_-1442326033","id":"20220501-131049_1991751320","dateCreated":"2022-05-01T13:10:49+0000","dateStarted":"2022-05-01T13:15:11+0000","dateFinished":"2022-05-01T13:15:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"%md\n### 12.10.3 glom\n- 데이터셋의 모든 파티션을 배열로 변환\n- 데이터를 드라이버로 모으고 데이터가 존재하는 파티션의 배열이 필요한 경우에 매우 유용","user":"anonymous","dateUpdated":"2022-05-01T13:15:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>12.10.3 glom</h3>\n<ul>\n  <li>데이터셋의 모든 파티션을 배열로 변환</li>\n  <li>데이터를 드라이버로 모으고 데이터가 존재하는 파티션의 배열이 필요한 경우에 매우 유용</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1651385374299_1501681384","id":"20220501-060934_1967700314","dateCreated":"2022-05-01T06:09:34+0000","dateStarted":"2022-05-01T13:15:59+0000","dateFinished":"2022-05-01T13:15:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"spark.sparkContext.parallelize(Seq(\"Hello\", \"World\"), 2).glom().collect()\n// Array(Array(Hello), Array(World))","user":"anonymous","dateUpdated":"2022-05-01T13:16:09+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res168: Array[Array[String]] = Array(Array(Hello), Array(World))\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=524"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410654739_1356802077","id":"20220501-131054_1381104606","dateCreated":"2022-05-01T13:10:54+0000","dateStarted":"2022-05-01T13:16:02+0000","dateFinished":"2022-05-01T13:16:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"%spark.pyspark\nspark.sparkContext.parallelize([\"Hello\", \"World\"], 2).glom().collect()\n# [['Hello'], ['World']]","user":"anonymous","dateUpdated":"2022-05-01T13:16:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[['Hello'], ['World']]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://0927a691e26f:4040/jobs/job?id=525"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1651410633842_-426315434","id":"20220501-131033_1456339880","dateCreated":"2022-05-01T13:10:33+0000","dateStarted":"2022-05-01T13:16:05+0000","dateFinished":"2022-05-01T13:16:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"}],"name":"Chapter12","id":"2H1YRU3BC","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}